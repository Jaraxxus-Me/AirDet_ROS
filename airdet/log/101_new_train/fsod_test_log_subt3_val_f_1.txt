Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_1',)"], resume=False)
[32m[11/10 22:34:18 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/10 22:34:20 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/10 22:34:20 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_1',)"], resume=False)
[32m[11/10 22:34:20 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt3.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 3
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/3shot'

[32m[11/10 22:34:20 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_f_1',)
  TESTSHOTS: 3
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/3shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/10 22:34:20 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/config.yaml
[32m[11/10 22:34:27 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/10 22:34:27 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/10 22:34:28 d2.data.datasets.coco]: [0mLoaded 2229 images in COCO format from datasets/SUBT/use/val_f_1/new_annotations/val_f_1.json
[32m[11/10 22:34:28 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 165          |    rop     | 926          |      ven      | 639          |
|    helme    | 256          |    dril    | 523          | fire exting.. | 217          |
| helmet-ligh | 177          |  survivo   | 19           |   cell phon   | 0            |
|     cub     | 264          |            |              |               |              |
|    total    | 3186         |            |              |               |              |[0m
[32m[11/10 22:34:28 d2.data.common]: [0mSerializing 2229 elements to byte tensors and concatenating them all ...
[32m[11/10 22:34:28 d2.data.common]: [0mSerialized dataset takes 0.56 MiB
[32m[11/10 22:34:28 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/10 22:34:28 d2.evaluation.evaluator]: [0mStart inference on 2229 images
[32m[11/10 22:34:35 d2.evaluation.evaluator]: [0mInference done 11/2229. 0.5340 s / img. ETA=0:21:20
[32m[11/10 22:34:40 d2.evaluation.evaluator]: [0mInference done 20/2229. 0.5334 s / img. ETA=0:21:37
[32m[11/10 22:34:45 d2.evaluation.evaluator]: [0mInference done 29/2229. 0.5325 s / img. ETA=0:21:20
[32m[11/10 22:34:50 d2.evaluation.evaluator]: [0mInference done 38/2229. 0.5330 s / img. ETA=0:21:13
[32m[11/10 22:34:56 d2.evaluation.evaluator]: [0mInference done 47/2229. 0.5335 s / img. ETA=0:21:07
[32m[11/10 22:35:01 d2.evaluation.evaluator]: [0mInference done 56/2229. 0.5342 s / img. ETA=0:21:03
[32m[11/10 22:35:06 d2.evaluation.evaluator]: [0mInference done 65/2229. 0.5354 s / img. ETA=0:21:01
[32m[11/10 22:35:11 d2.evaluation.evaluator]: [0mInference done 74/2229. 0.5353 s / img. ETA=0:20:54
[32m[11/10 22:35:17 d2.evaluation.evaluator]: [0mInference done 83/2229. 0.5351 s / img. ETA=0:20:49
[32m[11/10 22:35:22 d2.evaluation.evaluator]: [0mInference done 92/2229. 0.5352 s / img. ETA=0:20:43
[32m[11/10 22:35:27 d2.evaluation.evaluator]: [0mInference done 101/2229. 0.5350 s / img. ETA=0:20:37
[32m[11/10 22:35:32 d2.evaluation.evaluator]: [0mInference done 110/2229. 0.5354 s / img. ETA=0:20:35
[32m[11/10 22:35:38 d2.evaluation.evaluator]: [0mInference done 119/2229. 0.5361 s / img. ETA=0:20:31
[32m[11/10 22:35:43 d2.evaluation.evaluator]: [0mInference done 128/2229. 0.5366 s / img. ETA=0:20:26
[32m[11/10 22:35:48 d2.evaluation.evaluator]: [0mInference done 137/2229. 0.5375 s / img. ETA=0:20:23
[32m[11/10 22:35:54 d2.evaluation.evaluator]: [0mInference done 146/2229. 0.5378 s / img. ETA=0:20:18
[32m[11/10 22:35:59 d2.evaluation.evaluator]: [0mInference done 155/2229. 0.5381 s / img. ETA=0:20:13
[32m[11/10 22:36:04 d2.evaluation.evaluator]: [0mInference done 164/2229. 0.5392 s / img. ETA=0:20:10
[32m[11/10 22:36:10 d2.evaluation.evaluator]: [0mInference done 173/2229. 0.5395 s / img. ETA=0:20:07
[32m[11/10 22:36:15 d2.evaluation.evaluator]: [0mInference done 182/2229. 0.5396 s / img. ETA=0:20:02
[32m[11/10 22:36:21 d2.evaluation.evaluator]: [0mInference done 191/2229. 0.5399 s / img. ETA=0:19:57
[32m[11/10 22:36:26 d2.evaluation.evaluator]: [0mInference done 200/2229. 0.5403 s / img. ETA=0:19:53
[32m[11/10 22:36:31 d2.evaluation.evaluator]: [0mInference done 209/2229. 0.5406 s / img. ETA=0:19:49
[32m[11/10 22:36:37 d2.evaluation.evaluator]: [0mInference done 218/2229. 0.5405 s / img. ETA=0:19:43
[32m[11/10 22:36:42 d2.evaluation.evaluator]: [0mInference done 227/2229. 0.5406 s / img. ETA=0:19:39
[32m[11/10 22:36:47 d2.evaluation.evaluator]: [0mInference done 236/2229. 0.5410 s / img. ETA=0:19:34
[32m[11/10 22:36:53 d2.evaluation.evaluator]: [0mInference done 245/2229. 0.5413 s / img. ETA=0:19:29
[32m[11/10 22:36:58 d2.evaluation.evaluator]: [0mInference done 254/2229. 0.5413 s / img. ETA=0:19:23
[32m[11/10 22:37:03 d2.evaluation.evaluator]: [0mInference done 263/2229. 0.5417 s / img. ETA=0:19:19
[32m[11/10 22:37:09 d2.evaluation.evaluator]: [0mInference done 272/2229. 0.5422 s / img. ETA=0:19:15
[32m[11/10 22:37:14 d2.evaluation.evaluator]: [0mInference done 281/2229. 0.5428 s / img. ETA=0:19:11
[32m[11/10 22:37:20 d2.evaluation.evaluator]: [0mInference done 290/2229. 0.5434 s / img. ETA=0:19:07
[32m[11/10 22:37:25 d2.evaluation.evaluator]: [0mInference done 299/2229. 0.5435 s / img. ETA=0:19:02
[32m[11/10 22:37:30 d2.evaluation.evaluator]: [0mInference done 308/2229. 0.5434 s / img. ETA=0:18:56
[32m[11/10 22:37:36 d2.evaluation.evaluator]: [0mInference done 317/2229. 0.5435 s / img. ETA=0:18:50
[32m[11/10 22:37:41 d2.evaluation.evaluator]: [0mInference done 326/2229. 0.5435 s / img. ETA=0:18:46
[32m[11/10 22:37:47 d2.evaluation.evaluator]: [0mInference done 335/2229. 0.5435 s / img. ETA=0:18:41
[32m[11/10 22:37:52 d2.evaluation.evaluator]: [0mInference done 344/2229. 0.5433 s / img. ETA=0:18:35
[32m[11/10 22:37:57 d2.evaluation.evaluator]: [0mInference done 353/2229. 0.5434 s / img. ETA=0:18:29
[32m[11/10 22:38:03 d2.evaluation.evaluator]: [0mInference done 362/2229. 0.5435 s / img. ETA=0:18:25
[32m[11/10 22:38:08 d2.evaluation.evaluator]: [0mInference done 371/2229. 0.5436 s / img. ETA=0:18:20
[32m[11/10 22:38:13 d2.evaluation.evaluator]: [0mInference done 380/2229. 0.5437 s / img. ETA=0:18:15
[32m[11/10 22:38:19 d2.evaluation.evaluator]: [0mInference done 389/2229. 0.5439 s / img. ETA=0:18:10
[32m[11/10 22:38:24 d2.evaluation.evaluator]: [0mInference done 398/2229. 0.5441 s / img. ETA=0:18:05
[32m[11/10 22:38:30 d2.evaluation.evaluator]: [0mInference done 407/2229. 0.5440 s / img. ETA=0:18:00
[32m[11/10 22:38:35 d2.evaluation.evaluator]: [0mInference done 416/2229. 0.5439 s / img. ETA=0:17:56
[32m[11/10 22:38:40 d2.evaluation.evaluator]: [0mInference done 424/2229. 0.5438 s / img. ETA=0:17:53
[32m[11/10 22:38:46 d2.evaluation.evaluator]: [0mInference done 432/2229. 0.5437 s / img. ETA=0:17:50
[32m[11/10 22:38:51 d2.evaluation.evaluator]: [0mInference done 441/2229. 0.5435 s / img. ETA=0:17:45
[32m[11/10 22:38:56 d2.evaluation.evaluator]: [0mInference done 449/2229. 0.5434 s / img. ETA=0:17:42
[32m[11/10 22:39:01 d2.evaluation.evaluator]: [0mInference done 457/2229. 0.5434 s / img. ETA=0:17:38
[32m[11/10 22:39:06 d2.evaluation.evaluator]: [0mInference done 465/2229. 0.5433 s / img. ETA=0:17:35
[32m[11/10 22:39:12 d2.evaluation.evaluator]: [0mInference done 474/2229. 0.5431 s / img. ETA=0:17:30
[32m[11/10 22:39:17 d2.evaluation.evaluator]: [0mInference done 482/2229. 0.5430 s / img. ETA=0:17:26
[32m[11/10 22:39:23 d2.evaluation.evaluator]: [0mInference done 491/2229. 0.5429 s / img. ETA=0:17:22
[32m[11/10 22:39:28 d2.evaluation.evaluator]: [0mInference done 500/2229. 0.5427 s / img. ETA=0:17:17
[32m[11/10 22:39:33 d2.evaluation.evaluator]: [0mInference done 508/2229. 0.5426 s / img. ETA=0:17:13
[32m[11/10 22:39:38 d2.evaluation.evaluator]: [0mInference done 516/2229. 0.5425 s / img. ETA=0:17:09
[32m[11/10 22:39:44 d2.evaluation.evaluator]: [0mInference done 525/2229. 0.5424 s / img. ETA=0:17:04
[32m[11/10 22:39:50 d2.evaluation.evaluator]: [0mInference done 534/2229. 0.5422 s / img. ETA=0:16:59
[32m[11/10 22:39:55 d2.evaluation.evaluator]: [0mInference done 542/2229. 0.5422 s / img. ETA=0:16:55
[32m[11/10 22:40:00 d2.evaluation.evaluator]: [0mInference done 550/2229. 0.5421 s / img. ETA=0:16:51
[32m[11/10 22:40:05 d2.evaluation.evaluator]: [0mInference done 559/2229. 0.5419 s / img. ETA=0:16:46
[32m[11/10 22:40:10 d2.evaluation.evaluator]: [0mInference done 567/2229. 0.5418 s / img. ETA=0:16:42
[32m[11/10 22:40:15 d2.evaluation.evaluator]: [0mInference done 575/2229. 0.5418 s / img. ETA=0:16:38
[32m[11/10 22:40:20 d2.evaluation.evaluator]: [0mInference done 583/2229. 0.5417 s / img. ETA=0:16:34
[32m[11/10 22:40:25 d2.evaluation.evaluator]: [0mInference done 591/2229. 0.5416 s / img. ETA=0:16:30
[32m[11/10 22:40:31 d2.evaluation.evaluator]: [0mInference done 599/2229. 0.5417 s / img. ETA=0:16:26
[32m[11/10 22:40:36 d2.evaluation.evaluator]: [0mInference done 607/2229. 0.5416 s / img. ETA=0:16:21
[32m[11/10 22:40:41 d2.evaluation.evaluator]: [0mInference done 615/2229. 0.5417 s / img. ETA=0:16:17
[32m[11/10 22:40:46 d2.evaluation.evaluator]: [0mInference done 623/2229. 0.5417 s / img. ETA=0:16:13
[32m[11/10 22:40:52 d2.evaluation.evaluator]: [0mInference done 632/2229. 0.5416 s / img. ETA=0:16:08
[32m[11/10 22:40:57 d2.evaluation.evaluator]: [0mInference done 641/2229. 0.5415 s / img. ETA=0:16:03
[32m[11/10 22:41:02 d2.evaluation.evaluator]: [0mInference done 649/2229. 0.5415 s / img. ETA=0:15:59
[32m[11/10 22:41:07 d2.evaluation.evaluator]: [0mInference done 657/2229. 0.5414 s / img. ETA=0:15:54
[32m[11/10 22:41:13 d2.evaluation.evaluator]: [0mInference done 666/2229. 0.5414 s / img. ETA=0:15:49
[32m[11/10 22:41:18 d2.evaluation.evaluator]: [0mInference done 675/2229. 0.5414 s / img. ETA=0:15:43
[32m[11/10 22:41:24 d2.evaluation.evaluator]: [0mInference done 684/2229. 0.5415 s / img. ETA=0:15:38
[32m[11/10 22:41:29 d2.evaluation.evaluator]: [0mInference done 693/2229. 0.5416 s / img. ETA=0:15:32
[32m[11/10 22:41:34 d2.evaluation.evaluator]: [0mInference done 702/2229. 0.5417 s / img. ETA=0:15:26
[32m[11/10 22:41:40 d2.evaluation.evaluator]: [0mInference done 711/2229. 0.5418 s / img. ETA=0:15:21
[32m[11/10 22:41:45 d2.evaluation.evaluator]: [0mInference done 720/2229. 0.5419 s / img. ETA=0:15:15
[32m[11/10 22:41:51 d2.evaluation.evaluator]: [0mInference done 729/2229. 0.5421 s / img. ETA=0:15:10
[32m[11/10 22:41:56 d2.evaluation.evaluator]: [0mInference done 738/2229. 0.5421 s / img. ETA=0:15:04
[32m[11/10 22:42:01 d2.evaluation.evaluator]: [0mInference done 747/2229. 0.5423 s / img. ETA=0:14:59
[32m[11/10 22:42:07 d2.evaluation.evaluator]: [0mInference done 756/2229. 0.5424 s / img. ETA=0:14:53
[32m[11/10 22:42:12 d2.evaluation.evaluator]: [0mInference done 765/2229. 0.5424 s / img. ETA=0:14:47
[32m[11/10 22:42:18 d2.evaluation.evaluator]: [0mInference done 774/2229. 0.5424 s / img. ETA=0:14:42
[32m[11/10 22:42:23 d2.evaluation.evaluator]: [0mInference done 783/2229. 0.5424 s / img. ETA=0:14:36
[32m[11/10 22:42:28 d2.evaluation.evaluator]: [0mInference done 792/2229. 0.5425 s / img. ETA=0:14:30
[32m[11/10 22:42:34 d2.evaluation.evaluator]: [0mInference done 801/2229. 0.5424 s / img. ETA=0:14:25
[32m[11/10 22:42:39 d2.evaluation.evaluator]: [0mInference done 810/2229. 0.5425 s / img. ETA=0:14:19
[32m[11/10 22:42:44 d2.evaluation.evaluator]: [0mInference done 819/2229. 0.5424 s / img. ETA=0:14:13
[32m[11/10 22:42:49 d2.evaluation.evaluator]: [0mInference done 828/2229. 0.5425 s / img. ETA=0:14:08
[32m[11/10 22:42:55 d2.evaluation.evaluator]: [0mInference done 837/2229. 0.5425 s / img. ETA=0:14:02
[32m[11/10 22:43:00 d2.evaluation.evaluator]: [0mInference done 846/2229. 0.5426 s / img. ETA=0:13:57
[32m[11/10 22:43:06 d2.evaluation.evaluator]: [0mInference done 855/2229. 0.5427 s / img. ETA=0:13:51
[32m[11/10 22:43:11 d2.evaluation.evaluator]: [0mInference done 864/2229. 0.5427 s / img. ETA=0:13:45
[32m[11/10 22:43:16 d2.evaluation.evaluator]: [0mInference done 873/2229. 0.5427 s / img. ETA=0:13:40
[32m[11/10 22:43:22 d2.evaluation.evaluator]: [0mInference done 882/2229. 0.5426 s / img. ETA=0:13:34
[32m[11/10 22:43:27 d2.evaluation.evaluator]: [0mInference done 891/2229. 0.5427 s / img. ETA=0:13:29
[32m[11/10 22:43:32 d2.evaluation.evaluator]: [0mInference done 900/2229. 0.5428 s / img. ETA=0:13:23
[32m[11/10 22:43:38 d2.evaluation.evaluator]: [0mInference done 909/2229. 0.5428 s / img. ETA=0:13:18
[32m[11/10 22:43:43 d2.evaluation.evaluator]: [0mInference done 918/2229. 0.5428 s / img. ETA=0:13:12
[32m[11/10 22:43:48 d2.evaluation.evaluator]: [0mInference done 927/2229. 0.5428 s / img. ETA=0:13:06
[32m[11/10 22:43:54 d2.evaluation.evaluator]: [0mInference done 936/2229. 0.5428 s / img. ETA=0:13:01
[32m[11/10 22:43:59 d2.evaluation.evaluator]: [0mInference done 945/2229. 0.5427 s / img. ETA=0:12:55
[32m[11/10 22:44:04 d2.evaluation.evaluator]: [0mInference done 954/2229. 0.5427 s / img. ETA=0:12:49
[32m[11/10 22:44:10 d2.evaluation.evaluator]: [0mInference done 963/2229. 0.5427 s / img. ETA=0:12:44
[32m[11/10 22:44:15 d2.evaluation.evaluator]: [0mInference done 972/2229. 0.5427 s / img. ETA=0:12:38
[32m[11/10 22:44:20 d2.evaluation.evaluator]: [0mInference done 981/2229. 0.5427 s / img. ETA=0:12:33
[32m[11/10 22:44:26 d2.evaluation.evaluator]: [0mInference done 990/2229. 0.5428 s / img. ETA=0:12:27
[32m[11/10 22:44:31 d2.evaluation.evaluator]: [0mInference done 999/2229. 0.5428 s / img. ETA=0:12:22
[32m[11/10 22:44:36 d2.evaluation.evaluator]: [0mInference done 1008/2229. 0.5429 s / img. ETA=0:12:16
[32m[11/10 22:44:42 d2.evaluation.evaluator]: [0mInference done 1017/2229. 0.5429 s / img. ETA=0:12:11
[32m[11/10 22:44:47 d2.evaluation.evaluator]: [0mInference done 1026/2229. 0.5430 s / img. ETA=0:12:05
[32m[11/10 22:44:53 d2.evaluation.evaluator]: [0mInference done 1035/2229. 0.5430 s / img. ETA=0:12:00
[32m[11/10 22:44:58 d2.evaluation.evaluator]: [0mInference done 1044/2229. 0.5430 s / img. ETA=0:11:54
[32m[11/10 22:45:03 d2.evaluation.evaluator]: [0mInference done 1053/2229. 0.5430 s / img. ETA=0:11:49
[32m[11/10 22:45:09 d2.evaluation.evaluator]: [0mInference done 1062/2229. 0.5430 s / img. ETA=0:11:43
[32m[11/10 22:45:14 d2.evaluation.evaluator]: [0mInference done 1071/2229. 0.5428 s / img. ETA=0:11:38
[32m[11/10 22:45:19 d2.evaluation.evaluator]: [0mInference done 1079/2229. 0.5428 s / img. ETA=0:11:33
[32m[11/10 22:45:25 d2.evaluation.evaluator]: [0mInference done 1088/2229. 0.5427 s / img. ETA=0:11:28
[32m[11/10 22:45:31 d2.evaluation.evaluator]: [0mInference done 1097/2229. 0.5426 s / img. ETA=0:11:23
[32m[11/10 22:45:36 d2.evaluation.evaluator]: [0mInference done 1106/2229. 0.5425 s / img. ETA=0:11:18
[32m[11/10 22:45:42 d2.evaluation.evaluator]: [0mInference done 1115/2229. 0.5424 s / img. ETA=0:11:12
[32m[11/10 22:45:47 d2.evaluation.evaluator]: [0mInference done 1124/2229. 0.5423 s / img. ETA=0:11:07
[32m[11/10 22:45:53 d2.evaluation.evaluator]: [0mInference done 1133/2229. 0.5422 s / img. ETA=0:11:02
[32m[11/10 22:45:58 d2.evaluation.evaluator]: [0mInference done 1142/2229. 0.5421 s / img. ETA=0:10:56
[32m[11/10 22:46:04 d2.evaluation.evaluator]: [0mInference done 1151/2229. 0.5420 s / img. ETA=0:10:51
[32m[11/10 22:46:09 d2.evaluation.evaluator]: [0mInference done 1160/2229. 0.5419 s / img. ETA=0:10:46
[32m[11/10 22:46:15 d2.evaluation.evaluator]: [0mInference done 1169/2229. 0.5418 s / img. ETA=0:10:40
[32m[11/10 22:46:20 d2.evaluation.evaluator]: [0mInference done 1178/2229. 0.5417 s / img. ETA=0:10:35
[32m[11/10 22:46:26 d2.evaluation.evaluator]: [0mInference done 1187/2229. 0.5416 s / img. ETA=0:10:30
[32m[11/10 22:46:31 d2.evaluation.evaluator]: [0mInference done 1196/2229. 0.5415 s / img. ETA=0:10:24
[32m[11/10 22:46:37 d2.evaluation.evaluator]: [0mInference done 1205/2229. 0.5413 s / img. ETA=0:10:19
[32m[11/10 22:46:42 d2.evaluation.evaluator]: [0mInference done 1214/2229. 0.5412 s / img. ETA=0:10:13
[32m[11/10 22:46:47 d2.evaluation.evaluator]: [0mInference done 1222/2229. 0.5411 s / img. ETA=0:10:09
[32m[11/10 22:46:53 d2.evaluation.evaluator]: [0mInference done 1231/2229. 0.5410 s / img. ETA=0:10:03
[32m[11/10 22:46:58 d2.evaluation.evaluator]: [0mInference done 1240/2229. 0.5409 s / img. ETA=0:09:58
[32m[11/10 22:47:04 d2.evaluation.evaluator]: [0mInference done 1249/2229. 0.5408 s / img. ETA=0:09:52
[32m[11/10 22:47:10 d2.evaluation.evaluator]: [0mInference done 1258/2229. 0.5407 s / img. ETA=0:09:47
[32m[11/10 22:47:15 d2.evaluation.evaluator]: [0mInference done 1267/2229. 0.5406 s / img. ETA=0:09:42
[32m[11/10 22:47:20 d2.evaluation.evaluator]: [0mInference done 1276/2229. 0.5405 s / img. ETA=0:09:36
[32m[11/10 22:47:26 d2.evaluation.evaluator]: [0mInference done 1285/2229. 0.5404 s / img. ETA=0:09:31
[32m[11/10 22:47:31 d2.evaluation.evaluator]: [0mInference done 1294/2229. 0.5403 s / img. ETA=0:09:25
[32m[11/10 22:47:37 d2.evaluation.evaluator]: [0mInference done 1303/2229. 0.5402 s / img. ETA=0:09:20
[32m[11/10 22:47:42 d2.evaluation.evaluator]: [0mInference done 1312/2229. 0.5400 s / img. ETA=0:09:15
[32m[11/10 22:47:48 d2.evaluation.evaluator]: [0mInference done 1321/2229. 0.5399 s / img. ETA=0:09:09
[32m[11/10 22:47:53 d2.evaluation.evaluator]: [0mInference done 1330/2229. 0.5398 s / img. ETA=0:09:04
[32m[11/10 22:47:59 d2.evaluation.evaluator]: [0mInference done 1339/2229. 0.5397 s / img. ETA=0:08:58
[32m[11/10 22:48:04 d2.evaluation.evaluator]: [0mInference done 1347/2229. 0.5397 s / img. ETA=0:08:54
[32m[11/10 22:48:09 d2.evaluation.evaluator]: [0mInference done 1355/2229. 0.5396 s / img. ETA=0:08:49
[32m[11/10 22:48:14 d2.evaluation.evaluator]: [0mInference done 1364/2229. 0.5395 s / img. ETA=0:08:43
[32m[11/10 22:48:20 d2.evaluation.evaluator]: [0mInference done 1373/2229. 0.5394 s / img. ETA=0:08:38
[32m[11/10 22:48:25 d2.evaluation.evaluator]: [0mInference done 1382/2229. 0.5393 s / img. ETA=0:08:33
[32m[11/10 22:48:31 d2.evaluation.evaluator]: [0mInference done 1391/2229. 0.5392 s / img. ETA=0:08:27
[32m[11/10 22:48:36 d2.evaluation.evaluator]: [0mInference done 1400/2229. 0.5391 s / img. ETA=0:08:22
[32m[11/10 22:48:42 d2.evaluation.evaluator]: [0mInference done 1409/2229. 0.5391 s / img. ETA=0:08:16
[32m[11/10 22:48:47 d2.evaluation.evaluator]: [0mInference done 1418/2229. 0.5390 s / img. ETA=0:08:11
[32m[11/10 22:48:53 d2.evaluation.evaluator]: [0mInference done 1427/2229. 0.5389 s / img. ETA=0:08:05
[32m[11/10 22:48:58 d2.evaluation.evaluator]: [0mInference done 1436/2229. 0.5388 s / img. ETA=0:08:00
[32m[11/10 22:49:03 d2.evaluation.evaluator]: [0mInference done 1444/2229. 0.5388 s / img. ETA=0:07:55
[32m[11/10 22:49:09 d2.evaluation.evaluator]: [0mInference done 1453/2229. 0.5387 s / img. ETA=0:07:50
[32m[11/10 22:49:14 d2.evaluation.evaluator]: [0mInference done 1462/2229. 0.5386 s / img. ETA=0:07:44
[32m[11/10 22:49:20 d2.evaluation.evaluator]: [0mInference done 1471/2229. 0.5385 s / img. ETA=0:07:39
[32m[11/10 22:49:25 d2.evaluation.evaluator]: [0mInference done 1480/2229. 0.5384 s / img. ETA=0:07:34
[32m[11/10 22:49:31 d2.evaluation.evaluator]: [0mInference done 1488/2229. 0.5384 s / img. ETA=0:07:29
[32m[11/10 22:49:36 d2.evaluation.evaluator]: [0mInference done 1497/2229. 0.5383 s / img. ETA=0:07:23
[32m[11/10 22:49:42 d2.evaluation.evaluator]: [0mInference done 1506/2229. 0.5382 s / img. ETA=0:07:18
[32m[11/10 22:49:47 d2.evaluation.evaluator]: [0mInference done 1515/2229. 0.5381 s / img. ETA=0:07:13
[32m[11/10 22:49:53 d2.evaluation.evaluator]: [0mInference done 1524/2229. 0.5380 s / img. ETA=0:07:07
[32m[11/10 22:49:58 d2.evaluation.evaluator]: [0mInference done 1533/2229. 0.5379 s / img. ETA=0:07:02
[32m[11/10 22:50:03 d2.evaluation.evaluator]: [0mInference done 1542/2229. 0.5378 s / img. ETA=0:06:56
[32m[11/10 22:50:09 d2.evaluation.evaluator]: [0mInference done 1551/2229. 0.5378 s / img. ETA=0:06:51
[32m[11/10 22:50:15 d2.evaluation.evaluator]: [0mInference done 1560/2229. 0.5377 s / img. ETA=0:06:45
[32m[11/10 22:50:20 d2.evaluation.evaluator]: [0mInference done 1569/2229. 0.5376 s / img. ETA=0:06:40
[32m[11/10 22:50:26 d2.evaluation.evaluator]: [0mInference done 1578/2229. 0.5376 s / img. ETA=0:06:35
[32m[11/10 22:50:31 d2.evaluation.evaluator]: [0mInference done 1587/2229. 0.5375 s / img. ETA=0:06:29
[32m[11/10 22:50:37 d2.evaluation.evaluator]: [0mInference done 1596/2229. 0.5375 s / img. ETA=0:06:24
[32m[11/10 22:50:43 d2.evaluation.evaluator]: [0mInference done 1605/2229. 0.5374 s / img. ETA=0:06:18
[32m[11/10 22:50:48 d2.evaluation.evaluator]: [0mInference done 1614/2229. 0.5374 s / img. ETA=0:06:13
[32m[11/10 22:50:54 d2.evaluation.evaluator]: [0mInference done 1623/2229. 0.5374 s / img. ETA=0:06:07
[32m[11/10 22:50:59 d2.evaluation.evaluator]: [0mInference done 1631/2229. 0.5373 s / img. ETA=0:06:03
[32m[11/10 22:51:04 d2.evaluation.evaluator]: [0mInference done 1640/2229. 0.5372 s / img. ETA=0:05:57
[32m[11/10 22:51:10 d2.evaluation.evaluator]: [0mInference done 1649/2229. 0.5372 s / img. ETA=0:05:52
[32m[11/10 22:51:15 d2.evaluation.evaluator]: [0mInference done 1658/2229. 0.5371 s / img. ETA=0:05:46
[32m[11/10 22:51:21 d2.evaluation.evaluator]: [0mInference done 1667/2229. 0.5370 s / img. ETA=0:05:41
[32m[11/10 22:51:26 d2.evaluation.evaluator]: [0mInference done 1676/2229. 0.5369 s / img. ETA=0:05:35
[32m[11/10 22:51:32 d2.evaluation.evaluator]: [0mInference done 1685/2229. 0.5369 s / img. ETA=0:05:30
[32m[11/10 22:51:37 d2.evaluation.evaluator]: [0mInference done 1694/2229. 0.5368 s / img. ETA=0:05:25
[32m[11/10 22:51:43 d2.evaluation.evaluator]: [0mInference done 1703/2229. 0.5367 s / img. ETA=0:05:19
[32m[11/10 22:51:48 d2.evaluation.evaluator]: [0mInference done 1712/2229. 0.5366 s / img. ETA=0:05:14
[32m[11/10 22:51:54 d2.evaluation.evaluator]: [0mInference done 1721/2229. 0.5366 s / img. ETA=0:05:08
[32m[11/10 22:51:59 d2.evaluation.evaluator]: [0mInference done 1730/2229. 0.5365 s / img. ETA=0:05:03
[32m[11/10 22:52:05 d2.evaluation.evaluator]: [0mInference done 1739/2229. 0.5365 s / img. ETA=0:04:57
[32m[11/10 22:52:10 d2.evaluation.evaluator]: [0mInference done 1748/2229. 0.5364 s / img. ETA=0:04:52
[32m[11/10 22:52:16 d2.evaluation.evaluator]: [0mInference done 1757/2229. 0.5363 s / img. ETA=0:04:46
[32m[11/10 22:52:21 d2.evaluation.evaluator]: [0mInference done 1765/2229. 0.5363 s / img. ETA=0:04:41
[32m[11/10 22:52:26 d2.evaluation.evaluator]: [0mInference done 1774/2229. 0.5363 s / img. ETA=0:04:36
[32m[11/10 22:52:32 d2.evaluation.evaluator]: [0mInference done 1783/2229. 0.5362 s / img. ETA=0:04:31
[32m[11/10 22:52:37 d2.evaluation.evaluator]: [0mInference done 1792/2229. 0.5361 s / img. ETA=0:04:25
[32m[11/10 22:52:42 d2.evaluation.evaluator]: [0mInference done 1800/2229. 0.5361 s / img. ETA=0:04:20
[32m[11/10 22:52:48 d2.evaluation.evaluator]: [0mInference done 1809/2229. 0.5360 s / img. ETA=0:04:15
[32m[11/10 22:52:53 d2.evaluation.evaluator]: [0mInference done 1818/2229. 0.5360 s / img. ETA=0:04:09
[32m[11/10 22:52:59 d2.evaluation.evaluator]: [0mInference done 1827/2229. 0.5360 s / img. ETA=0:04:04
[32m[11/10 22:53:05 d2.evaluation.evaluator]: [0mInference done 1836/2229. 0.5360 s / img. ETA=0:03:58
[32m[11/10 22:53:10 d2.evaluation.evaluator]: [0mInference done 1845/2229. 0.5359 s / img. ETA=0:03:53
[32m[11/10 22:53:16 d2.evaluation.evaluator]: [0mInference done 1854/2229. 0.5358 s / img. ETA=0:03:48
[32m[11/10 22:53:21 d2.evaluation.evaluator]: [0mInference done 1863/2229. 0.5358 s / img. ETA=0:03:42
[32m[11/10 22:53:27 d2.evaluation.evaluator]: [0mInference done 1872/2229. 0.5357 s / img. ETA=0:03:37
[32m[11/10 22:53:32 d2.evaluation.evaluator]: [0mInference done 1881/2229. 0.5357 s / img. ETA=0:03:31
[32m[11/10 22:53:38 d2.evaluation.evaluator]: [0mInference done 1890/2229. 0.5356 s / img. ETA=0:03:26
[32m[11/10 22:53:43 d2.evaluation.evaluator]: [0mInference done 1899/2229. 0.5355 s / img. ETA=0:03:20
[32m[11/10 22:53:49 d2.evaluation.evaluator]: [0mInference done 1908/2229. 0.5355 s / img. ETA=0:03:15
[32m[11/10 22:53:54 d2.evaluation.evaluator]: [0mInference done 1917/2229. 0.5355 s / img. ETA=0:03:09
[32m[11/10 22:54:00 d2.evaluation.evaluator]: [0mInference done 1926/2229. 0.5354 s / img. ETA=0:03:04
[32m[11/10 22:54:05 d2.evaluation.evaluator]: [0mInference done 1935/2229. 0.5354 s / img. ETA=0:02:58
[32m[11/10 22:54:11 d2.evaluation.evaluator]: [0mInference done 1944/2229. 0.5353 s / img. ETA=0:02:53
[32m[11/10 22:54:16 d2.evaluation.evaluator]: [0mInference done 1953/2229. 0.5353 s / img. ETA=0:02:47
[32m[11/10 22:54:22 d2.evaluation.evaluator]: [0mInference done 1962/2229. 0.5353 s / img. ETA=0:02:42
[32m[11/10 22:54:27 d2.evaluation.evaluator]: [0mInference done 1970/2229. 0.5352 s / img. ETA=0:02:37
[32m[11/10 22:54:32 d2.evaluation.evaluator]: [0mInference done 1979/2229. 0.5352 s / img. ETA=0:02:32
[32m[11/10 22:54:38 d2.evaluation.evaluator]: [0mInference done 1988/2229. 0.5351 s / img. ETA=0:02:26
[32m[11/10 22:54:43 d2.evaluation.evaluator]: [0mInference done 1996/2229. 0.5351 s / img. ETA=0:02:21
[32m[11/10 22:54:48 d2.evaluation.evaluator]: [0mInference done 2005/2229. 0.5350 s / img. ETA=0:02:16
[32m[11/10 22:54:54 d2.evaluation.evaluator]: [0mInference done 2014/2229. 0.5350 s / img. ETA=0:02:10
[32m[11/10 22:54:59 d2.evaluation.evaluator]: [0mInference done 2023/2229. 0.5350 s / img. ETA=0:02:05
[32m[11/10 22:55:05 d2.evaluation.evaluator]: [0mInference done 2032/2229. 0.5349 s / img. ETA=0:01:59
[32m[11/10 22:55:10 d2.evaluation.evaluator]: [0mInference done 2041/2229. 0.5349 s / img. ETA=0:01:54
[32m[11/10 22:55:16 d2.evaluation.evaluator]: [0mInference done 2050/2229. 0.5348 s / img. ETA=0:01:48
[32m[11/10 22:55:21 d2.evaluation.evaluator]: [0mInference done 2059/2229. 0.5348 s / img. ETA=0:01:43
[32m[11/10 22:55:27 d2.evaluation.evaluator]: [0mInference done 2068/2229. 0.5348 s / img. ETA=0:01:37
[32m[11/10 22:55:32 d2.evaluation.evaluator]: [0mInference done 2076/2229. 0.5348 s / img. ETA=0:01:33
[32m[11/10 22:55:37 d2.evaluation.evaluator]: [0mInference done 2084/2229. 0.5347 s / img. ETA=0:01:28
[32m[11/10 22:55:42 d2.evaluation.evaluator]: [0mInference done 2093/2229. 0.5347 s / img. ETA=0:01:22
[32m[11/10 22:55:48 d2.evaluation.evaluator]: [0mInference done 2102/2229. 0.5347 s / img. ETA=0:01:17
[32m[11/10 22:55:54 d2.evaluation.evaluator]: [0mInference done 2111/2229. 0.5346 s / img. ETA=0:01:11
[32m[11/10 22:55:59 d2.evaluation.evaluator]: [0mInference done 2120/2229. 0.5346 s / img. ETA=0:01:06
[32m[11/10 22:56:05 d2.evaluation.evaluator]: [0mInference done 2129/2229. 0.5346 s / img. ETA=0:01:00
[32m[11/10 22:56:10 d2.evaluation.evaluator]: [0mInference done 2138/2229. 0.5345 s / img. ETA=0:00:55
[32m[11/10 22:56:16 d2.evaluation.evaluator]: [0mInference done 2147/2229. 0.5345 s / img. ETA=0:00:49
[32m[11/10 22:56:21 d2.evaluation.evaluator]: [0mInference done 2155/2229. 0.5346 s / img. ETA=0:00:45
[32m[11/10 22:56:26 d2.evaluation.evaluator]: [0mInference done 2163/2229. 0.5346 s / img. ETA=0:00:40
[32m[11/10 22:56:31 d2.evaluation.evaluator]: [0mInference done 2172/2229. 0.5346 s / img. ETA=0:00:34
[32m[11/10 22:56:37 d2.evaluation.evaluator]: [0mInference done 2181/2229. 0.5345 s / img. ETA=0:00:29
[32m[11/10 22:56:42 d2.evaluation.evaluator]: [0mInference done 2190/2229. 0.5344 s / img. ETA=0:00:23
[32m[11/10 22:56:48 d2.evaluation.evaluator]: [0mInference done 2199/2229. 0.5344 s / img. ETA=0:00:18
[32m[11/10 22:56:53 d2.evaluation.evaluator]: [0mInference done 2207/2229. 0.5344 s / img. ETA=0:00:13
[32m[11/10 22:56:59 d2.evaluation.evaluator]: [0mInference done 2216/2229. 0.5344 s / img. ETA=0:00:07
[32m[11/10 22:57:04 d2.evaluation.evaluator]: [0mInference done 2225/2229. 0.5344 s / img. ETA=0:00:02
[32m[11/10 22:57:07 d2.evaluation.evaluator]: [0mTotal inference time: 0:22:35.537937 (0.609504 s / img per device, on 1 devices)
[32m[11/10 22:57:07 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:19:48 (0.534375 s / img per device, on 1 devices)
[32m[11/10 22:57:08 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/10 22:57:08 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/inference/coco_instances_results.json
[32m[11/10 22:57:09 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.60s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.99 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.47 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.014
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.042
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.012
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.035
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.035
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.066
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.067
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.013
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.052
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.267
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 1.369 | 4.152  | 0.468  | 0.125 | 1.230 | 3.549 |
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/10 22:57:12 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP    | category   | AP    | category         | AP    |
|:------------|:------|:-----------|:------|:-----------------|:------|
| backpac     | 0.000 | rop        | 3.135 | ven              | 2.800 |
| helme       | 0.270 | dril       | 0.371 | fire extinguishe | 5.610 |
| helmet-ligh | 0.000 | survivo    | 0.002 | cell phon        | nan   |
| cub         | 0.137 |            |       |                  |       |
[32m[11/10 22:57:12 d2.engine.defaults]: [0mEvaluation results for val_f_1 in csv format:
[32m[11/10 22:57:12 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/10 22:57:12 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/10 22:57:12 d2.evaluation.testing]: [0mcopypaste: 1.3692,4.1522,0.4680,0.1248,1.2296,3.5486
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
