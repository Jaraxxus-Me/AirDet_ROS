Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_1',)"], resume=False)
[32m[11/10 21:46:46 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/10 21:46:49 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/10 21:46:49 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_1',)"], resume=False)
[32m[11/10 21:46:49 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt1.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_101_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 1
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/1shot'

[32m[11/10 21:46:49 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_f_1',)
  TESTSHOTS: 1
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/1shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/10 21:46:49 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/config.yaml
[32m[11/10 21:46:56 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/10 21:46:56 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/10 21:46:57 d2.data.datasets.coco]: [0mLoaded 2229 images in COCO format from datasets/SUBT/use/val_f_1/new_annotations/val_f_1.json
[32m[11/10 21:46:57 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 165          |    rop     | 926          |      ven      | 639          |
|    helme    | 256          |    dril    | 523          | fire exting.. | 217          |
| helmet-ligh | 177          |  survivo   | 19           |   cell phon   | 0            |
|     cub     | 264          |            |              |               |              |
|    total    | 3186         |            |              |               |              |[0m
[32m[11/10 21:46:57 d2.data.common]: [0mSerializing 2229 elements to byte tensors and concatenating them all ...
[32m[11/10 21:46:57 d2.data.common]: [0mSerialized dataset takes 0.56 MiB
[32m[11/10 21:46:57 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/10 21:46:57 d2.evaluation.evaluator]: [0mStart inference on 2229 images
[32m[11/10 21:47:04 d2.evaluation.evaluator]: [0mInference done 11/2229. 0.5373 s / img. ETA=0:21:53
[32m[11/10 21:47:09 d2.evaluation.evaluator]: [0mInference done 20/2229. 0.5395 s / img. ETA=0:22:14
[32m[11/10 21:47:15 d2.evaluation.evaluator]: [0mInference done 29/2229. 0.5401 s / img. ETA=0:22:13
[32m[11/10 21:47:20 d2.evaluation.evaluator]: [0mInference done 38/2229. 0.5415 s / img. ETA=0:22:15
[32m[11/10 21:47:26 d2.evaluation.evaluator]: [0mInference done 47/2229. 0.5430 s / img. ETA=0:22:16
[32m[11/10 21:47:32 d2.evaluation.evaluator]: [0mInference done 56/2229. 0.5431 s / img. ETA=0:22:07
[32m[11/10 21:47:37 d2.evaluation.evaluator]: [0mInference done 65/2229. 0.5428 s / img. ETA=0:21:58
[32m[11/10 21:47:42 d2.evaluation.evaluator]: [0mInference done 74/2229. 0.5428 s / img. ETA=0:21:52
[32m[11/10 21:47:48 d2.evaluation.evaluator]: [0mInference done 83/2229. 0.5428 s / img. ETA=0:21:47
[32m[11/10 21:47:53 d2.evaluation.evaluator]: [0mInference done 92/2229. 0.5433 s / img. ETA=0:21:41
[32m[11/10 21:47:59 d2.evaluation.evaluator]: [0mInference done 101/2229. 0.5431 s / img. ETA=0:21:35
[32m[11/10 21:48:04 d2.evaluation.evaluator]: [0mInference done 110/2229. 0.5435 s / img. ETA=0:21:29
[32m[11/10 21:48:10 d2.evaluation.evaluator]: [0mInference done 119/2229. 0.5439 s / img. ETA=0:21:24
[32m[11/10 21:48:15 d2.evaluation.evaluator]: [0mInference done 127/2229. 0.5453 s / img. ETA=0:21:23
[32m[11/10 21:48:20 d2.evaluation.evaluator]: [0mInference done 136/2229. 0.5456 s / img. ETA=0:21:18
[32m[11/10 21:48:26 d2.evaluation.evaluator]: [0mInference done 145/2229. 0.5457 s / img. ETA=0:21:13
[32m[11/10 21:48:31 d2.evaluation.evaluator]: [0mInference done 154/2229. 0.5457 s / img. ETA=0:21:08
[32m[11/10 21:48:36 d2.evaluation.evaluator]: [0mInference done 162/2229. 0.5461 s / img. ETA=0:21:05
[32m[11/10 21:48:42 d2.evaluation.evaluator]: [0mInference done 171/2229. 0.5461 s / img. ETA=0:20:59
[32m[11/10 21:48:47 d2.evaluation.evaluator]: [0mInference done 180/2229. 0.5458 s / img. ETA=0:20:53
[32m[11/10 21:48:53 d2.evaluation.evaluator]: [0mInference done 189/2229. 0.5457 s / img. ETA=0:20:48
[32m[11/10 21:48:59 d2.evaluation.evaluator]: [0mInference done 198/2229. 0.5457 s / img. ETA=0:20:43
[32m[11/10 21:49:04 d2.evaluation.evaluator]: [0mInference done 207/2229. 0.5459 s / img. ETA=0:20:38
[32m[11/10 21:49:09 d2.evaluation.evaluator]: [0mInference done 216/2229. 0.5456 s / img. ETA=0:20:31
[32m[11/10 21:49:15 d2.evaluation.evaluator]: [0mInference done 225/2229. 0.5456 s / img. ETA=0:20:26
[32m[11/10 21:49:21 d2.evaluation.evaluator]: [0mInference done 234/2229. 0.5459 s / img. ETA=0:20:21
[32m[11/10 21:49:26 d2.evaluation.evaluator]: [0mInference done 243/2229. 0.5458 s / img. ETA=0:20:15
[32m[11/10 21:49:32 d2.evaluation.evaluator]: [0mInference done 252/2229. 0.5456 s / img. ETA=0:20:10
[32m[11/10 21:49:37 d2.evaluation.evaluator]: [0mInference done 261/2229. 0.5456 s / img. ETA=0:20:04
[32m[11/10 21:49:43 d2.evaluation.evaluator]: [0mInference done 270/2229. 0.5459 s / img. ETA=0:20:00
[32m[11/10 21:49:48 d2.evaluation.evaluator]: [0mInference done 278/2229. 0.5462 s / img. ETA=0:19:56
[32m[11/10 21:49:53 d2.evaluation.evaluator]: [0mInference done 287/2229. 0.5465 s / img. ETA=0:19:50
[32m[11/10 21:49:59 d2.evaluation.evaluator]: [0mInference done 296/2229. 0.5466 s / img. ETA=0:19:45
[32m[11/10 21:50:04 d2.evaluation.evaluator]: [0mInference done 305/2229. 0.5467 s / img. ETA=0:19:39
[32m[11/10 21:50:10 d2.evaluation.evaluator]: [0mInference done 314/2229. 0.5467 s / img. ETA=0:19:33
[32m[11/10 21:50:15 d2.evaluation.evaluator]: [0mInference done 323/2229. 0.5466 s / img. ETA=0:19:27
[32m[11/10 21:50:21 d2.evaluation.evaluator]: [0mInference done 332/2229. 0.5465 s / img. ETA=0:19:22
[32m[11/10 21:50:26 d2.evaluation.evaluator]: [0mInference done 341/2229. 0.5464 s / img. ETA=0:19:16
[32m[11/10 21:50:32 d2.evaluation.evaluator]: [0mInference done 350/2229. 0.5463 s / img. ETA=0:19:11
[32m[11/10 21:50:37 d2.evaluation.evaluator]: [0mInference done 358/2229. 0.5463 s / img. ETA=0:19:07
[32m[11/10 21:50:42 d2.evaluation.evaluator]: [0mInference done 367/2229. 0.5462 s / img. ETA=0:19:01
[32m[11/10 21:50:48 d2.evaluation.evaluator]: [0mInference done 376/2229. 0.5461 s / img. ETA=0:18:55
[32m[11/10 21:50:53 d2.evaluation.evaluator]: [0mInference done 385/2229. 0.5462 s / img. ETA=0:18:50
[32m[11/10 21:50:59 d2.evaluation.evaluator]: [0mInference done 394/2229. 0.5464 s / img. ETA=0:18:44
[32m[11/10 21:51:04 d2.evaluation.evaluator]: [0mInference done 402/2229. 0.5463 s / img. ETA=0:18:40
[32m[11/10 21:51:09 d2.evaluation.evaluator]: [0mInference done 410/2229. 0.5461 s / img. ETA=0:18:37
[32m[11/10 21:51:14 d2.evaluation.evaluator]: [0mInference done 418/2229. 0.5459 s / img. ETA=0:18:33
[32m[11/10 21:51:19 d2.evaluation.evaluator]: [0mInference done 426/2229. 0.5455 s / img. ETA=0:18:29
[32m[11/10 21:51:25 d2.evaluation.evaluator]: [0mInference done 434/2229. 0.5453 s / img. ETA=0:18:25
[32m[11/10 21:51:30 d2.evaluation.evaluator]: [0mInference done 442/2229. 0.5450 s / img. ETA=0:18:22
[32m[11/10 21:51:35 d2.evaluation.evaluator]: [0mInference done 450/2229. 0.5449 s / img. ETA=0:18:18
[32m[11/10 21:51:40 d2.evaluation.evaluator]: [0mInference done 458/2229. 0.5446 s / img. ETA=0:18:15
[32m[11/10 21:51:46 d2.evaluation.evaluator]: [0mInference done 466/2229. 0.5444 s / img. ETA=0:18:11
[32m[11/10 21:51:51 d2.evaluation.evaluator]: [0mInference done 474/2229. 0.5441 s / img. ETA=0:18:07
[32m[11/10 21:51:56 d2.evaluation.evaluator]: [0mInference done 482/2229. 0.5439 s / img. ETA=0:18:03
[32m[11/10 21:52:01 d2.evaluation.evaluator]: [0mInference done 490/2229. 0.5437 s / img. ETA=0:17:59
[32m[11/10 21:52:07 d2.evaluation.evaluator]: [0mInference done 498/2229. 0.5436 s / img. ETA=0:17:55
[32m[11/10 21:52:12 d2.evaluation.evaluator]: [0mInference done 506/2229. 0.5434 s / img. ETA=0:17:51
[32m[11/10 21:52:17 d2.evaluation.evaluator]: [0mInference done 514/2229. 0.5432 s / img. ETA=0:17:46
[32m[11/10 21:52:22 d2.evaluation.evaluator]: [0mInference done 522/2229. 0.5430 s / img. ETA=0:17:42
[32m[11/10 21:52:27 d2.evaluation.evaluator]: [0mInference done 530/2229. 0.5428 s / img. ETA=0:17:38
[32m[11/10 21:52:32 d2.evaluation.evaluator]: [0mInference done 538/2229. 0.5426 s / img. ETA=0:17:33
[32m[11/10 21:52:38 d2.evaluation.evaluator]: [0mInference done 546/2229. 0.5424 s / img. ETA=0:17:28
[32m[11/10 21:52:43 d2.evaluation.evaluator]: [0mInference done 554/2229. 0.5422 s / img. ETA=0:17:24
[32m[11/10 21:52:48 d2.evaluation.evaluator]: [0mInference done 562/2229. 0.5421 s / img. ETA=0:17:20
[32m[11/10 21:52:53 d2.evaluation.evaluator]: [0mInference done 570/2229. 0.5419 s / img. ETA=0:17:15
[32m[11/10 21:52:58 d2.evaluation.evaluator]: [0mInference done 578/2229. 0.5418 s / img. ETA=0:17:11
[32m[11/10 21:53:03 d2.evaluation.evaluator]: [0mInference done 586/2229. 0.5416 s / img. ETA=0:17:06
[32m[11/10 21:53:09 d2.evaluation.evaluator]: [0mInference done 594/2229. 0.5415 s / img. ETA=0:17:02
[32m[11/10 21:53:14 d2.evaluation.evaluator]: [0mInference done 602/2229. 0.5413 s / img. ETA=0:16:57
[32m[11/10 21:53:19 d2.evaluation.evaluator]: [0mInference done 610/2229. 0.5412 s / img. ETA=0:16:52
[32m[11/10 21:53:24 d2.evaluation.evaluator]: [0mInference done 618/2229. 0.5411 s / img. ETA=0:16:48
[32m[11/10 21:53:29 d2.evaluation.evaluator]: [0mInference done 626/2229. 0.5410 s / img. ETA=0:16:43
[32m[11/10 21:53:34 d2.evaluation.evaluator]: [0mInference done 634/2229. 0.5408 s / img. ETA=0:16:38
[32m[11/10 21:53:40 d2.evaluation.evaluator]: [0mInference done 642/2229. 0.5406 s / img. ETA=0:16:34
[32m[11/10 21:53:45 d2.evaluation.evaluator]: [0mInference done 650/2229. 0.5405 s / img. ETA=0:16:29
[32m[11/10 21:53:50 d2.evaluation.evaluator]: [0mInference done 658/2229. 0.5404 s / img. ETA=0:16:25
[32m[11/10 21:53:55 d2.evaluation.evaluator]: [0mInference done 666/2229. 0.5403 s / img. ETA=0:16:20
[32m[11/10 21:54:00 d2.evaluation.evaluator]: [0mInference done 675/2229. 0.5404 s / img. ETA=0:16:14
[32m[11/10 21:54:06 d2.evaluation.evaluator]: [0mInference done 684/2229. 0.5404 s / img. ETA=0:16:07
[32m[11/10 21:54:11 d2.evaluation.evaluator]: [0mInference done 693/2229. 0.5405 s / img. ETA=0:16:02
[32m[11/10 21:54:17 d2.evaluation.evaluator]: [0mInference done 702/2229. 0.5406 s / img. ETA=0:15:56
[32m[11/10 21:54:22 d2.evaluation.evaluator]: [0mInference done 711/2229. 0.5406 s / img. ETA=0:15:50
[32m[11/10 21:54:28 d2.evaluation.evaluator]: [0mInference done 720/2229. 0.5406 s / img. ETA=0:15:44
[32m[11/10 21:54:33 d2.evaluation.evaluator]: [0mInference done 729/2229. 0.5407 s / img. ETA=0:15:38
[32m[11/10 21:54:39 d2.evaluation.evaluator]: [0mInference done 738/2229. 0.5407 s / img. ETA=0:15:32
[32m[11/10 21:54:44 d2.evaluation.evaluator]: [0mInference done 747/2229. 0.5408 s / img. ETA=0:15:26
[32m[11/10 21:54:50 d2.evaluation.evaluator]: [0mInference done 755/2229. 0.5409 s / img. ETA=0:15:22
[32m[11/10 21:54:55 d2.evaluation.evaluator]: [0mInference done 764/2229. 0.5409 s / img. ETA=0:15:16
[32m[11/10 21:55:00 d2.evaluation.evaluator]: [0mInference done 773/2229. 0.5409 s / img. ETA=0:15:10
[32m[11/10 21:55:06 d2.evaluation.evaluator]: [0mInference done 782/2229. 0.5409 s / img. ETA=0:15:04
[32m[11/10 21:55:11 d2.evaluation.evaluator]: [0mInference done 791/2229. 0.5409 s / img. ETA=0:14:58
[32m[11/10 21:55:17 d2.evaluation.evaluator]: [0mInference done 800/2229. 0.5410 s / img. ETA=0:14:52
[32m[11/10 21:55:23 d2.evaluation.evaluator]: [0mInference done 809/2229. 0.5410 s / img. ETA=0:14:47
[32m[11/10 21:55:28 d2.evaluation.evaluator]: [0mInference done 818/2229. 0.5410 s / img. ETA=0:14:41
[32m[11/10 21:55:34 d2.evaluation.evaluator]: [0mInference done 827/2229. 0.5412 s / img. ETA=0:14:35
[32m[11/10 21:55:39 d2.evaluation.evaluator]: [0mInference done 835/2229. 0.5413 s / img. ETA=0:14:30
[32m[11/10 21:55:44 d2.evaluation.evaluator]: [0mInference done 844/2229. 0.5413 s / img. ETA=0:14:24
[32m[11/10 21:55:50 d2.evaluation.evaluator]: [0mInference done 853/2229. 0.5414 s / img. ETA=0:14:18
[32m[11/10 21:55:55 d2.evaluation.evaluator]: [0mInference done 861/2229. 0.5414 s / img. ETA=0:14:14
[32m[11/10 21:56:00 d2.evaluation.evaluator]: [0mInference done 870/2229. 0.5415 s / img. ETA=0:14:08
[32m[11/10 21:56:06 d2.evaluation.evaluator]: [0mInference done 879/2229. 0.5415 s / img. ETA=0:14:02
[32m[11/10 21:56:11 d2.evaluation.evaluator]: [0mInference done 888/2229. 0.5415 s / img. ETA=0:13:56
[32m[11/10 21:56:17 d2.evaluation.evaluator]: [0mInference done 897/2229. 0.5416 s / img. ETA=0:13:51
[32m[11/10 21:56:22 d2.evaluation.evaluator]: [0mInference done 906/2229. 0.5416 s / img. ETA=0:13:45
[32m[11/10 21:56:28 d2.evaluation.evaluator]: [0mInference done 915/2229. 0.5416 s / img. ETA=0:13:39
[32m[11/10 21:56:33 d2.evaluation.evaluator]: [0mInference done 924/2229. 0.5417 s / img. ETA=0:13:33
[32m[11/10 21:56:39 d2.evaluation.evaluator]: [0mInference done 933/2229. 0.5417 s / img. ETA=0:13:28
[32m[11/10 21:56:44 d2.evaluation.evaluator]: [0mInference done 942/2229. 0.5417 s / img. ETA=0:13:22
[32m[11/10 21:56:50 d2.evaluation.evaluator]: [0mInference done 951/2229. 0.5417 s / img. ETA=0:13:16
[32m[11/10 21:56:56 d2.evaluation.evaluator]: [0mInference done 960/2229. 0.5418 s / img. ETA=0:13:10
[32m[11/10 21:57:01 d2.evaluation.evaluator]: [0mInference done 969/2229. 0.5418 s / img. ETA=0:13:05
[32m[11/10 21:57:06 d2.evaluation.evaluator]: [0mInference done 977/2229. 0.5419 s / img. ETA=0:13:00
[32m[11/10 21:57:12 d2.evaluation.evaluator]: [0mInference done 986/2229. 0.5419 s / img. ETA=0:12:54
[32m[11/10 21:57:17 d2.evaluation.evaluator]: [0mInference done 995/2229. 0.5420 s / img. ETA=0:12:48
[32m[11/10 21:57:23 d2.evaluation.evaluator]: [0mInference done 1004/2229. 0.5420 s / img. ETA=0:12:43
[32m[11/10 21:57:28 d2.evaluation.evaluator]: [0mInference done 1013/2229. 0.5420 s / img. ETA=0:12:37
[32m[11/10 21:57:33 d2.evaluation.evaluator]: [0mInference done 1022/2229. 0.5420 s / img. ETA=0:12:31
[32m[11/10 21:57:39 d2.evaluation.evaluator]: [0mInference done 1031/2229. 0.5421 s / img. ETA=0:12:25
[32m[11/10 21:57:45 d2.evaluation.evaluator]: [0mInference done 1040/2229. 0.5422 s / img. ETA=0:12:20
[32m[11/10 21:57:50 d2.evaluation.evaluator]: [0mInference done 1049/2229. 0.5422 s / img. ETA=0:12:14
[32m[11/10 21:57:56 d2.evaluation.evaluator]: [0mInference done 1058/2229. 0.5422 s / img. ETA=0:12:08
[32m[11/10 21:58:01 d2.evaluation.evaluator]: [0mInference done 1066/2229. 0.5421 s / img. ETA=0:12:03
[32m[11/10 21:58:06 d2.evaluation.evaluator]: [0mInference done 1074/2229. 0.5420 s / img. ETA=0:11:59
[32m[11/10 21:58:11 d2.evaluation.evaluator]: [0mInference done 1082/2229. 0.5419 s / img. ETA=0:11:54
[32m[11/10 21:58:16 d2.evaluation.evaluator]: [0mInference done 1090/2229. 0.5418 s / img. ETA=0:11:49
[32m[11/10 21:58:22 d2.evaluation.evaluator]: [0mInference done 1098/2229. 0.5419 s / img. ETA=0:11:45
[32m[11/10 21:58:27 d2.evaluation.evaluator]: [0mInference done 1106/2229. 0.5418 s / img. ETA=0:11:40
[32m[11/10 21:58:32 d2.evaluation.evaluator]: [0mInference done 1114/2229. 0.5417 s / img. ETA=0:11:35
[32m[11/10 21:58:37 d2.evaluation.evaluator]: [0mInference done 1122/2229. 0.5416 s / img. ETA=0:11:30
[32m[11/10 21:58:43 d2.evaluation.evaluator]: [0mInference done 1130/2229. 0.5416 s / img. ETA=0:11:25
[32m[11/10 21:58:48 d2.evaluation.evaluator]: [0mInference done 1138/2229. 0.5415 s / img. ETA=0:11:21
[32m[11/10 21:58:53 d2.evaluation.evaluator]: [0mInference done 1146/2229. 0.5414 s / img. ETA=0:11:16
[32m[11/10 21:58:58 d2.evaluation.evaluator]: [0mInference done 1154/2229. 0.5414 s / img. ETA=0:11:11
[32m[11/10 21:59:03 d2.evaluation.evaluator]: [0mInference done 1162/2229. 0.5413 s / img. ETA=0:11:06
[32m[11/10 21:59:08 d2.evaluation.evaluator]: [0mInference done 1170/2229. 0.5413 s / img. ETA=0:11:01
[32m[11/10 21:59:13 d2.evaluation.evaluator]: [0mInference done 1178/2229. 0.5412 s / img. ETA=0:10:56
[32m[11/10 21:59:19 d2.evaluation.evaluator]: [0mInference done 1186/2229. 0.5411 s / img. ETA=0:10:51
[32m[11/10 21:59:24 d2.evaluation.evaluator]: [0mInference done 1194/2229. 0.5411 s / img. ETA=0:10:47
[32m[11/10 21:59:29 d2.evaluation.evaluator]: [0mInference done 1202/2229. 0.5410 s / img. ETA=0:10:42
[32m[11/10 21:59:34 d2.evaluation.evaluator]: [0mInference done 1210/2229. 0.5410 s / img. ETA=0:10:37
[32m[11/10 21:59:40 d2.evaluation.evaluator]: [0mInference done 1218/2229. 0.5409 s / img. ETA=0:10:32
[32m[11/10 21:59:45 d2.evaluation.evaluator]: [0mInference done 1226/2229. 0.5408 s / img. ETA=0:10:27
[32m[11/10 21:59:50 d2.evaluation.evaluator]: [0mInference done 1234/2229. 0.5408 s / img. ETA=0:10:22
[32m[11/10 21:59:55 d2.evaluation.evaluator]: [0mInference done 1242/2229. 0.5407 s / img. ETA=0:10:18
[32m[11/10 22:00:00 d2.evaluation.evaluator]: [0mInference done 1250/2229. 0.5407 s / img. ETA=0:10:13
[32m[11/10 22:00:05 d2.evaluation.evaluator]: [0mInference done 1258/2229. 0.5407 s / img. ETA=0:10:08
[32m[11/10 22:00:10 d2.evaluation.evaluator]: [0mInference done 1266/2229. 0.5406 s / img. ETA=0:10:03
[32m[11/10 22:00:16 d2.evaluation.evaluator]: [0mInference done 1274/2229. 0.5406 s / img. ETA=0:09:58
[32m[11/10 22:00:21 d2.evaluation.evaluator]: [0mInference done 1282/2229. 0.5405 s / img. ETA=0:09:53
[32m[11/10 22:00:26 d2.evaluation.evaluator]: [0mInference done 1290/2229. 0.5405 s / img. ETA=0:09:48
[32m[11/10 22:00:31 d2.evaluation.evaluator]: [0mInference done 1298/2229. 0.5404 s / img. ETA=0:09:43
[32m[11/10 22:00:36 d2.evaluation.evaluator]: [0mInference done 1306/2229. 0.5404 s / img. ETA=0:09:38
[32m[11/10 22:00:42 d2.evaluation.evaluator]: [0mInference done 1314/2229. 0.5403 s / img. ETA=0:09:34
[32m[11/10 22:00:47 d2.evaluation.evaluator]: [0mInference done 1322/2229. 0.5402 s / img. ETA=0:09:29
[32m[11/10 22:00:52 d2.evaluation.evaluator]: [0mInference done 1330/2229. 0.5402 s / img. ETA=0:09:24
[32m[11/10 22:00:57 d2.evaluation.evaluator]: [0mInference done 1338/2229. 0.5401 s / img. ETA=0:09:19
[32m[11/10 22:01:03 d2.evaluation.evaluator]: [0mInference done 1346/2229. 0.5401 s / img. ETA=0:09:14
[32m[11/10 22:01:08 d2.evaluation.evaluator]: [0mInference done 1354/2229. 0.5400 s / img. ETA=0:09:09
[32m[11/10 22:01:13 d2.evaluation.evaluator]: [0mInference done 1362/2229. 0.5400 s / img. ETA=0:09:04
[32m[11/10 22:01:18 d2.evaluation.evaluator]: [0mInference done 1370/2229. 0.5399 s / img. ETA=0:08:59
[32m[11/10 22:01:23 d2.evaluation.evaluator]: [0mInference done 1378/2229. 0.5398 s / img. ETA=0:08:54
[32m[11/10 22:01:28 d2.evaluation.evaluator]: [0mInference done 1386/2229. 0.5398 s / img. ETA=0:08:49
[32m[11/10 22:01:34 d2.evaluation.evaluator]: [0mInference done 1394/2229. 0.5397 s / img. ETA=0:08:45
[32m[11/10 22:01:39 d2.evaluation.evaluator]: [0mInference done 1402/2229. 0.5396 s / img. ETA=0:08:40
[32m[11/10 22:01:44 d2.evaluation.evaluator]: [0mInference done 1410/2229. 0.5396 s / img. ETA=0:08:35
[32m[11/10 22:01:49 d2.evaluation.evaluator]: [0mInference done 1418/2229. 0.5395 s / img. ETA=0:08:30
[32m[11/10 22:01:54 d2.evaluation.evaluator]: [0mInference done 1426/2229. 0.5395 s / img. ETA=0:08:25
[32m[11/10 22:02:00 d2.evaluation.evaluator]: [0mInference done 1434/2229. 0.5394 s / img. ETA=0:08:20
[32m[11/10 22:02:05 d2.evaluation.evaluator]: [0mInference done 1442/2229. 0.5393 s / img. ETA=0:08:15
[32m[11/10 22:02:10 d2.evaluation.evaluator]: [0mInference done 1450/2229. 0.5393 s / img. ETA=0:08:10
[32m[11/10 22:02:15 d2.evaluation.evaluator]: [0mInference done 1458/2229. 0.5392 s / img. ETA=0:08:05
[32m[11/10 22:02:20 d2.evaluation.evaluator]: [0mInference done 1466/2229. 0.5391 s / img. ETA=0:08:00
[32m[11/10 22:02:26 d2.evaluation.evaluator]: [0mInference done 1474/2229. 0.5391 s / img. ETA=0:07:55
[32m[11/10 22:02:31 d2.evaluation.evaluator]: [0mInference done 1482/2229. 0.5390 s / img. ETA=0:07:50
[32m[11/10 22:02:36 d2.evaluation.evaluator]: [0mInference done 1490/2229. 0.5390 s / img. ETA=0:07:45
[32m[11/10 22:02:41 d2.evaluation.evaluator]: [0mInference done 1498/2229. 0.5390 s / img. ETA=0:07:40
[32m[11/10 22:02:47 d2.evaluation.evaluator]: [0mInference done 1506/2229. 0.5389 s / img. ETA=0:07:35
[32m[11/10 22:02:52 d2.evaluation.evaluator]: [0mInference done 1514/2229. 0.5388 s / img. ETA=0:07:30
[32m[11/10 22:02:57 d2.evaluation.evaluator]: [0mInference done 1522/2229. 0.5388 s / img. ETA=0:07:25
[32m[11/10 22:03:02 d2.evaluation.evaluator]: [0mInference done 1530/2229. 0.5388 s / img. ETA=0:07:20
[32m[11/10 22:03:07 d2.evaluation.evaluator]: [0mInference done 1538/2229. 0.5387 s / img. ETA=0:07:15
[32m[11/10 22:03:13 d2.evaluation.evaluator]: [0mInference done 1546/2229. 0.5387 s / img. ETA=0:07:10
[32m[11/10 22:03:18 d2.evaluation.evaluator]: [0mInference done 1554/2229. 0.5386 s / img. ETA=0:07:05
[32m[11/10 22:03:23 d2.evaluation.evaluator]: [0mInference done 1562/2229. 0.5386 s / img. ETA=0:07:00
[32m[11/10 22:03:28 d2.evaluation.evaluator]: [0mInference done 1570/2229. 0.5385 s / img. ETA=0:06:55
[32m[11/10 22:03:33 d2.evaluation.evaluator]: [0mInference done 1578/2229. 0.5385 s / img. ETA=0:06:50
[32m[11/10 22:03:38 d2.evaluation.evaluator]: [0mInference done 1586/2229. 0.5384 s / img. ETA=0:06:45
[32m[11/10 22:03:44 d2.evaluation.evaluator]: [0mInference done 1594/2229. 0.5383 s / img. ETA=0:06:40
[32m[11/10 22:03:49 d2.evaluation.evaluator]: [0mInference done 1602/2229. 0.5383 s / img. ETA=0:06:35
[32m[11/10 22:03:54 d2.evaluation.evaluator]: [0mInference done 1610/2229. 0.5382 s / img. ETA=0:06:30
[32m[11/10 22:03:59 d2.evaluation.evaluator]: [0mInference done 1618/2229. 0.5382 s / img. ETA=0:06:25
[32m[11/10 22:04:04 d2.evaluation.evaluator]: [0mInference done 1626/2229. 0.5381 s / img. ETA=0:06:20
[32m[11/10 22:04:10 d2.evaluation.evaluator]: [0mInference done 1634/2229. 0.5381 s / img. ETA=0:06:15
[32m[11/10 22:04:15 d2.evaluation.evaluator]: [0mInference done 1642/2229. 0.5380 s / img. ETA=0:06:10
[32m[11/10 22:04:20 d2.evaluation.evaluator]: [0mInference done 1650/2229. 0.5380 s / img. ETA=0:06:05
[32m[11/10 22:04:25 d2.evaluation.evaluator]: [0mInference done 1658/2229. 0.5379 s / img. ETA=0:06:00
[32m[11/10 22:04:30 d2.evaluation.evaluator]: [0mInference done 1666/2229. 0.5379 s / img. ETA=0:05:55
[32m[11/10 22:04:35 d2.evaluation.evaluator]: [0mInference done 1674/2229. 0.5378 s / img. ETA=0:05:50
[32m[11/10 22:04:40 d2.evaluation.evaluator]: [0mInference done 1682/2229. 0.5377 s / img. ETA=0:05:45
[32m[11/10 22:04:45 d2.evaluation.evaluator]: [0mInference done 1690/2229. 0.5377 s / img. ETA=0:05:40
[32m[11/10 22:04:51 d2.evaluation.evaluator]: [0mInference done 1698/2229. 0.5377 s / img. ETA=0:05:35
[32m[11/10 22:04:56 d2.evaluation.evaluator]: [0mInference done 1706/2229. 0.5376 s / img. ETA=0:05:30
[32m[11/10 22:05:01 d2.evaluation.evaluator]: [0mInference done 1714/2229. 0.5376 s / img. ETA=0:05:25
[32m[11/10 22:05:06 d2.evaluation.evaluator]: [0mInference done 1722/2229. 0.5376 s / img. ETA=0:05:20
[32m[11/10 22:05:11 d2.evaluation.evaluator]: [0mInference done 1730/2229. 0.5375 s / img. ETA=0:05:15
[32m[11/10 22:05:16 d2.evaluation.evaluator]: [0mInference done 1738/2229. 0.5375 s / img. ETA=0:05:10
[32m[11/10 22:05:22 d2.evaluation.evaluator]: [0mInference done 1746/2229. 0.5375 s / img. ETA=0:05:05
[32m[11/10 22:05:27 d2.evaluation.evaluator]: [0mInference done 1754/2229. 0.5374 s / img. ETA=0:05:00
[32m[11/10 22:05:32 d2.evaluation.evaluator]: [0mInference done 1762/2229. 0.5375 s / img. ETA=0:04:55
[32m[11/10 22:05:38 d2.evaluation.evaluator]: [0mInference done 1770/2229. 0.5375 s / img. ETA=0:04:50
[32m[11/10 22:05:43 d2.evaluation.evaluator]: [0mInference done 1778/2229. 0.5374 s / img. ETA=0:04:45
[32m[11/10 22:05:48 d2.evaluation.evaluator]: [0mInference done 1786/2229. 0.5374 s / img. ETA=0:04:40
[32m[11/10 22:05:53 d2.evaluation.evaluator]: [0mInference done 1794/2229. 0.5374 s / img. ETA=0:04:35
[32m[11/10 22:05:58 d2.evaluation.evaluator]: [0mInference done 1802/2229. 0.5373 s / img. ETA=0:04:30
[32m[11/10 22:06:04 d2.evaluation.evaluator]: [0mInference done 1810/2229. 0.5373 s / img. ETA=0:04:25
[32m[11/10 22:06:09 d2.evaluation.evaluator]: [0mInference done 1818/2229. 0.5373 s / img. ETA=0:04:20
[32m[11/10 22:06:14 d2.evaluation.evaluator]: [0mInference done 1826/2229. 0.5372 s / img. ETA=0:04:15
[32m[11/10 22:06:19 d2.evaluation.evaluator]: [0mInference done 1834/2229. 0.5372 s / img. ETA=0:04:10
[32m[11/10 22:06:24 d2.evaluation.evaluator]: [0mInference done 1842/2229. 0.5372 s / img. ETA=0:04:05
[32m[11/10 22:06:29 d2.evaluation.evaluator]: [0mInference done 1850/2229. 0.5371 s / img. ETA=0:04:00
[32m[11/10 22:06:35 d2.evaluation.evaluator]: [0mInference done 1858/2229. 0.5371 s / img. ETA=0:03:55
[32m[11/10 22:06:40 d2.evaluation.evaluator]: [0mInference done 1866/2229. 0.5370 s / img. ETA=0:03:50
[32m[11/10 22:06:45 d2.evaluation.evaluator]: [0mInference done 1874/2229. 0.5370 s / img. ETA=0:03:45
[32m[11/10 22:06:50 d2.evaluation.evaluator]: [0mInference done 1882/2229. 0.5369 s / img. ETA=0:03:39
[32m[11/10 22:06:55 d2.evaluation.evaluator]: [0mInference done 1890/2229. 0.5369 s / img. ETA=0:03:34
[32m[11/10 22:07:00 d2.evaluation.evaluator]: [0mInference done 1898/2229. 0.5369 s / img. ETA=0:03:29
[32m[11/10 22:07:06 d2.evaluation.evaluator]: [0mInference done 1906/2229. 0.5368 s / img. ETA=0:03:24
[32m[11/10 22:07:11 d2.evaluation.evaluator]: [0mInference done 1914/2229. 0.5368 s / img. ETA=0:03:19
[32m[11/10 22:07:16 d2.evaluation.evaluator]: [0mInference done 1922/2229. 0.5368 s / img. ETA=0:03:14
[32m[11/10 22:07:21 d2.evaluation.evaluator]: [0mInference done 1930/2229. 0.5368 s / img. ETA=0:03:09
[32m[11/10 22:07:27 d2.evaluation.evaluator]: [0mInference done 1938/2229. 0.5367 s / img. ETA=0:03:04
[32m[11/10 22:07:32 d2.evaluation.evaluator]: [0mInference done 1946/2229. 0.5367 s / img. ETA=0:02:59
[32m[11/10 22:07:37 d2.evaluation.evaluator]: [0mInference done 1954/2229. 0.5367 s / img. ETA=0:02:54
[32m[11/10 22:07:42 d2.evaluation.evaluator]: [0mInference done 1962/2229. 0.5366 s / img. ETA=0:02:49
[32m[11/10 22:07:47 d2.evaluation.evaluator]: [0mInference done 1970/2229. 0.5366 s / img. ETA=0:02:44
[32m[11/10 22:07:52 d2.evaluation.evaluator]: [0mInference done 1978/2229. 0.5366 s / img. ETA=0:02:39
[32m[11/10 22:07:58 d2.evaluation.evaluator]: [0mInference done 1986/2229. 0.5366 s / img. ETA=0:02:34
[32m[11/10 22:08:03 d2.evaluation.evaluator]: [0mInference done 1994/2229. 0.5366 s / img. ETA=0:02:29
[32m[11/10 22:08:08 d2.evaluation.evaluator]: [0mInference done 2002/2229. 0.5366 s / img. ETA=0:02:24
[32m[11/10 22:08:13 d2.evaluation.evaluator]: [0mInference done 2010/2229. 0.5365 s / img. ETA=0:02:19
[32m[11/10 22:08:18 d2.evaluation.evaluator]: [0mInference done 2018/2229. 0.5365 s / img. ETA=0:02:13
[32m[11/10 22:08:24 d2.evaluation.evaluator]: [0mInference done 2026/2229. 0.5365 s / img. ETA=0:02:08
[32m[11/10 22:08:29 d2.evaluation.evaluator]: [0mInference done 2034/2229. 0.5364 s / img. ETA=0:02:03
[32m[11/10 22:08:34 d2.evaluation.evaluator]: [0mInference done 2042/2229. 0.5364 s / img. ETA=0:01:58
[32m[11/10 22:08:39 d2.evaluation.evaluator]: [0mInference done 2050/2229. 0.5364 s / img. ETA=0:01:53
[32m[11/10 22:08:44 d2.evaluation.evaluator]: [0mInference done 2058/2229. 0.5363 s / img. ETA=0:01:48
[32m[11/10 22:08:49 d2.evaluation.evaluator]: [0mInference done 2066/2229. 0.5363 s / img. ETA=0:01:43
[32m[11/10 22:08:54 d2.evaluation.evaluator]: [0mInference done 2074/2229. 0.5363 s / img. ETA=0:01:38
[32m[11/10 22:09:00 d2.evaluation.evaluator]: [0mInference done 2082/2229. 0.5362 s / img. ETA=0:01:33
[32m[11/10 22:09:05 d2.evaluation.evaluator]: [0mInference done 2090/2229. 0.5362 s / img. ETA=0:01:28
[32m[11/10 22:09:10 d2.evaluation.evaluator]: [0mInference done 2098/2229. 0.5362 s / img. ETA=0:01:23
[32m[11/10 22:09:15 d2.evaluation.evaluator]: [0mInference done 2106/2229. 0.5361 s / img. ETA=0:01:18
[32m[11/10 22:09:20 d2.evaluation.evaluator]: [0mInference done 2114/2229. 0.5361 s / img. ETA=0:01:13
[32m[11/10 22:09:25 d2.evaluation.evaluator]: [0mInference done 2122/2229. 0.5361 s / img. ETA=0:01:07
[32m[11/10 22:09:31 d2.evaluation.evaluator]: [0mInference done 2130/2229. 0.5361 s / img. ETA=0:01:02
[32m[11/10 22:09:36 d2.evaluation.evaluator]: [0mInference done 2138/2229. 0.5360 s / img. ETA=0:00:57
[32m[11/10 22:09:41 d2.evaluation.evaluator]: [0mInference done 2146/2229. 0.5360 s / img. ETA=0:00:52
[32m[11/10 22:09:46 d2.evaluation.evaluator]: [0mInference done 2154/2229. 0.5360 s / img. ETA=0:00:47
[32m[11/10 22:09:51 d2.evaluation.evaluator]: [0mInference done 2162/2229. 0.5359 s / img. ETA=0:00:42
[32m[11/10 22:09:56 d2.evaluation.evaluator]: [0mInference done 2170/2229. 0.5359 s / img. ETA=0:00:37
[32m[11/10 22:10:02 d2.evaluation.evaluator]: [0mInference done 2178/2229. 0.5359 s / img. ETA=0:00:32
[32m[11/10 22:10:07 d2.evaluation.evaluator]: [0mInference done 2187/2229. 0.5358 s / img. ETA=0:00:26
[32m[11/10 22:10:12 d2.evaluation.evaluator]: [0mInference done 2195/2229. 0.5358 s / img. ETA=0:00:21
[32m[11/10 22:10:18 d2.evaluation.evaluator]: [0mInference done 2203/2229. 0.5358 s / img. ETA=0:00:16
[32m[11/10 22:10:23 d2.evaluation.evaluator]: [0mInference done 2211/2229. 0.5358 s / img. ETA=0:00:11
[32m[11/10 22:10:28 d2.evaluation.evaluator]: [0mInference done 2219/2229. 0.5357 s / img. ETA=0:00:06
[32m[11/10 22:10:33 d2.evaluation.evaluator]: [0mInference done 2227/2229. 0.5357 s / img. ETA=0:00:01
[32m[11/10 22:10:35 d2.evaluation.evaluator]: [0mTotal inference time: 0:23:34.186541 (0.635875 s / img per device, on 1 devices)
[32m[11/10 22:10:35 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:19:51 (0.535687 s / img per device, on 1 devices)
[32m[11/10 22:10:36 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/10 22:10:36 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/inference/coco_instances_results.json
[32m[11/10 22:10:36 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.65s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.82 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.44 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.011
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.035
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.026
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.032
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.055
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.012
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.045
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.196
[32m[11/10 22:10:39 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 1.121 | 3.459  | 0.363  | 0.135 | 1.032 | 2.625 |
[32m[11/10 22:10:39 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/10 22:10:39 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/10 22:10:39 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/10 22:10:40 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP    | category   | AP    | category         | AP    |
|:------------|:------|:-----------|:------|:-----------------|:------|
| backpac     | 0.000 | rop        | 2.646 | ven              | 1.847 |
| helme       | 0.256 | dril       | 0.069 | fire extinguishe | 5.237 |
| helmet-ligh | 0.000 | survivo    | 0.002 | cell phon        | nan   |
| cub         | 0.032 |            |       |                  |       |
[32m[11/10 22:10:40 d2.engine.defaults]: [0mEvaluation results for val_f_1 in csv format:
[32m[11/10 22:10:40 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/10 22:10:40 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/10 22:10:40 d2.evaluation.testing]: [0mcopypaste: 1.1211,3.4591,0.3632,0.1347,1.0323,2.6247
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
