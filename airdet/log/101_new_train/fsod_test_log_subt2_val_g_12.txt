Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt2.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:23:07 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/11 07:23:08 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/11 07:23:08 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt2.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:23:08 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt2.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 2
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/2shot'

[32m[11/11 07:23:08 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_g_12',)
  TESTSHOTS: 2
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/2shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/11 07:23:08 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/2shot/config.yaml
[32m[11/11 07:23:21 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/11 07:23:21 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/11 07:23:23 d2.data.datasets.coco]: [0mLoaded 2088 images in COCO format from datasets/SUBT/use/val_g_12/new_annotations/val_g_12.json
[32m[11/11 07:23:23 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 223          |    rop     | 0            |      ven      | 0            |
|    helme    | 0            |    dril    | 352          | fire exting.. | 667          |
| helmet-ligh | 0            |  survivo   | 972          |   cell phon   | 0            |
|     cub     | 0            |            |              |               |              |
|    total    | 2214         |            |              |               |              |[0m
[32m[11/11 07:23:23 d2.data.common]: [0mSerializing 2088 elements to byte tensors and concatenating them all ...
[32m[11/11 07:23:23 d2.data.common]: [0mSerialized dataset takes 0.50 MiB
[32m[11/11 07:23:23 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/11 07:23:23 d2.evaluation.evaluator]: [0mStart inference on 2088 images
[32m[11/11 07:23:30 d2.evaluation.evaluator]: [0mInference done 11/2088. 0.4754 s / img. ETA=0:19:12
[32m[11/11 07:23:36 d2.evaluation.evaluator]: [0mInference done 18/2088. 0.5154 s / img. ETA=0:23:37
[32m[11/11 07:23:42 d2.evaluation.evaluator]: [0mInference done 24/2088. 0.5304 s / img. ETA=0:26:10
[32m[11/11 07:23:47 d2.evaluation.evaluator]: [0mInference done 30/2088. 0.5518 s / img. ETA=0:27:41
[32m[11/11 07:23:53 d2.evaluation.evaluator]: [0mInference done 37/2088. 0.5435 s / img. ETA=0:27:44
[32m[11/11 07:23:58 d2.evaluation.evaluator]: [0mInference done 43/2088. 0.5450 s / img. ETA=0:27:53
[32m[11/11 07:24:03 d2.evaluation.evaluator]: [0mInference done 49/2088. 0.5365 s / img. ETA=0:27:54
[32m[11/11 07:24:08 d2.evaluation.evaluator]: [0mInference done 55/2088. 0.5328 s / img. ETA=0:28:01
[32m[11/11 07:24:14 d2.evaluation.evaluator]: [0mInference done 61/2088. 0.5357 s / img. ETA=0:28:07
[32m[11/11 07:24:19 d2.evaluation.evaluator]: [0mInference done 67/2088. 0.5372 s / img. ETA=0:28:13
[32m[11/11 07:24:24 d2.evaluation.evaluator]: [0mInference done 73/2088. 0.5390 s / img. ETA=0:28:12
[32m[11/11 07:24:30 d2.evaluation.evaluator]: [0mInference done 79/2088. 0.5404 s / img. ETA=0:28:16
[32m[11/11 07:24:35 d2.evaluation.evaluator]: [0mInference done 85/2088. 0.5421 s / img. ETA=0:28:16
[32m[11/11 07:24:41 d2.evaluation.evaluator]: [0mInference done 91/2088. 0.5457 s / img. ETA=0:28:27
[32m[11/11 07:24:46 d2.evaluation.evaluator]: [0mInference done 97/2088. 0.5471 s / img. ETA=0:28:28
[32m[11/11 07:24:51 d2.evaluation.evaluator]: [0mInference done 103/2088. 0.5472 s / img. ETA=0:28:29
[32m[11/11 07:24:57 d2.evaluation.evaluator]: [0mInference done 109/2088. 0.5473 s / img. ETA=0:28:31
[32m[11/11 07:25:02 d2.evaluation.evaluator]: [0mInference done 115/2088. 0.5480 s / img. ETA=0:28:27
[32m[11/11 07:25:08 d2.evaluation.evaluator]: [0mInference done 121/2088. 0.5491 s / img. ETA=0:28:24
[32m[11/11 07:25:13 d2.evaluation.evaluator]: [0mInference done 127/2088. 0.5489 s / img. ETA=0:28:17
[32m[11/11 07:25:18 d2.evaluation.evaluator]: [0mInference done 133/2088. 0.5497 s / img. ETA=0:28:13
[32m[11/11 07:25:23 d2.evaluation.evaluator]: [0mInference done 139/2088. 0.5480 s / img. ETA=0:28:05
[32m[11/11 07:25:28 d2.evaluation.evaluator]: [0mInference done 145/2088. 0.5490 s / img. ETA=0:28:04
[32m[11/11 07:25:34 d2.evaluation.evaluator]: [0mInference done 151/2088. 0.5466 s / img. ETA=0:27:57
[32m[11/11 07:25:39 d2.evaluation.evaluator]: [0mInference done 158/2088. 0.5469 s / img. ETA=0:27:38
[32m[11/11 07:25:44 d2.evaluation.evaluator]: [0mInference done 167/2088. 0.5448 s / img. ETA=0:27:00
[32m[11/11 07:25:49 d2.evaluation.evaluator]: [0mInference done 176/2088. 0.5442 s / img. ETA=0:26:28
[32m[11/11 07:25:54 d2.evaluation.evaluator]: [0mInference done 185/2088. 0.5429 s / img. ETA=0:25:57
[32m[11/11 07:25:59 d2.evaluation.evaluator]: [0mInference done 193/2088. 0.5429 s / img. ETA=0:25:36
[32m[11/11 07:26:05 d2.evaluation.evaluator]: [0mInference done 202/2088. 0.5409 s / img. ETA=0:25:08
[32m[11/11 07:26:10 d2.evaluation.evaluator]: [0mInference done 211/2088. 0.5414 s / img. ETA=0:24:46
[32m[11/11 07:26:15 d2.evaluation.evaluator]: [0mInference done 220/2088. 0.5392 s / img. ETA=0:24:22
[32m[11/11 07:26:21 d2.evaluation.evaluator]: [0mInference done 230/2088. 0.5372 s / img. ETA=0:23:56
[32m[11/11 07:26:26 d2.evaluation.evaluator]: [0mInference done 239/2088. 0.5360 s / img. ETA=0:23:36
[32m[11/11 07:26:31 d2.evaluation.evaluator]: [0mInference done 248/2088. 0.5345 s / img. ETA=0:23:15
[32m[11/11 07:26:37 d2.evaluation.evaluator]: [0mInference done 258/2088. 0.5338 s / img. ETA=0:22:55
[32m[11/11 07:26:42 d2.evaluation.evaluator]: [0mInference done 267/2088. 0.5324 s / img. ETA=0:22:36
[32m[11/11 07:26:48 d2.evaluation.evaluator]: [0mInference done 277/2088. 0.5306 s / img. ETA=0:22:16
[32m[11/11 07:26:53 d2.evaluation.evaluator]: [0mInference done 286/2088. 0.5306 s / img. ETA=0:22:03
[32m[11/11 07:26:59 d2.evaluation.evaluator]: [0mInference done 295/2088. 0.5292 s / img. ETA=0:21:47
[32m[11/11 07:27:04 d2.evaluation.evaluator]: [0mInference done 305/2088. 0.5283 s / img. ETA=0:21:30
[32m[11/11 07:27:10 d2.evaluation.evaluator]: [0mInference done 314/2088. 0.5274 s / img. ETA=0:21:17
[32m[11/11 07:27:15 d2.evaluation.evaluator]: [0mInference done 323/2088. 0.5268 s / img. ETA=0:21:04
[32m[11/11 07:27:20 d2.evaluation.evaluator]: [0mInference done 332/2088. 0.5261 s / img. ETA=0:20:51
[32m[11/11 07:27:25 d2.evaluation.evaluator]: [0mInference done 341/2088. 0.5250 s / img. ETA=0:20:39
[32m[11/11 07:27:31 d2.evaluation.evaluator]: [0mInference done 349/2088. 0.5255 s / img. ETA=0:20:30
[32m[11/11 07:27:36 d2.evaluation.evaluator]: [0mInference done 358/2088. 0.5248 s / img. ETA=0:20:20
[32m[11/11 07:27:41 d2.evaluation.evaluator]: [0mInference done 366/2088. 0.5252 s / img. ETA=0:20:11
[32m[11/11 07:27:46 d2.evaluation.evaluator]: [0mInference done 375/2088. 0.5241 s / img. ETA=0:20:00
[32m[11/11 07:27:52 d2.evaluation.evaluator]: [0mInference done 384/2088. 0.5240 s / img. ETA=0:19:50
[32m[11/11 07:27:57 d2.evaluation.evaluator]: [0mInference done 393/2088. 0.5234 s / img. ETA=0:19:40
[32m[11/11 07:28:03 d2.evaluation.evaluator]: [0mInference done 401/2088. 0.5248 s / img. ETA=0:19:34
[32m[11/11 07:28:08 d2.evaluation.evaluator]: [0mInference done 410/2088. 0.5240 s / img. ETA=0:19:24
[32m[11/11 07:28:13 d2.evaluation.evaluator]: [0mInference done 418/2088. 0.5242 s / img. ETA=0:19:16
[32m[11/11 07:28:18 d2.evaluation.evaluator]: [0mInference done 427/2088. 0.5235 s / img. ETA=0:19:06
[32m[11/11 07:28:24 d2.evaluation.evaluator]: [0mInference done 436/2088. 0.5233 s / img. ETA=0:18:57
[32m[11/11 07:28:29 d2.evaluation.evaluator]: [0mInference done 444/2088. 0.5235 s / img. ETA=0:18:50
[32m[11/11 07:28:34 d2.evaluation.evaluator]: [0mInference done 453/2088. 0.5227 s / img. ETA=0:18:40
[32m[11/11 07:28:40 d2.evaluation.evaluator]: [0mInference done 461/2088. 0.5239 s / img. ETA=0:18:35
[32m[11/11 07:28:45 d2.evaluation.evaluator]: [0mInference done 470/2088. 0.5239 s / img. ETA=0:18:27
[32m[11/11 07:28:50 d2.evaluation.evaluator]: [0mInference done 478/2088. 0.5244 s / img. ETA=0:18:20
[32m[11/11 07:28:56 d2.evaluation.evaluator]: [0mInference done 487/2088. 0.5237 s / img. ETA=0:18:11
[32m[11/11 07:29:01 d2.evaluation.evaluator]: [0mInference done 495/2088. 0.5239 s / img. ETA=0:18:04
[32m[11/11 07:29:06 d2.evaluation.evaluator]: [0mInference done 503/2088. 0.5230 s / img. ETA=0:17:59
[32m[11/11 07:29:11 d2.evaluation.evaluator]: [0mInference done 509/2088. 0.5235 s / img. ETA=0:17:58
[32m[11/11 07:29:17 d2.evaluation.evaluator]: [0mInference done 515/2088. 0.5240 s / img. ETA=0:17:57
[32m[11/11 07:29:22 d2.evaluation.evaluator]: [0mInference done 521/2088. 0.5245 s / img. ETA=0:17:57
[32m[11/11 07:29:27 d2.evaluation.evaluator]: [0mInference done 527/2088. 0.5246 s / img. ETA=0:17:56
[32m[11/11 07:29:32 d2.evaluation.evaluator]: [0mInference done 533/2088. 0.5250 s / img. ETA=0:17:55
[32m[11/11 07:29:38 d2.evaluation.evaluator]: [0mInference done 539/2088. 0.5253 s / img. ETA=0:17:55
[32m[11/11 07:29:43 d2.evaluation.evaluator]: [0mInference done 545/2088. 0.5253 s / img. ETA=0:17:54
[32m[11/11 07:29:48 d2.evaluation.evaluator]: [0mInference done 551/2088. 0.5255 s / img. ETA=0:17:53
[32m[11/11 07:29:54 d2.evaluation.evaluator]: [0mInference done 557/2088. 0.5260 s / img. ETA=0:17:52
[32m[11/11 07:29:59 d2.evaluation.evaluator]: [0mInference done 563/2088. 0.5263 s / img. ETA=0:17:50
[32m[11/11 07:30:04 d2.evaluation.evaluator]: [0mInference done 569/2088. 0.5265 s / img. ETA=0:17:49
[32m[11/11 07:30:09 d2.evaluation.evaluator]: [0mInference done 575/2088. 0.5269 s / img. ETA=0:17:47
[32m[11/11 07:30:15 d2.evaluation.evaluator]: [0mInference done 581/2088. 0.5272 s / img. ETA=0:17:46
[32m[11/11 07:30:20 d2.evaluation.evaluator]: [0mInference done 587/2088. 0.5276 s / img. ETA=0:17:44
[32m[11/11 07:30:26 d2.evaluation.evaluator]: [0mInference done 594/2088. 0.5276 s / img. ETA=0:17:41
[32m[11/11 07:30:32 d2.evaluation.evaluator]: [0mInference done 601/2088. 0.5276 s / img. ETA=0:17:39
[32m[11/11 07:30:37 d2.evaluation.evaluator]: [0mInference done 608/2088. 0.5276 s / img. ETA=0:17:35
[32m[11/11 07:30:42 d2.evaluation.evaluator]: [0mInference done 614/2088. 0.5278 s / img. ETA=0:17:33
[32m[11/11 07:30:48 d2.evaluation.evaluator]: [0mInference done 620/2088. 0.5280 s / img. ETA=0:17:31
[32m[11/11 07:30:53 d2.evaluation.evaluator]: [0mInference done 626/2088. 0.5282 s / img. ETA=0:17:29
[32m[11/11 07:30:59 d2.evaluation.evaluator]: [0mInference done 633/2088. 0.5282 s / img. ETA=0:17:26
[32m[11/11 07:31:04 d2.evaluation.evaluator]: [0mInference done 640/2088. 0.5282 s / img. ETA=0:17:21
[32m[11/11 07:31:09 d2.evaluation.evaluator]: [0mInference done 649/2088. 0.5274 s / img. ETA=0:17:11
[32m[11/11 07:31:14 d2.evaluation.evaluator]: [0mInference done 658/2088. 0.5268 s / img. ETA=0:17:02
[32m[11/11 07:31:20 d2.evaluation.evaluator]: [0mInference done 667/2088. 0.5271 s / img. ETA=0:16:54
[32m[11/11 07:31:25 d2.evaluation.evaluator]: [0mInference done 676/2088. 0.5265 s / img. ETA=0:16:44
[32m[11/11 07:31:30 d2.evaluation.evaluator]: [0mInference done 685/2088. 0.5261 s / img. ETA=0:16:35
[32m[11/11 07:31:35 d2.evaluation.evaluator]: [0mInference done 693/2088. 0.5265 s / img. ETA=0:16:29
[32m[11/11 07:31:40 d2.evaluation.evaluator]: [0mInference done 702/2088. 0.5260 s / img. ETA=0:16:20
[32m[11/11 07:31:45 d2.evaluation.evaluator]: [0mInference done 711/2088. 0.5259 s / img. ETA=0:16:12
[32m[11/11 07:31:51 d2.evaluation.evaluator]: [0mInference done 720/2088. 0.5258 s / img. ETA=0:16:03
[32m[11/11 07:31:56 d2.evaluation.evaluator]: [0mInference done 729/2088. 0.5256 s / img. ETA=0:15:55
[32m[11/11 07:32:02 d2.evaluation.evaluator]: [0mInference done 738/2088. 0.5259 s / img. ETA=0:15:47
[32m[11/11 07:32:07 d2.evaluation.evaluator]: [0mInference done 747/2088. 0.5258 s / img. ETA=0:15:39
[32m[11/11 07:32:12 d2.evaluation.evaluator]: [0mInference done 755/2088. 0.5263 s / img. ETA=0:15:33
[32m[11/11 07:32:17 d2.evaluation.evaluator]: [0mInference done 764/2088. 0.5259 s / img. ETA=0:15:24
[32m[11/11 07:32:23 d2.evaluation.evaluator]: [0mInference done 774/2088. 0.5251 s / img. ETA=0:15:15
[32m[11/11 07:32:28 d2.evaluation.evaluator]: [0mInference done 783/2088. 0.5253 s / img. ETA=0:15:07
[32m[11/11 07:32:33 d2.evaluation.evaluator]: [0mInference done 792/2088. 0.5249 s / img. ETA=0:14:59
[32m[11/11 07:32:38 d2.evaluation.evaluator]: [0mInference done 801/2088. 0.5244 s / img. ETA=0:14:51
[32m[11/11 07:32:44 d2.evaluation.evaluator]: [0mInference done 810/2088. 0.5246 s / img. ETA=0:14:44
[32m[11/11 07:32:49 d2.evaluation.evaluator]: [0mInference done 819/2088. 0.5242 s / img. ETA=0:14:36
[32m[11/11 07:32:55 d2.evaluation.evaluator]: [0mInference done 829/2088. 0.5236 s / img. ETA=0:14:27
[32m[11/11 07:33:00 d2.evaluation.evaluator]: [0mInference done 838/2088. 0.5238 s / img. ETA=0:14:19
[32m[11/11 07:33:05 d2.evaluation.evaluator]: [0mInference done 847/2088. 0.5233 s / img. ETA=0:14:12
[32m[11/11 07:33:11 d2.evaluation.evaluator]: [0mInference done 856/2088. 0.5235 s / img. ETA=0:14:05
[32m[11/11 07:33:16 d2.evaluation.evaluator]: [0mInference done 864/2088. 0.5240 s / img. ETA=0:13:59
[32m[11/11 07:33:22 d2.evaluation.evaluator]: [0mInference done 871/2088. 0.5246 s / img. ETA=0:13:55
[32m[11/11 07:33:28 d2.evaluation.evaluator]: [0mInference done 878/2088. 0.5252 s / img. ETA=0:13:52
[32m[11/11 07:33:33 d2.evaluation.evaluator]: [0mInference done 885/2088. 0.5254 s / img. ETA=0:13:48
[32m[11/11 07:33:39 d2.evaluation.evaluator]: [0mInference done 892/2088. 0.5260 s / img. ETA=0:13:45
[32m[11/11 07:33:44 d2.evaluation.evaluator]: [0mInference done 898/2088. 0.5265 s / img. ETA=0:13:42
[32m[11/11 07:33:50 d2.evaluation.evaluator]: [0mInference done 905/2088. 0.5268 s / img. ETA=0:13:38
[32m[11/11 07:33:55 d2.evaluation.evaluator]: [0mInference done 912/2088. 0.5272 s / img. ETA=0:13:34
[32m[11/11 07:34:01 d2.evaluation.evaluator]: [0mInference done 919/2088. 0.5275 s / img. ETA=0:13:30
[32m[11/11 07:34:07 d2.evaluation.evaluator]: [0mInference done 926/2088. 0.5281 s / img. ETA=0:13:26
[32m[11/11 07:34:12 d2.evaluation.evaluator]: [0mInference done 933/2088. 0.5287 s / img. ETA=0:13:23
[32m[11/11 07:34:18 d2.evaluation.evaluator]: [0mInference done 940/2088. 0.5289 s / img. ETA=0:13:19
[32m[11/11 07:34:24 d2.evaluation.evaluator]: [0mInference done 947/2088. 0.5295 s / img. ETA=0:13:15
[32m[11/11 07:34:29 d2.evaluation.evaluator]: [0mInference done 954/2088. 0.5299 s / img. ETA=0:13:11
[32m[11/11 07:34:35 d2.evaluation.evaluator]: [0mInference done 961/2088. 0.5301 s / img. ETA=0:13:07
[32m[11/11 07:34:40 d2.evaluation.evaluator]: [0mInference done 967/2088. 0.5305 s / img. ETA=0:13:04
[32m[11/11 07:34:46 d2.evaluation.evaluator]: [0mInference done 974/2088. 0.5309 s / img. ETA=0:13:00
[32m[11/11 07:34:51 d2.evaluation.evaluator]: [0mInference done 981/2088. 0.5313 s / img. ETA=0:12:55
[32m[11/11 07:34:56 d2.evaluation.evaluator]: [0mInference done 989/2088. 0.5316 s / img. ETA=0:12:49
[32m[11/11 07:35:01 d2.evaluation.evaluator]: [0mInference done 997/2088. 0.5320 s / img. ETA=0:12:43
[32m[11/11 07:35:06 d2.evaluation.evaluator]: [0mInference done 1005/2088. 0.5324 s / img. ETA=0:12:37
[32m[11/11 07:35:12 d2.evaluation.evaluator]: [0mInference done 1013/2088. 0.5329 s / img. ETA=0:12:31
[32m[11/11 07:35:17 d2.evaluation.evaluator]: [0mInference done 1021/2088. 0.5330 s / img. ETA=0:12:25
[32m[11/11 07:35:22 d2.evaluation.evaluator]: [0mInference done 1029/2088. 0.5335 s / img. ETA=0:12:19
[32m[11/11 07:35:27 d2.evaluation.evaluator]: [0mInference done 1037/2088. 0.5339 s / img. ETA=0:12:13
[32m[11/11 07:35:33 d2.evaluation.evaluator]: [0mInference done 1046/2088. 0.5340 s / img. ETA=0:12:06
[32m[11/11 07:35:38 d2.evaluation.evaluator]: [0mInference done 1054/2088. 0.5345 s / img. ETA=0:12:00
[32m[11/11 07:35:43 d2.evaluation.evaluator]: [0mInference done 1062/2088. 0.5348 s / img. ETA=0:11:54
[32m[11/11 07:35:48 d2.evaluation.evaluator]: [0mInference done 1070/2088. 0.5351 s / img. ETA=0:11:48
[32m[11/11 07:35:53 d2.evaluation.evaluator]: [0mInference done 1078/2088. 0.5354 s / img. ETA=0:11:42
[32m[11/11 07:35:58 d2.evaluation.evaluator]: [0mInference done 1086/2088. 0.5356 s / img. ETA=0:11:36
[32m[11/11 07:36:04 d2.evaluation.evaluator]: [0mInference done 1094/2088. 0.5360 s / img. ETA=0:11:30
[32m[11/11 07:36:09 d2.evaluation.evaluator]: [0mInference done 1102/2088. 0.5363 s / img. ETA=0:11:24
[32m[11/11 07:36:14 d2.evaluation.evaluator]: [0mInference done 1110/2088. 0.5366 s / img. ETA=0:11:18
[32m[11/11 07:36:19 d2.evaluation.evaluator]: [0mInference done 1118/2088. 0.5368 s / img. ETA=0:11:12
[32m[11/11 07:36:24 d2.evaluation.evaluator]: [0mInference done 1126/2088. 0.5372 s / img. ETA=0:11:06
[32m[11/11 07:36:29 d2.evaluation.evaluator]: [0mInference done 1134/2088. 0.5376 s / img. ETA=0:11:01
[32m[11/11 07:36:35 d2.evaluation.evaluator]: [0mInference done 1143/2088. 0.5379 s / img. ETA=0:10:54
[32m[11/11 07:36:41 d2.evaluation.evaluator]: [0mInference done 1152/2088. 0.5381 s / img. ETA=0:10:47
[32m[11/11 07:36:46 d2.evaluation.evaluator]: [0mInference done 1160/2088. 0.5383 s / img. ETA=0:10:41
[32m[11/11 07:36:52 d2.evaluation.evaluator]: [0mInference done 1169/2088. 0.5386 s / img. ETA=0:10:35
[32m[11/11 07:36:57 d2.evaluation.evaluator]: [0mInference done 1178/2088. 0.5388 s / img. ETA=0:10:28
[32m[11/11 07:37:02 d2.evaluation.evaluator]: [0mInference done 1186/2088. 0.5390 s / img. ETA=0:10:22
[32m[11/11 07:37:07 d2.evaluation.evaluator]: [0mInference done 1194/2088. 0.5393 s / img. ETA=0:10:16
[32m[11/11 07:37:12 d2.evaluation.evaluator]: [0mInference done 1202/2088. 0.5395 s / img. ETA=0:10:10
[32m[11/11 07:37:17 d2.evaluation.evaluator]: [0mInference done 1210/2088. 0.5397 s / img. ETA=0:10:04
[32m[11/11 07:37:22 d2.evaluation.evaluator]: [0mInference done 1218/2088. 0.5398 s / img. ETA=0:09:59
[32m[11/11 07:37:27 d2.evaluation.evaluator]: [0mInference done 1226/2088. 0.5400 s / img. ETA=0:09:53
[32m[11/11 07:37:33 d2.evaluation.evaluator]: [0mInference done 1234/2088. 0.5403 s / img. ETA=0:09:47
[32m[11/11 07:37:38 d2.evaluation.evaluator]: [0mInference done 1242/2088. 0.5407 s / img. ETA=0:09:41
[32m[11/11 07:37:43 d2.evaluation.evaluator]: [0mInference done 1250/2088. 0.5409 s / img. ETA=0:09:36
[32m[11/11 07:37:48 d2.evaluation.evaluator]: [0mInference done 1258/2088. 0.5411 s / img. ETA=0:09:30
[32m[11/11 07:37:53 d2.evaluation.evaluator]: [0mInference done 1266/2088. 0.5412 s / img. ETA=0:09:24
[32m[11/11 07:37:58 d2.evaluation.evaluator]: [0mInference done 1274/2088. 0.5414 s / img. ETA=0:09:18
[32m[11/11 07:38:03 d2.evaluation.evaluator]: [0mInference done 1282/2088. 0.5416 s / img. ETA=0:09:13
[32m[11/11 07:38:09 d2.evaluation.evaluator]: [0mInference done 1291/2088. 0.5418 s / img. ETA=0:09:06
[32m[11/11 07:38:14 d2.evaluation.evaluator]: [0mInference done 1299/2088. 0.5420 s / img. ETA=0:09:00
[32m[11/11 07:38:19 d2.evaluation.evaluator]: [0mInference done 1307/2088. 0.5423 s / img. ETA=0:08:55
[32m[11/11 07:38:25 d2.evaluation.evaluator]: [0mInference done 1316/2088. 0.5423 s / img. ETA=0:08:48
[32m[11/11 07:38:30 d2.evaluation.evaluator]: [0mInference done 1324/2088. 0.5425 s / img. ETA=0:08:42
[32m[11/11 07:38:36 d2.evaluation.evaluator]: [0mInference done 1333/2088. 0.5427 s / img. ETA=0:08:36
[32m[11/11 07:38:41 d2.evaluation.evaluator]: [0mInference done 1342/2088. 0.5427 s / img. ETA=0:08:29
[32m[11/11 07:38:46 d2.evaluation.evaluator]: [0mInference done 1350/2088. 0.5429 s / img. ETA=0:08:24
[32m[11/11 07:38:51 d2.evaluation.evaluator]: [0mInference done 1358/2088. 0.5431 s / img. ETA=0:08:18
[32m[11/11 07:38:56 d2.evaluation.evaluator]: [0mInference done 1366/2088. 0.5433 s / img. ETA=0:08:12
[32m[11/11 07:39:01 d2.evaluation.evaluator]: [0mInference done 1374/2088. 0.5435 s / img. ETA=0:08:07
[32m[11/11 07:39:07 d2.evaluation.evaluator]: [0mInference done 1382/2088. 0.5437 s / img. ETA=0:08:01
[32m[11/11 07:39:12 d2.evaluation.evaluator]: [0mInference done 1390/2088. 0.5441 s / img. ETA=0:07:56
[32m[11/11 07:39:17 d2.evaluation.evaluator]: [0mInference done 1398/2088. 0.5442 s / img. ETA=0:07:50
[32m[11/11 07:39:22 d2.evaluation.evaluator]: [0mInference done 1406/2088. 0.5444 s / img. ETA=0:07:44
[32m[11/11 07:39:28 d2.evaluation.evaluator]: [0mInference done 1415/2088. 0.5445 s / img. ETA=0:07:38
[32m[11/11 07:39:33 d2.evaluation.evaluator]: [0mInference done 1423/2088. 0.5447 s / img. ETA=0:07:32
[32m[11/11 07:39:38 d2.evaluation.evaluator]: [0mInference done 1431/2088. 0.5449 s / img. ETA=0:07:27
[32m[11/11 07:39:43 d2.evaluation.evaluator]: [0mInference done 1439/2088. 0.5452 s / img. ETA=0:07:21
[32m[11/11 07:39:49 d2.evaluation.evaluator]: [0mInference done 1447/2088. 0.5454 s / img. ETA=0:07:16
[32m[11/11 07:39:54 d2.evaluation.evaluator]: [0mInference done 1455/2088. 0.5455 s / img. ETA=0:07:10
[32m[11/11 07:40:00 d2.evaluation.evaluator]: [0mInference done 1462/2088. 0.5458 s / img. ETA=0:07:06
[32m[11/11 07:40:05 d2.evaluation.evaluator]: [0mInference done 1469/2088. 0.5460 s / img. ETA=0:07:02
[32m[11/11 07:40:11 d2.evaluation.evaluator]: [0mInference done 1476/2088. 0.5462 s / img. ETA=0:06:57
[32m[11/11 07:40:16 d2.evaluation.evaluator]: [0mInference done 1483/2088. 0.5463 s / img. ETA=0:06:53
[32m[11/11 07:40:22 d2.evaluation.evaluator]: [0mInference done 1490/2088. 0.5465 s / img. ETA=0:06:48
[32m[11/11 07:40:27 d2.evaluation.evaluator]: [0mInference done 1497/2088. 0.5467 s / img. ETA=0:06:44
[32m[11/11 07:40:33 d2.evaluation.evaluator]: [0mInference done 1504/2088. 0.5469 s / img. ETA=0:06:39
[32m[11/11 07:40:39 d2.evaluation.evaluator]: [0mInference done 1511/2088. 0.5472 s / img. ETA=0:06:35
[32m[11/11 07:40:44 d2.evaluation.evaluator]: [0mInference done 1517/2088. 0.5474 s / img. ETA=0:06:31
[32m[11/11 07:40:49 d2.evaluation.evaluator]: [0mInference done 1524/2088. 0.5476 s / img. ETA=0:06:27
[32m[11/11 07:40:55 d2.evaluation.evaluator]: [0mInference done 1531/2088. 0.5478 s / img. ETA=0:06:22
[32m[11/11 07:41:00 d2.evaluation.evaluator]: [0mInference done 1538/2088. 0.5479 s / img. ETA=0:06:17
[32m[11/11 07:41:06 d2.evaluation.evaluator]: [0mInference done 1545/2088. 0.5480 s / img. ETA=0:06:13
[32m[11/11 07:41:11 d2.evaluation.evaluator]: [0mInference done 1552/2088. 0.5482 s / img. ETA=0:06:08
[32m[11/11 07:41:17 d2.evaluation.evaluator]: [0mInference done 1559/2088. 0.5484 s / img. ETA=0:06:04
[32m[11/11 07:41:22 d2.evaluation.evaluator]: [0mInference done 1566/2088. 0.5486 s / img. ETA=0:05:59
[32m[11/11 07:41:28 d2.evaluation.evaluator]: [0mInference done 1573/2088. 0.5488 s / img. ETA=0:05:54
[32m[11/11 07:41:33 d2.evaluation.evaluator]: [0mInference done 1580/2088. 0.5489 s / img. ETA=0:05:50
[32m[11/11 07:41:39 d2.evaluation.evaluator]: [0mInference done 1587/2088. 0.5490 s / img. ETA=0:05:45
[32m[11/11 07:41:44 d2.evaluation.evaluator]: [0mInference done 1594/2088. 0.5492 s / img. ETA=0:05:41
[32m[11/11 07:41:50 d2.evaluation.evaluator]: [0mInference done 1601/2088. 0.5494 s / img. ETA=0:05:36
[32m[11/11 07:41:55 d2.evaluation.evaluator]: [0mInference done 1608/2088. 0.5496 s / img. ETA=0:05:31
[32m[11/11 07:42:01 d2.evaluation.evaluator]: [0mInference done 1615/2088. 0.5497 s / img. ETA=0:05:27
[32m[11/11 07:42:06 d2.evaluation.evaluator]: [0mInference done 1622/2088. 0.5499 s / img. ETA=0:05:22
[32m[11/11 07:42:11 d2.evaluation.evaluator]: [0mInference done 1630/2088. 0.5500 s / img. ETA=0:05:16
[32m[11/11 07:42:16 d2.evaluation.evaluator]: [0mInference done 1638/2088. 0.5501 s / img. ETA=0:05:11
[32m[11/11 07:42:22 d2.evaluation.evaluator]: [0mInference done 1646/2088. 0.5503 s / img. ETA=0:05:05
[32m[11/11 07:42:27 d2.evaluation.evaluator]: [0mInference done 1654/2088. 0.5505 s / img. ETA=0:04:59
[32m[11/11 07:42:32 d2.evaluation.evaluator]: [0mInference done 1662/2088. 0.5507 s / img. ETA=0:04:54
[32m[11/11 07:42:37 d2.evaluation.evaluator]: [0mInference done 1670/2088. 0.5509 s / img. ETA=0:04:48
[32m[11/11 07:42:43 d2.evaluation.evaluator]: [0mInference done 1678/2088. 0.5510 s / img. ETA=0:04:43
[32m[11/11 07:42:48 d2.evaluation.evaluator]: [0mInference done 1686/2088. 0.5513 s / img. ETA=0:04:37
[32m[11/11 07:42:53 d2.evaluation.evaluator]: [0mInference done 1694/2088. 0.5515 s / img. ETA=0:04:32
[32m[11/11 07:42:58 d2.evaluation.evaluator]: [0mInference done 1702/2088. 0.5516 s / img. ETA=0:04:26
[32m[11/11 07:43:04 d2.evaluation.evaluator]: [0mInference done 1711/2088. 0.5517 s / img. ETA=0:04:20
[32m[11/11 07:43:10 d2.evaluation.evaluator]: [0mInference done 1720/2088. 0.5517 s / img. ETA=0:04:13
[32m[11/11 07:43:15 d2.evaluation.evaluator]: [0mInference done 1728/2088. 0.5518 s / img. ETA=0:04:08
[32m[11/11 07:43:20 d2.evaluation.evaluator]: [0mInference done 1736/2088. 0.5519 s / img. ETA=0:04:02
[32m[11/11 07:43:25 d2.evaluation.evaluator]: [0mInference done 1744/2088. 0.5520 s / img. ETA=0:03:56
[32m[11/11 07:43:30 d2.evaluation.evaluator]: [0mInference done 1752/2088. 0.5522 s / img. ETA=0:03:51
[32m[11/11 07:43:36 d2.evaluation.evaluator]: [0mInference done 1761/2088. 0.5522 s / img. ETA=0:03:45
[32m[11/11 07:43:41 d2.evaluation.evaluator]: [0mInference done 1770/2088. 0.5523 s / img. ETA=0:03:38
[32m[11/11 07:43:47 d2.evaluation.evaluator]: [0mInference done 1778/2088. 0.5524 s / img. ETA=0:03:33
[32m[11/11 07:43:52 d2.evaluation.evaluator]: [0mInference done 1786/2088. 0.5526 s / img. ETA=0:03:27
[32m[11/11 07:43:57 d2.evaluation.evaluator]: [0mInference done 1795/2088. 0.5525 s / img. ETA=0:03:21
[32m[11/11 07:44:02 d2.evaluation.evaluator]: [0mInference done 1803/2088. 0.5526 s / img. ETA=0:03:15
[32m[11/11 07:44:07 d2.evaluation.evaluator]: [0mInference done 1811/2088. 0.5527 s / img. ETA=0:03:10
[32m[11/11 07:44:13 d2.evaluation.evaluator]: [0mInference done 1819/2088. 0.5528 s / img. ETA=0:03:04
[32m[11/11 07:44:18 d2.evaluation.evaluator]: [0mInference done 1827/2088. 0.5529 s / img. ETA=0:02:59
[32m[11/11 07:44:23 d2.evaluation.evaluator]: [0mInference done 1835/2088. 0.5531 s / img. ETA=0:02:53
[32m[11/11 07:44:28 d2.evaluation.evaluator]: [0mInference done 1843/2088. 0.5533 s / img. ETA=0:02:48
[32m[11/11 07:44:33 d2.evaluation.evaluator]: [0mInference done 1851/2088. 0.5534 s / img. ETA=0:02:42
[32m[11/11 07:44:38 d2.evaluation.evaluator]: [0mInference done 1859/2088. 0.5534 s / img. ETA=0:02:37
[32m[11/11 07:44:44 d2.evaluation.evaluator]: [0mInference done 1867/2088. 0.5535 s / img. ETA=0:02:31
[32m[11/11 07:44:49 d2.evaluation.evaluator]: [0mInference done 1875/2088. 0.5536 s / img. ETA=0:02:25
[32m[11/11 07:44:54 d2.evaluation.evaluator]: [0mInference done 1884/2088. 0.5537 s / img. ETA=0:02:19
[32m[11/11 07:45:00 d2.evaluation.evaluator]: [0mInference done 1893/2088. 0.5535 s / img. ETA=0:02:13
[32m[11/11 07:45:05 d2.evaluation.evaluator]: [0mInference done 1901/2088. 0.5537 s / img. ETA=0:02:07
[32m[11/11 07:45:10 d2.evaluation.evaluator]: [0mInference done 1910/2088. 0.5535 s / img. ETA=0:02:01
[32m[11/11 07:45:15 d2.evaluation.evaluator]: [0mInference done 1918/2088. 0.5536 s / img. ETA=0:01:56
[32m[11/11 07:45:20 d2.evaluation.evaluator]: [0mInference done 1926/2088. 0.5537 s / img. ETA=0:01:50
[32m[11/11 07:45:25 d2.evaluation.evaluator]: [0mInference done 1934/2088. 0.5537 s / img. ETA=0:01:45
[32m[11/11 07:45:30 d2.evaluation.evaluator]: [0mInference done 1942/2088. 0.5538 s / img. ETA=0:01:39
[32m[11/11 07:45:36 d2.evaluation.evaluator]: [0mInference done 1950/2088. 0.5539 s / img. ETA=0:01:34
[32m[11/11 07:45:41 d2.evaluation.evaluator]: [0mInference done 1958/2088. 0.5540 s / img. ETA=0:01:28
[32m[11/11 07:45:46 d2.evaluation.evaluator]: [0mInference done 1967/2088. 0.5540 s / img. ETA=0:01:22
[32m[11/11 07:45:52 d2.evaluation.evaluator]: [0mInference done 1976/2088. 0.5540 s / img. ETA=0:01:16
[32m[11/11 07:45:57 d2.evaluation.evaluator]: [0mInference done 1984/2088. 0.5541 s / img. ETA=0:01:10
[32m[11/11 07:46:02 d2.evaluation.evaluator]: [0mInference done 1993/2088. 0.5541 s / img. ETA=0:01:04
[32m[11/11 07:46:07 d2.evaluation.evaluator]: [0mInference done 2001/2088. 0.5543 s / img. ETA=0:00:59
[32m[11/11 07:46:13 d2.evaluation.evaluator]: [0mInference done 2010/2088. 0.5542 s / img. ETA=0:00:53
[32m[11/11 07:46:18 d2.evaluation.evaluator]: [0mInference done 2018/2088. 0.5544 s / img. ETA=0:00:47
[32m[11/11 07:46:23 d2.evaluation.evaluator]: [0mInference done 2027/2088. 0.5543 s / img. ETA=0:00:41
[32m[11/11 07:46:28 d2.evaluation.evaluator]: [0mInference done 2035/2088. 0.5544 s / img. ETA=0:00:36
[32m[11/11 07:46:33 d2.evaluation.evaluator]: [0mInference done 2044/2088. 0.5544 s / img. ETA=0:00:29
[32m[11/11 07:46:38 d2.evaluation.evaluator]: [0mInference done 2052/2088. 0.5545 s / img. ETA=0:00:24
[32m[11/11 07:46:44 d2.evaluation.evaluator]: [0mInference done 2061/2088. 0.5545 s / img. ETA=0:00:18
[32m[11/11 07:46:49 d2.evaluation.evaluator]: [0mInference done 2069/2088. 0.5545 s / img. ETA=0:00:12
[32m[11/11 07:46:54 d2.evaluation.evaluator]: [0mInference done 2078/2088. 0.5545 s / img. ETA=0:00:06
[32m[11/11 07:46:59 d2.evaluation.evaluator]: [0mInference done 2087/2088. 0.5544 s / img. ETA=0:00:00
[32m[11/11 07:47:00 d2.evaluation.evaluator]: [0mTotal inference time: 0:23:33.005928 (0.678351 s / img per device, on 1 devices)
[32m[11/11 07:47:00 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:19:14 (0.554460 s / img per device, on 1 devices)
[32m[11/11 07:47:01 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 07:47:01 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/2shot/inference/coco_instances_results.json
[32m[11/11 07:47:01 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.23s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.22 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.27 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.158
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.321
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.120
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.312
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.429
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.074
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.337
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.487
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 15.809 | 32.071 | 14.015 | 0.880 | 12.033 | 20.309 |
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 07:47:03 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP     | category   | AP     | category         | AP     |
|:------------|:-------|:-----------|:-------|:-----------------|:-------|
| backpac     | 13.859 | rop        | nan    | ven              | nan    |
| helme       | nan    | dril       | 10.864 | fire extinguishe | 34.575 |
| helmet-ligh | nan    | survivo    | 3.937  | cell phon        | nan    |
| cub         | nan    |            |        |                  |        |
[32m[11/11 07:47:03 d2.engine.defaults]: [0mEvaluation results for val_g_12 in csv format:
[32m[11/11 07:47:03 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 07:47:03 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 07:47:03 d2.evaluation.testing]: [0mcopypaste: 15.8087,32.0709,14.0148,0.8805,12.0333,20.3086
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
