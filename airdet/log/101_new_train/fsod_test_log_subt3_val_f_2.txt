Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/11 00:49:16 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/11 00:49:19 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/11 00:49:19 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/11 00:49:19 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt3.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 3
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/3shot'

[32m[11/11 00:49:19 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_f_2',)
  TESTSHOTS: 3
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/3shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/11 00:49:19 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/config.yaml
[32m[11/11 00:49:26 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/11 00:49:26 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/11 00:49:27 d2.data.datasets.coco]: [0mLoaded 2913 images in COCO format from datasets/SUBT/use/val_f_2/new_annotations/val_f_2.json
[32m[11/11 00:49:27 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 1454         |    rop     | 919          |      ven      | 1170         |
|    helme    | 1131         |    dril    | 517          | fire exting.. | 1436         |
| helmet-ligh | 25           |  survivo   | 447          |   cell phon   | 1            |
|     cub     | 390          |            |              |               |              |
|    total    | 7490         |            |              |               |              |[0m
[32m[11/11 00:49:27 d2.data.common]: [0mSerializing 2913 elements to byte tensors and concatenating them all ...
[32m[11/11 00:49:27 d2.data.common]: [0mSerialized dataset takes 0.82 MiB
[32m[11/11 00:49:27 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/11 00:49:27 d2.evaluation.evaluator]: [0mStart inference on 2913 images
[32m[11/11 00:49:34 d2.evaluation.evaluator]: [0mInference done 11/2913. 0.5450 s / img. ETA=0:28:43
[32m[11/11 00:49:39 d2.evaluation.evaluator]: [0mInference done 20/2913. 0.5432 s / img. ETA=0:28:33
[32m[11/11 00:49:45 d2.evaluation.evaluator]: [0mInference done 29/2913. 0.5443 s / img. ETA=0:28:29
[32m[11/11 00:49:50 d2.evaluation.evaluator]: [0mInference done 38/2913. 0.5448 s / img. ETA=0:28:26
[32m[11/11 00:49:56 d2.evaluation.evaluator]: [0mInference done 47/2913. 0.5453 s / img. ETA=0:28:23
[32m[11/11 00:50:01 d2.evaluation.evaluator]: [0mInference done 56/2913. 0.5460 s / img. ETA=0:28:19
[32m[11/11 00:50:06 d2.evaluation.evaluator]: [0mInference done 65/2913. 0.5464 s / img. ETA=0:28:14
[32m[11/11 00:50:12 d2.evaluation.evaluator]: [0mInference done 74/2913. 0.5465 s / img. ETA=0:28:09
[32m[11/11 00:50:17 d2.evaluation.evaluator]: [0mInference done 83/2913. 0.5469 s / img. ETA=0:28:06
[32m[11/11 00:50:22 d2.evaluation.evaluator]: [0mInference done 92/2913. 0.5471 s / img. ETA=0:28:01
[32m[11/11 00:50:28 d2.evaluation.evaluator]: [0mInference done 101/2913. 0.5471 s / img. ETA=0:27:58
[32m[11/11 00:50:33 d2.evaluation.evaluator]: [0mInference done 110/2913. 0.5475 s / img. ETA=0:27:53
[32m[11/11 00:50:38 d2.evaluation.evaluator]: [0mInference done 118/2913. 0.5468 s / img. ETA=0:27:55
[32m[11/11 00:50:44 d2.evaluation.evaluator]: [0mInference done 127/2913. 0.5455 s / img. ETA=0:27:53
[32m[11/11 00:50:49 d2.evaluation.evaluator]: [0mInference done 135/2913. 0.5446 s / img. ETA=0:27:53
[32m[11/11 00:50:54 d2.evaluation.evaluator]: [0mInference done 144/2913. 0.5436 s / img. ETA=0:27:50
[32m[11/11 00:51:00 d2.evaluation.evaluator]: [0mInference done 153/2913. 0.5429 s / img. ETA=0:27:47
[32m[11/11 00:51:06 d2.evaluation.evaluator]: [0mInference done 162/2913. 0.5425 s / img. ETA=0:27:45
[32m[11/11 00:51:11 d2.evaluation.evaluator]: [0mInference done 170/2913. 0.5422 s / img. ETA=0:27:44
[32m[11/11 00:51:16 d2.evaluation.evaluator]: [0mInference done 178/2913. 0.5419 s / img. ETA=0:27:43
[32m[11/11 00:51:21 d2.evaluation.evaluator]: [0mInference done 186/2913. 0.5417 s / img. ETA=0:27:41
[32m[11/11 00:51:26 d2.evaluation.evaluator]: [0mInference done 195/2913. 0.5413 s / img. ETA=0:27:37
[32m[11/11 00:51:32 d2.evaluation.evaluator]: [0mInference done 203/2913. 0.5409 s / img. ETA=0:27:37
[32m[11/11 00:51:37 d2.evaluation.evaluator]: [0mInference done 212/2913. 0.5406 s / img. ETA=0:27:32
[32m[11/11 00:51:42 d2.evaluation.evaluator]: [0mInference done 220/2913. 0.5403 s / img. ETA=0:27:30
[32m[11/11 00:51:47 d2.evaluation.evaluator]: [0mInference done 228/2913. 0.5401 s / img. ETA=0:27:26
[32m[11/11 00:51:53 d2.evaluation.evaluator]: [0mInference done 237/2913. 0.5400 s / img. ETA=0:27:22
[32m[11/11 00:51:59 d2.evaluation.evaluator]: [0mInference done 246/2913. 0.5396 s / img. ETA=0:27:17
[32m[11/11 00:52:04 d2.evaluation.evaluator]: [0mInference done 255/2913. 0.5400 s / img. ETA=0:27:09
[32m[11/11 00:52:09 d2.evaluation.evaluator]: [0mInference done 264/2913. 0.5404 s / img. ETA=0:27:02
[32m[11/11 00:52:15 d2.evaluation.evaluator]: [0mInference done 273/2913. 0.5406 s / img. ETA=0:26:55
[32m[11/11 00:52:20 d2.evaluation.evaluator]: [0mInference done 282/2913. 0.5409 s / img. ETA=0:26:48
[32m[11/11 00:52:25 d2.evaluation.evaluator]: [0mInference done 291/2913. 0.5412 s / img. ETA=0:26:41
[32m[11/11 00:52:31 d2.evaluation.evaluator]: [0mInference done 300/2913. 0.5415 s / img. ETA=0:26:34
[32m[11/11 00:52:36 d2.evaluation.evaluator]: [0mInference done 309/2913. 0.5417 s / img. ETA=0:26:28
[32m[11/11 00:52:41 d2.evaluation.evaluator]: [0mInference done 318/2913. 0.5420 s / img. ETA=0:26:22
[32m[11/11 00:52:47 d2.evaluation.evaluator]: [0mInference done 327/2913. 0.5422 s / img. ETA=0:26:15
[32m[11/11 00:52:52 d2.evaluation.evaluator]: [0mInference done 336/2913. 0.5423 s / img. ETA=0:26:08
[32m[11/11 00:52:57 d2.evaluation.evaluator]: [0mInference done 345/2913. 0.5424 s / img. ETA=0:26:02
[32m[11/11 00:53:03 d2.evaluation.evaluator]: [0mInference done 354/2913. 0.5427 s / img. ETA=0:25:56
[32m[11/11 00:53:08 d2.evaluation.evaluator]: [0mInference done 363/2913. 0.5430 s / img. ETA=0:25:50
[32m[11/11 00:53:14 d2.evaluation.evaluator]: [0mInference done 372/2913. 0.5432 s / img. ETA=0:25:44
[32m[11/11 00:53:19 d2.evaluation.evaluator]: [0mInference done 381/2913. 0.5432 s / img. ETA=0:25:37
[32m[11/11 00:53:24 d2.evaluation.evaluator]: [0mInference done 390/2913. 0.5433 s / img. ETA=0:25:31
[32m[11/11 00:53:30 d2.evaluation.evaluator]: [0mInference done 399/2913. 0.5435 s / img. ETA=0:25:25
[32m[11/11 00:53:35 d2.evaluation.evaluator]: [0mInference done 408/2913. 0.5436 s / img. ETA=0:25:19
[32m[11/11 00:53:40 d2.evaluation.evaluator]: [0mInference done 417/2913. 0.5437 s / img. ETA=0:25:13
[32m[11/11 00:53:46 d2.evaluation.evaluator]: [0mInference done 426/2913. 0.5439 s / img. ETA=0:25:07
[32m[11/11 00:53:51 d2.evaluation.evaluator]: [0mInference done 435/2913. 0.5441 s / img. ETA=0:25:02
[32m[11/11 00:53:57 d2.evaluation.evaluator]: [0mInference done 444/2913. 0.5443 s / img. ETA=0:24:56
[32m[11/11 00:54:02 d2.evaluation.evaluator]: [0mInference done 453/2913. 0.5444 s / img. ETA=0:24:50
[32m[11/11 00:54:07 d2.evaluation.evaluator]: [0mInference done 462/2913. 0.5444 s / img. ETA=0:24:44
[32m[11/11 00:54:13 d2.evaluation.evaluator]: [0mInference done 471/2913. 0.5446 s / img. ETA=0:24:38
[32m[11/11 00:54:18 d2.evaluation.evaluator]: [0mInference done 480/2913. 0.5446 s / img. ETA=0:24:32
[32m[11/11 00:54:23 d2.evaluation.evaluator]: [0mInference done 489/2913. 0.5447 s / img. ETA=0:24:26
[32m[11/11 00:54:29 d2.evaluation.evaluator]: [0mInference done 498/2913. 0.5449 s / img. ETA=0:24:20
[32m[11/11 00:54:34 d2.evaluation.evaluator]: [0mInference done 507/2913. 0.5450 s / img. ETA=0:24:15
[32m[11/11 00:54:39 d2.evaluation.evaluator]: [0mInference done 516/2913. 0.5450 s / img. ETA=0:24:08
[32m[11/11 00:54:45 d2.evaluation.evaluator]: [0mInference done 525/2913. 0.5452 s / img. ETA=0:24:03
[32m[11/11 00:54:50 d2.evaluation.evaluator]: [0mInference done 534/2913. 0.5452 s / img. ETA=0:23:58
[32m[11/11 00:54:56 d2.evaluation.evaluator]: [0mInference done 543/2913. 0.5454 s / img. ETA=0:23:52
[32m[11/11 00:55:01 d2.evaluation.evaluator]: [0mInference done 552/2913. 0.5455 s / img. ETA=0:23:46
[32m[11/11 00:55:07 d2.evaluation.evaluator]: [0mInference done 561/2913. 0.5457 s / img. ETA=0:23:41
[32m[11/11 00:55:12 d2.evaluation.evaluator]: [0mInference done 570/2913. 0.5458 s / img. ETA=0:23:35
[32m[11/11 00:55:17 d2.evaluation.evaluator]: [0mInference done 579/2913. 0.5459 s / img. ETA=0:23:29
[32m[11/11 00:55:23 d2.evaluation.evaluator]: [0mInference done 588/2913. 0.5460 s / img. ETA=0:23:23
[32m[11/11 00:55:28 d2.evaluation.evaluator]: [0mInference done 597/2913. 0.5461 s / img. ETA=0:23:18
[32m[11/11 00:55:33 d2.evaluation.evaluator]: [0mInference done 606/2913. 0.5461 s / img. ETA=0:23:12
[32m[11/11 00:55:39 d2.evaluation.evaluator]: [0mInference done 615/2913. 0.5462 s / img. ETA=0:23:06
[32m[11/11 00:55:44 d2.evaluation.evaluator]: [0mInference done 624/2913. 0.5463 s / img. ETA=0:23:01
[32m[11/11 00:55:50 d2.evaluation.evaluator]: [0mInference done 633/2913. 0.5464 s / img. ETA=0:22:56
[32m[11/11 00:55:55 d2.evaluation.evaluator]: [0mInference done 642/2913. 0.5465 s / img. ETA=0:22:50
[32m[11/11 00:56:00 d2.evaluation.evaluator]: [0mInference done 651/2913. 0.5465 s / img. ETA=0:22:44
[32m[11/11 00:56:06 d2.evaluation.evaluator]: [0mInference done 660/2913. 0.5466 s / img. ETA=0:22:39
[32m[11/11 00:56:11 d2.evaluation.evaluator]: [0mInference done 669/2913. 0.5466 s / img. ETA=0:22:33
[32m[11/11 00:56:16 d2.evaluation.evaluator]: [0mInference done 678/2913. 0.5467 s / img. ETA=0:22:27
[32m[11/11 00:56:22 d2.evaluation.evaluator]: [0mInference done 687/2913. 0.5469 s / img. ETA=0:22:22
[32m[11/11 00:56:27 d2.evaluation.evaluator]: [0mInference done 696/2913. 0.5468 s / img. ETA=0:22:16
[32m[11/11 00:56:32 d2.evaluation.evaluator]: [0mInference done 705/2913. 0.5466 s / img. ETA=0:22:10
[32m[11/11 00:56:38 d2.evaluation.evaluator]: [0mInference done 714/2913. 0.5466 s / img. ETA=0:22:04
[32m[11/11 00:56:43 d2.evaluation.evaluator]: [0mInference done 723/2913. 0.5466 s / img. ETA=0:21:58
[32m[11/11 00:56:48 d2.evaluation.evaluator]: [0mInference done 732/2913. 0.5466 s / img. ETA=0:21:53
[32m[11/11 00:56:54 d2.evaluation.evaluator]: [0mInference done 741/2913. 0.5466 s / img. ETA=0:21:47
[32m[11/11 00:56:59 d2.evaluation.evaluator]: [0mInference done 750/2913. 0.5465 s / img. ETA=0:21:41
[32m[11/11 00:57:04 d2.evaluation.evaluator]: [0mInference done 759/2913. 0.5465 s / img. ETA=0:21:36
[32m[11/11 00:57:10 d2.evaluation.evaluator]: [0mInference done 768/2913. 0.5466 s / img. ETA=0:21:30
[32m[11/11 00:57:15 d2.evaluation.evaluator]: [0mInference done 777/2913. 0.5466 s / img. ETA=0:21:25
[32m[11/11 00:57:20 d2.evaluation.evaluator]: [0mInference done 786/2913. 0.5466 s / img. ETA=0:21:19
[32m[11/11 00:57:26 d2.evaluation.evaluator]: [0mInference done 795/2913. 0.5466 s / img. ETA=0:21:13
[32m[11/11 00:57:31 d2.evaluation.evaluator]: [0mInference done 804/2913. 0.5465 s / img. ETA=0:21:07
[32m[11/11 00:57:36 d2.evaluation.evaluator]: [0mInference done 813/2913. 0.5466 s / img. ETA=0:21:02
[32m[11/11 00:57:42 d2.evaluation.evaluator]: [0mInference done 822/2913. 0.5466 s / img. ETA=0:20:56
[32m[11/11 00:57:47 d2.evaluation.evaluator]: [0mInference done 831/2913. 0.5466 s / img. ETA=0:20:51
[32m[11/11 00:57:52 d2.evaluation.evaluator]: [0mInference done 840/2913. 0.5466 s / img. ETA=0:20:45
[32m[11/11 00:57:58 d2.evaluation.evaluator]: [0mInference done 849/2913. 0.5466 s / img. ETA=0:20:39
[32m[11/11 00:58:03 d2.evaluation.evaluator]: [0mInference done 858/2913. 0.5466 s / img. ETA=0:20:34
[32m[11/11 00:58:08 d2.evaluation.evaluator]: [0mInference done 867/2913. 0.5466 s / img. ETA=0:20:28
[32m[11/11 00:58:14 d2.evaluation.evaluator]: [0mInference done 876/2913. 0.5466 s / img. ETA=0:20:23
[32m[11/11 00:58:19 d2.evaluation.evaluator]: [0mInference done 885/2913. 0.5466 s / img. ETA=0:20:17
[32m[11/11 00:58:24 d2.evaluation.evaluator]: [0mInference done 894/2913. 0.5467 s / img. ETA=0:20:12
[32m[11/11 00:58:30 d2.evaluation.evaluator]: [0mInference done 903/2913. 0.5467 s / img. ETA=0:20:06
[32m[11/11 00:58:35 d2.evaluation.evaluator]: [0mInference done 912/2913. 0.5466 s / img. ETA=0:20:01
[32m[11/11 00:58:40 d2.evaluation.evaluator]: [0mInference done 921/2913. 0.5466 s / img. ETA=0:19:55
[32m[11/11 00:58:46 d2.evaluation.evaluator]: [0mInference done 930/2913. 0.5466 s / img. ETA=0:19:50
[32m[11/11 00:58:51 d2.evaluation.evaluator]: [0mInference done 939/2913. 0.5466 s / img. ETA=0:19:44
[32m[11/11 00:58:56 d2.evaluation.evaluator]: [0mInference done 948/2913. 0.5466 s / img. ETA=0:19:39
[32m[11/11 00:59:02 d2.evaluation.evaluator]: [0mInference done 957/2913. 0.5466 s / img. ETA=0:19:33
[32m[11/11 00:59:07 d2.evaluation.evaluator]: [0mInference done 966/2913. 0.5466 s / img. ETA=0:19:28
[32m[11/11 00:59:12 d2.evaluation.evaluator]: [0mInference done 975/2913. 0.5466 s / img. ETA=0:19:22
[32m[11/11 00:59:18 d2.evaluation.evaluator]: [0mInference done 984/2913. 0.5466 s / img. ETA=0:19:17
[32m[11/11 00:59:23 d2.evaluation.evaluator]: [0mInference done 993/2913. 0.5466 s / img. ETA=0:19:11
[32m[11/11 00:59:28 d2.evaluation.evaluator]: [0mInference done 1002/2913. 0.5466 s / img. ETA=0:19:05
[32m[11/11 00:59:34 d2.evaluation.evaluator]: [0mInference done 1011/2913. 0.5466 s / img. ETA=0:19:00
[32m[11/11 00:59:39 d2.evaluation.evaluator]: [0mInference done 1020/2913. 0.5466 s / img. ETA=0:18:54
[32m[11/11 00:59:44 d2.evaluation.evaluator]: [0mInference done 1029/2913. 0.5466 s / img. ETA=0:18:49
[32m[11/11 00:59:50 d2.evaluation.evaluator]: [0mInference done 1038/2913. 0.5466 s / img. ETA=0:18:43
[32m[11/11 00:59:55 d2.evaluation.evaluator]: [0mInference done 1047/2913. 0.5466 s / img. ETA=0:18:38
[32m[11/11 01:00:00 d2.evaluation.evaluator]: [0mInference done 1056/2913. 0.5466 s / img. ETA=0:18:32
[32m[11/11 01:00:06 d2.evaluation.evaluator]: [0mInference done 1065/2913. 0.5466 s / img. ETA=0:18:27
[32m[11/11 01:00:11 d2.evaluation.evaluator]: [0mInference done 1074/2913. 0.5466 s / img. ETA=0:18:22
[32m[11/11 01:00:17 d2.evaluation.evaluator]: [0mInference done 1083/2913. 0.5466 s / img. ETA=0:18:16
[32m[11/11 01:00:22 d2.evaluation.evaluator]: [0mInference done 1092/2913. 0.5466 s / img. ETA=0:18:11
[32m[11/11 01:00:27 d2.evaluation.evaluator]: [0mInference done 1101/2913. 0.5466 s / img. ETA=0:18:05
[32m[11/11 01:00:33 d2.evaluation.evaluator]: [0mInference done 1110/2913. 0.5466 s / img. ETA=0:18:00
[32m[11/11 01:00:38 d2.evaluation.evaluator]: [0mInference done 1119/2913. 0.5465 s / img. ETA=0:17:54
[32m[11/11 01:00:43 d2.evaluation.evaluator]: [0mInference done 1128/2913. 0.5465 s / img. ETA=0:17:49
[32m[11/11 01:00:48 d2.evaluation.evaluator]: [0mInference done 1137/2913. 0.5465 s / img. ETA=0:17:43
[32m[11/11 01:00:54 d2.evaluation.evaluator]: [0mInference done 1146/2913. 0.5465 s / img. ETA=0:17:37
[32m[11/11 01:00:59 d2.evaluation.evaluator]: [0mInference done 1155/2913. 0.5465 s / img. ETA=0:17:32
[32m[11/11 01:01:04 d2.evaluation.evaluator]: [0mInference done 1164/2913. 0.5465 s / img. ETA=0:17:27
[32m[11/11 01:01:10 d2.evaluation.evaluator]: [0mInference done 1173/2913. 0.5465 s / img. ETA=0:17:21
[32m[11/11 01:01:15 d2.evaluation.evaluator]: [0mInference done 1182/2913. 0.5465 s / img. ETA=0:17:16
[32m[11/11 01:01:20 d2.evaluation.evaluator]: [0mInference done 1191/2913. 0.5465 s / img. ETA=0:17:10
[32m[11/11 01:01:26 d2.evaluation.evaluator]: [0mInference done 1200/2913. 0.5464 s / img. ETA=0:17:05
[32m[11/11 01:01:31 d2.evaluation.evaluator]: [0mInference done 1209/2913. 0.5464 s / img. ETA=0:16:59
[32m[11/11 01:01:36 d2.evaluation.evaluator]: [0mInference done 1218/2913. 0.5464 s / img. ETA=0:16:54
[32m[11/11 01:01:42 d2.evaluation.evaluator]: [0mInference done 1227/2913. 0.5465 s / img. ETA=0:16:48
[32m[11/11 01:01:47 d2.evaluation.evaluator]: [0mInference done 1236/2913. 0.5465 s / img. ETA=0:16:43
[32m[11/11 01:01:53 d2.evaluation.evaluator]: [0mInference done 1245/2913. 0.5465 s / img. ETA=0:16:38
[32m[11/11 01:01:58 d2.evaluation.evaluator]: [0mInference done 1254/2913. 0.5465 s / img. ETA=0:16:32
[32m[11/11 01:02:03 d2.evaluation.evaluator]: [0mInference done 1263/2913. 0.5466 s / img. ETA=0:16:27
[32m[11/11 01:02:09 d2.evaluation.evaluator]: [0mInference done 1272/2913. 0.5465 s / img. ETA=0:16:21
[32m[11/11 01:02:14 d2.evaluation.evaluator]: [0mInference done 1281/2913. 0.5465 s / img. ETA=0:16:16
[32m[11/11 01:02:19 d2.evaluation.evaluator]: [0mInference done 1290/2913. 0.5465 s / img. ETA=0:16:10
[32m[11/11 01:02:25 d2.evaluation.evaluator]: [0mInference done 1299/2913. 0.5465 s / img. ETA=0:16:05
[32m[11/11 01:02:30 d2.evaluation.evaluator]: [0mInference done 1308/2913. 0.5464 s / img. ETA=0:15:59
[32m[11/11 01:02:35 d2.evaluation.evaluator]: [0mInference done 1317/2913. 0.5464 s / img. ETA=0:15:54
[32m[11/11 01:02:40 d2.evaluation.evaluator]: [0mInference done 1326/2913. 0.5464 s / img. ETA=0:15:48
[32m[11/11 01:02:46 d2.evaluation.evaluator]: [0mInference done 1335/2913. 0.5464 s / img. ETA=0:15:43
[32m[11/11 01:02:51 d2.evaluation.evaluator]: [0mInference done 1344/2913. 0.5463 s / img. ETA=0:15:38
[32m[11/11 01:02:56 d2.evaluation.evaluator]: [0mInference done 1353/2913. 0.5463 s / img. ETA=0:15:32
[32m[11/11 01:03:02 d2.evaluation.evaluator]: [0mInference done 1362/2913. 0.5463 s / img. ETA=0:15:27
[32m[11/11 01:03:07 d2.evaluation.evaluator]: [0mInference done 1371/2913. 0.5463 s / img. ETA=0:15:21
[32m[11/11 01:03:12 d2.evaluation.evaluator]: [0mInference done 1380/2913. 0.5464 s / img. ETA=0:15:16
[32m[11/11 01:03:18 d2.evaluation.evaluator]: [0mInference done 1389/2913. 0.5464 s / img. ETA=0:15:10
[32m[11/11 01:03:23 d2.evaluation.evaluator]: [0mInference done 1398/2913. 0.5464 s / img. ETA=0:15:05
[32m[11/11 01:03:29 d2.evaluation.evaluator]: [0mInference done 1407/2913. 0.5464 s / img. ETA=0:15:00
[32m[11/11 01:03:34 d2.evaluation.evaluator]: [0mInference done 1416/2913. 0.5464 s / img. ETA=0:14:54
[32m[11/11 01:03:39 d2.evaluation.evaluator]: [0mInference done 1425/2913. 0.5464 s / img. ETA=0:14:49
[32m[11/11 01:03:45 d2.evaluation.evaluator]: [0mInference done 1434/2913. 0.5464 s / img. ETA=0:14:43
[32m[11/11 01:03:50 d2.evaluation.evaluator]: [0mInference done 1443/2913. 0.5465 s / img. ETA=0:14:38
[32m[11/11 01:03:55 d2.evaluation.evaluator]: [0mInference done 1452/2913. 0.5465 s / img. ETA=0:14:33
[32m[11/11 01:04:01 d2.evaluation.evaluator]: [0mInference done 1461/2913. 0.5465 s / img. ETA=0:14:27
[32m[11/11 01:04:06 d2.evaluation.evaluator]: [0mInference done 1470/2913. 0.5466 s / img. ETA=0:14:22
[32m[11/11 01:04:12 d2.evaluation.evaluator]: [0mInference done 1479/2913. 0.5466 s / img. ETA=0:14:17
[32m[11/11 01:04:17 d2.evaluation.evaluator]: [0mInference done 1488/2913. 0.5466 s / img. ETA=0:14:11
[32m[11/11 01:04:22 d2.evaluation.evaluator]: [0mInference done 1497/2913. 0.5466 s / img. ETA=0:14:06
[32m[11/11 01:04:28 d2.evaluation.evaluator]: [0mInference done 1506/2913. 0.5466 s / img. ETA=0:14:00
[32m[11/11 01:04:33 d2.evaluation.evaluator]: [0mInference done 1515/2913. 0.5466 s / img. ETA=0:13:55
[32m[11/11 01:04:38 d2.evaluation.evaluator]: [0mInference done 1524/2913. 0.5466 s / img. ETA=0:13:50
[32m[11/11 01:04:44 d2.evaluation.evaluator]: [0mInference done 1533/2913. 0.5466 s / img. ETA=0:13:44
[32m[11/11 01:04:49 d2.evaluation.evaluator]: [0mInference done 1542/2913. 0.5467 s / img. ETA=0:13:39
[32m[11/11 01:04:55 d2.evaluation.evaluator]: [0mInference done 1551/2913. 0.5467 s / img. ETA=0:13:33
[32m[11/11 01:05:00 d2.evaluation.evaluator]: [0mInference done 1560/2913. 0.5467 s / img. ETA=0:13:28
[32m[11/11 01:05:05 d2.evaluation.evaluator]: [0mInference done 1569/2913. 0.5467 s / img. ETA=0:13:23
[32m[11/11 01:05:11 d2.evaluation.evaluator]: [0mInference done 1578/2913. 0.5468 s / img. ETA=0:13:17
[32m[11/11 01:05:16 d2.evaluation.evaluator]: [0mInference done 1587/2913. 0.5468 s / img. ETA=0:13:12
[32m[11/11 01:05:21 d2.evaluation.evaluator]: [0mInference done 1596/2913. 0.5468 s / img. ETA=0:13:07
[32m[11/11 01:05:27 d2.evaluation.evaluator]: [0mInference done 1605/2913. 0.5468 s / img. ETA=0:13:01
[32m[11/11 01:05:32 d2.evaluation.evaluator]: [0mInference done 1614/2913. 0.5468 s / img. ETA=0:12:56
[32m[11/11 01:05:37 d2.evaluation.evaluator]: [0mInference done 1623/2913. 0.5468 s / img. ETA=0:12:50
[32m[11/11 01:05:43 d2.evaluation.evaluator]: [0mInference done 1632/2913. 0.5468 s / img. ETA=0:12:45
[32m[11/11 01:05:48 d2.evaluation.evaluator]: [0mInference done 1641/2913. 0.5468 s / img. ETA=0:12:40
[32m[11/11 01:05:53 d2.evaluation.evaluator]: [0mInference done 1650/2913. 0.5468 s / img. ETA=0:12:34
[32m[11/11 01:05:59 d2.evaluation.evaluator]: [0mInference done 1659/2913. 0.5468 s / img. ETA=0:12:29
[32m[11/11 01:06:04 d2.evaluation.evaluator]: [0mInference done 1668/2913. 0.5468 s / img. ETA=0:12:23
[32m[11/11 01:06:09 d2.evaluation.evaluator]: [0mInference done 1677/2913. 0.5468 s / img. ETA=0:12:18
[32m[11/11 01:06:15 d2.evaluation.evaluator]: [0mInference done 1686/2913. 0.5468 s / img. ETA=0:12:12
[32m[11/11 01:06:20 d2.evaluation.evaluator]: [0mInference done 1695/2913. 0.5468 s / img. ETA=0:12:07
[32m[11/11 01:06:25 d2.evaluation.evaluator]: [0mInference done 1704/2913. 0.5468 s / img. ETA=0:12:02
[32m[11/11 01:06:31 d2.evaluation.evaluator]: [0mInference done 1713/2913. 0.5468 s / img. ETA=0:11:56
[32m[11/11 01:06:36 d2.evaluation.evaluator]: [0mInference done 1722/2913. 0.5468 s / img. ETA=0:11:51
[32m[11/11 01:06:41 d2.evaluation.evaluator]: [0mInference done 1731/2913. 0.5468 s / img. ETA=0:11:45
[32m[11/11 01:06:47 d2.evaluation.evaluator]: [0mInference done 1740/2913. 0.5468 s / img. ETA=0:11:40
[32m[11/11 01:06:52 d2.evaluation.evaluator]: [0mInference done 1749/2913. 0.5468 s / img. ETA=0:11:35
[32m[11/11 01:06:57 d2.evaluation.evaluator]: [0mInference done 1758/2913. 0.5468 s / img. ETA=0:11:29
[32m[11/11 01:07:03 d2.evaluation.evaluator]: [0mInference done 1767/2913. 0.5468 s / img. ETA=0:11:24
[32m[11/11 01:07:08 d2.evaluation.evaluator]: [0mInference done 1776/2913. 0.5469 s / img. ETA=0:11:18
[32m[11/11 01:07:13 d2.evaluation.evaluator]: [0mInference done 1785/2913. 0.5469 s / img. ETA=0:11:13
[32m[11/11 01:07:19 d2.evaluation.evaluator]: [0mInference done 1794/2913. 0.5469 s / img. ETA=0:11:08
[32m[11/11 01:07:24 d2.evaluation.evaluator]: [0mInference done 1803/2913. 0.5469 s / img. ETA=0:11:02
[32m[11/11 01:07:30 d2.evaluation.evaluator]: [0mInference done 1812/2913. 0.5469 s / img. ETA=0:10:57
[32m[11/11 01:07:35 d2.evaluation.evaluator]: [0mInference done 1821/2913. 0.5469 s / img. ETA=0:10:51
[32m[11/11 01:07:40 d2.evaluation.evaluator]: [0mInference done 1830/2913. 0.5469 s / img. ETA=0:10:46
[32m[11/11 01:07:45 d2.evaluation.evaluator]: [0mInference done 1839/2913. 0.5469 s / img. ETA=0:10:41
[32m[11/11 01:07:51 d2.evaluation.evaluator]: [0mInference done 1848/2913. 0.5469 s / img. ETA=0:10:35
[32m[11/11 01:07:56 d2.evaluation.evaluator]: [0mInference done 1857/2913. 0.5469 s / img. ETA=0:10:30
[32m[11/11 01:08:02 d2.evaluation.evaluator]: [0mInference done 1866/2913. 0.5469 s / img. ETA=0:10:25
[32m[11/11 01:08:07 d2.evaluation.evaluator]: [0mInference done 1875/2913. 0.5470 s / img. ETA=0:10:19
[32m[11/11 01:08:12 d2.evaluation.evaluator]: [0mInference done 1884/2913. 0.5470 s / img. ETA=0:10:14
[32m[11/11 01:08:18 d2.evaluation.evaluator]: [0mInference done 1893/2913. 0.5470 s / img. ETA=0:10:08
[32m[11/11 01:08:23 d2.evaluation.evaluator]: [0mInference done 1902/2913. 0.5470 s / img. ETA=0:10:03
[32m[11/11 01:08:28 d2.evaluation.evaluator]: [0mInference done 1911/2913. 0.5470 s / img. ETA=0:09:58
[32m[11/11 01:08:34 d2.evaluation.evaluator]: [0mInference done 1920/2913. 0.5470 s / img. ETA=0:09:52
[32m[11/11 01:08:39 d2.evaluation.evaluator]: [0mInference done 1929/2913. 0.5470 s / img. ETA=0:09:47
[32m[11/11 01:08:44 d2.evaluation.evaluator]: [0mInference done 1938/2913. 0.5470 s / img. ETA=0:09:41
[32m[11/11 01:08:50 d2.evaluation.evaluator]: [0mInference done 1947/2913. 0.5470 s / img. ETA=0:09:36
[32m[11/11 01:08:55 d2.evaluation.evaluator]: [0mInference done 1956/2913. 0.5470 s / img. ETA=0:09:31
[32m[11/11 01:09:00 d2.evaluation.evaluator]: [0mInference done 1965/2913. 0.5470 s / img. ETA=0:09:25
[32m[11/11 01:09:06 d2.evaluation.evaluator]: [0mInference done 1974/2913. 0.5470 s / img. ETA=0:09:20
[32m[11/11 01:09:11 d2.evaluation.evaluator]: [0mInference done 1983/2913. 0.5470 s / img. ETA=0:09:15
[32m[11/11 01:09:16 d2.evaluation.evaluator]: [0mInference done 1992/2913. 0.5470 s / img. ETA=0:09:09
[32m[11/11 01:09:22 d2.evaluation.evaluator]: [0mInference done 2001/2913. 0.5470 s / img. ETA=0:09:04
[32m[11/11 01:09:27 d2.evaluation.evaluator]: [0mInference done 2010/2913. 0.5471 s / img. ETA=0:08:58
[32m[11/11 01:09:33 d2.evaluation.evaluator]: [0mInference done 2019/2913. 0.5471 s / img. ETA=0:08:53
[32m[11/11 01:09:38 d2.evaluation.evaluator]: [0mInference done 2028/2913. 0.5471 s / img. ETA=0:08:48
[32m[11/11 01:09:43 d2.evaluation.evaluator]: [0mInference done 2037/2913. 0.5471 s / img. ETA=0:08:42
[32m[11/11 01:09:49 d2.evaluation.evaluator]: [0mInference done 2046/2913. 0.5472 s / img. ETA=0:08:37
[32m[11/11 01:09:54 d2.evaluation.evaluator]: [0mInference done 2055/2913. 0.5472 s / img. ETA=0:08:32
[32m[11/11 01:09:59 d2.evaluation.evaluator]: [0mInference done 2064/2913. 0.5472 s / img. ETA=0:08:26
[32m[11/11 01:10:05 d2.evaluation.evaluator]: [0mInference done 2073/2913. 0.5472 s / img. ETA=0:08:21
[32m[11/11 01:10:10 d2.evaluation.evaluator]: [0mInference done 2082/2913. 0.5472 s / img. ETA=0:08:15
[32m[11/11 01:10:15 d2.evaluation.evaluator]: [0mInference done 2091/2913. 0.5472 s / img. ETA=0:08:10
[32m[11/11 01:10:21 d2.evaluation.evaluator]: [0mInference done 2100/2913. 0.5473 s / img. ETA=0:08:05
[32m[11/11 01:10:26 d2.evaluation.evaluator]: [0mInference done 2109/2913. 0.5473 s / img. ETA=0:07:59
[32m[11/11 01:10:32 d2.evaluation.evaluator]: [0mInference done 2118/2913. 0.5473 s / img. ETA=0:07:54
[32m[11/11 01:10:37 d2.evaluation.evaluator]: [0mInference done 2127/2913. 0.5473 s / img. ETA=0:07:49
[32m[11/11 01:10:42 d2.evaluation.evaluator]: [0mInference done 2136/2913. 0.5473 s / img. ETA=0:07:43
[32m[11/11 01:10:48 d2.evaluation.evaluator]: [0mInference done 2145/2913. 0.5473 s / img. ETA=0:07:38
[32m[11/11 01:10:53 d2.evaluation.evaluator]: [0mInference done 2154/2913. 0.5473 s / img. ETA=0:07:32
[32m[11/11 01:10:58 d2.evaluation.evaluator]: [0mInference done 2163/2913. 0.5473 s / img. ETA=0:07:27
[32m[11/11 01:11:04 d2.evaluation.evaluator]: [0mInference done 2172/2913. 0.5473 s / img. ETA=0:07:22
[32m[11/11 01:11:09 d2.evaluation.evaluator]: [0mInference done 2181/2913. 0.5473 s / img. ETA=0:07:16
[32m[11/11 01:11:14 d2.evaluation.evaluator]: [0mInference done 2190/2913. 0.5474 s / img. ETA=0:07:11
[32m[11/11 01:11:20 d2.evaluation.evaluator]: [0mInference done 2199/2913. 0.5474 s / img. ETA=0:07:06
[32m[11/11 01:11:25 d2.evaluation.evaluator]: [0mInference done 2208/2913. 0.5474 s / img. ETA=0:07:00
[32m[11/11 01:11:30 d2.evaluation.evaluator]: [0mInference done 2217/2913. 0.5474 s / img. ETA=0:06:55
[32m[11/11 01:11:36 d2.evaluation.evaluator]: [0mInference done 2226/2913. 0.5474 s / img. ETA=0:06:49
[32m[11/11 01:11:41 d2.evaluation.evaluator]: [0mInference done 2235/2913. 0.5474 s / img. ETA=0:06:44
[32m[11/11 01:11:46 d2.evaluation.evaluator]: [0mInference done 2244/2913. 0.5474 s / img. ETA=0:06:39
[32m[11/11 01:11:52 d2.evaluation.evaluator]: [0mInference done 2253/2913. 0.5474 s / img. ETA=0:06:33
[32m[11/11 01:11:57 d2.evaluation.evaluator]: [0mInference done 2262/2913. 0.5474 s / img. ETA=0:06:28
[32m[11/11 01:12:02 d2.evaluation.evaluator]: [0mInference done 2271/2913. 0.5474 s / img. ETA=0:06:22
[32m[11/11 01:12:08 d2.evaluation.evaluator]: [0mInference done 2280/2913. 0.5474 s / img. ETA=0:06:17
[32m[11/11 01:12:13 d2.evaluation.evaluator]: [0mInference done 2289/2913. 0.5474 s / img. ETA=0:06:12
[32m[11/11 01:12:18 d2.evaluation.evaluator]: [0mInference done 2298/2913. 0.5474 s / img. ETA=0:06:06
[32m[11/11 01:12:24 d2.evaluation.evaluator]: [0mInference done 2307/2913. 0.5474 s / img. ETA=0:06:01
[32m[11/11 01:12:29 d2.evaluation.evaluator]: [0mInference done 2316/2913. 0.5473 s / img. ETA=0:05:56
[32m[11/11 01:12:34 d2.evaluation.evaluator]: [0mInference done 2325/2913. 0.5473 s / img. ETA=0:05:50
[32m[11/11 01:12:39 d2.evaluation.evaluator]: [0mInference done 2334/2913. 0.5473 s / img. ETA=0:05:45
[32m[11/11 01:12:45 d2.evaluation.evaluator]: [0mInference done 2343/2913. 0.5473 s / img. ETA=0:05:39
[32m[11/11 01:12:50 d2.evaluation.evaluator]: [0mInference done 2352/2913. 0.5473 s / img. ETA=0:05:34
[32m[11/11 01:12:55 d2.evaluation.evaluator]: [0mInference done 2361/2913. 0.5473 s / img. ETA=0:05:29
[32m[11/11 01:13:01 d2.evaluation.evaluator]: [0mInference done 2370/2913. 0.5473 s / img. ETA=0:05:23
[32m[11/11 01:13:06 d2.evaluation.evaluator]: [0mInference done 2379/2913. 0.5473 s / img. ETA=0:05:18
[32m[11/11 01:13:11 d2.evaluation.evaluator]: [0mInference done 2388/2913. 0.5473 s / img. ETA=0:05:13
[32m[11/11 01:13:17 d2.evaluation.evaluator]: [0mInference done 2397/2913. 0.5473 s / img. ETA=0:05:07
[32m[11/11 01:13:22 d2.evaluation.evaluator]: [0mInference done 2406/2913. 0.5473 s / img. ETA=0:05:02
[32m[11/11 01:13:27 d2.evaluation.evaluator]: [0mInference done 2415/2913. 0.5473 s / img. ETA=0:04:56
[32m[11/11 01:13:33 d2.evaluation.evaluator]: [0mInference done 2424/2913. 0.5473 s / img. ETA=0:04:51
[32m[11/11 01:13:38 d2.evaluation.evaluator]: [0mInference done 2433/2913. 0.5473 s / img. ETA=0:04:46
[32m[11/11 01:13:43 d2.evaluation.evaluator]: [0mInference done 2442/2913. 0.5473 s / img. ETA=0:04:40
[32m[11/11 01:13:49 d2.evaluation.evaluator]: [0mInference done 2451/2913. 0.5473 s / img. ETA=0:04:35
[32m[11/11 01:13:54 d2.evaluation.evaluator]: [0mInference done 2460/2913. 0.5473 s / img. ETA=0:04:30
[32m[11/11 01:13:59 d2.evaluation.evaluator]: [0mInference done 2469/2913. 0.5472 s / img. ETA=0:04:24
[32m[11/11 01:14:05 d2.evaluation.evaluator]: [0mInference done 2478/2913. 0.5472 s / img. ETA=0:04:19
[32m[11/11 01:14:10 d2.evaluation.evaluator]: [0mInference done 2487/2913. 0.5472 s / img. ETA=0:04:13
[32m[11/11 01:14:15 d2.evaluation.evaluator]: [0mInference done 2496/2913. 0.5472 s / img. ETA=0:04:08
[32m[11/11 01:14:21 d2.evaluation.evaluator]: [0mInference done 2505/2913. 0.5472 s / img. ETA=0:04:03
[32m[11/11 01:14:26 d2.evaluation.evaluator]: [0mInference done 2514/2913. 0.5472 s / img. ETA=0:03:57
[32m[11/11 01:14:31 d2.evaluation.evaluator]: [0mInference done 2523/2913. 0.5472 s / img. ETA=0:03:52
[32m[11/11 01:14:37 d2.evaluation.evaluator]: [0mInference done 2532/2913. 0.5472 s / img. ETA=0:03:47
[32m[11/11 01:14:42 d2.evaluation.evaluator]: [0mInference done 2541/2913. 0.5472 s / img. ETA=0:03:41
[32m[11/11 01:14:47 d2.evaluation.evaluator]: [0mInference done 2550/2913. 0.5472 s / img. ETA=0:03:36
[32m[11/11 01:14:53 d2.evaluation.evaluator]: [0mInference done 2559/2913. 0.5472 s / img. ETA=0:03:30
[32m[11/11 01:14:58 d2.evaluation.evaluator]: [0mInference done 2568/2913. 0.5472 s / img. ETA=0:03:25
[32m[11/11 01:15:03 d2.evaluation.evaluator]: [0mInference done 2577/2913. 0.5472 s / img. ETA=0:03:20
[32m[11/11 01:15:09 d2.evaluation.evaluator]: [0mInference done 2586/2913. 0.5472 s / img. ETA=0:03:14
[32m[11/11 01:15:14 d2.evaluation.evaluator]: [0mInference done 2595/2913. 0.5472 s / img. ETA=0:03:09
[32m[11/11 01:15:19 d2.evaluation.evaluator]: [0mInference done 2604/2913. 0.5472 s / img. ETA=0:03:04
[32m[11/11 01:15:25 d2.evaluation.evaluator]: [0mInference done 2613/2913. 0.5472 s / img. ETA=0:02:58
[32m[11/11 01:15:30 d2.evaluation.evaluator]: [0mInference done 2622/2913. 0.5472 s / img. ETA=0:02:53
[32m[11/11 01:15:35 d2.evaluation.evaluator]: [0mInference done 2631/2913. 0.5472 s / img. ETA=0:02:48
[32m[11/11 01:15:41 d2.evaluation.evaluator]: [0mInference done 2640/2913. 0.5472 s / img. ETA=0:02:42
[32m[11/11 01:15:46 d2.evaluation.evaluator]: [0mInference done 2649/2913. 0.5471 s / img. ETA=0:02:37
[32m[11/11 01:15:51 d2.evaluation.evaluator]: [0mInference done 2658/2913. 0.5471 s / img. ETA=0:02:31
[32m[11/11 01:15:56 d2.evaluation.evaluator]: [0mInference done 2667/2913. 0.5471 s / img. ETA=0:02:26
[32m[11/11 01:16:02 d2.evaluation.evaluator]: [0mInference done 2676/2913. 0.5471 s / img. ETA=0:02:21
[32m[11/11 01:16:07 d2.evaluation.evaluator]: [0mInference done 2685/2913. 0.5471 s / img. ETA=0:02:15
[32m[11/11 01:16:13 d2.evaluation.evaluator]: [0mInference done 2694/2913. 0.5471 s / img. ETA=0:02:10
[32m[11/11 01:16:18 d2.evaluation.evaluator]: [0mInference done 2703/2913. 0.5471 s / img. ETA=0:02:05
[32m[11/11 01:16:23 d2.evaluation.evaluator]: [0mInference done 2712/2913. 0.5471 s / img. ETA=0:01:59
[32m[11/11 01:16:28 d2.evaluation.evaluator]: [0mInference done 2721/2913. 0.5470 s / img. ETA=0:01:54
[32m[11/11 01:16:34 d2.evaluation.evaluator]: [0mInference done 2730/2913. 0.5470 s / img. ETA=0:01:49
[32m[11/11 01:16:39 d2.evaluation.evaluator]: [0mInference done 2739/2913. 0.5470 s / img. ETA=0:01:43
[32m[11/11 01:16:44 d2.evaluation.evaluator]: [0mInference done 2748/2913. 0.5470 s / img. ETA=0:01:38
[32m[11/11 01:16:50 d2.evaluation.evaluator]: [0mInference done 2757/2913. 0.5470 s / img. ETA=0:01:32
[32m[11/11 01:16:55 d2.evaluation.evaluator]: [0mInference done 2766/2913. 0.5470 s / img. ETA=0:01:27
[32m[11/11 01:17:00 d2.evaluation.evaluator]: [0mInference done 2775/2913. 0.5469 s / img. ETA=0:01:22
[32m[11/11 01:17:06 d2.evaluation.evaluator]: [0mInference done 2784/2913. 0.5469 s / img. ETA=0:01:16
[32m[11/11 01:17:11 d2.evaluation.evaluator]: [0mInference done 2793/2913. 0.5469 s / img. ETA=0:01:11
[32m[11/11 01:17:16 d2.evaluation.evaluator]: [0mInference done 2802/2913. 0.5469 s / img. ETA=0:01:06
[32m[11/11 01:17:22 d2.evaluation.evaluator]: [0mInference done 2811/2913. 0.5469 s / img. ETA=0:01:00
[32m[11/11 01:17:27 d2.evaluation.evaluator]: [0mInference done 2820/2913. 0.5469 s / img. ETA=0:00:55
[32m[11/11 01:17:32 d2.evaluation.evaluator]: [0mInference done 2829/2913. 0.5469 s / img. ETA=0:00:50
[32m[11/11 01:17:37 d2.evaluation.evaluator]: [0mInference done 2838/2913. 0.5469 s / img. ETA=0:00:44
[32m[11/11 01:17:42 d2.evaluation.evaluator]: [0mInference done 2847/2913. 0.5468 s / img. ETA=0:00:39
[32m[11/11 01:17:48 d2.evaluation.evaluator]: [0mInference done 2856/2913. 0.5468 s / img. ETA=0:00:33
[32m[11/11 01:17:53 d2.evaluation.evaluator]: [0mInference done 2865/2913. 0.5468 s / img. ETA=0:00:28
[32m[11/11 01:17:58 d2.evaluation.evaluator]: [0mInference done 2874/2913. 0.5468 s / img. ETA=0:00:23
[32m[11/11 01:18:04 d2.evaluation.evaluator]: [0mInference done 2883/2913. 0.5468 s / img. ETA=0:00:17
[32m[11/11 01:18:09 d2.evaluation.evaluator]: [0mInference done 2892/2913. 0.5468 s / img. ETA=0:00:12
[32m[11/11 01:18:14 d2.evaluation.evaluator]: [0mInference done 2901/2913. 0.5468 s / img. ETA=0:00:07
[32m[11/11 01:18:20 d2.evaluation.evaluator]: [0mInference done 2910/2913. 0.5467 s / img. ETA=0:00:01
[32m[11/11 01:18:22 d2.evaluation.evaluator]: [0mTotal inference time: 0:28:50.962316 (0.595242 s / img per device, on 1 devices)
[32m[11/11 01:18:22 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:26:29 (0.546743 s / img per device, on 1 devices)
[32m[11/11 01:18:22 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 01:18:22 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/inference/coco_instances_results.json
[32m[11/11 01:18:23 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.44s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 2.27 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.39 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.025
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.020
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.048
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.025
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.036
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.036
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.006
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.065
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.237
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.928 | 2.531  | 0.506  | 0.058 | 2.034 | 4.829 |
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : 0.93
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: 2.53
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: 0.51
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : 2.03
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 01:18:26 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP    | category   | AP    | category         | AP    |
|:------------|:------|:-----------|:------|:-----------------|:------|
| backpac     | 0.113 | rop        | 2.315 | ven              | 3.037 |
| helme       | 0.006 | dril       | 0.005 | fire extinguishe | 0.266 |
| helmet-ligh | 0.000 | survivo    | 1.520 | cell phon        | 0.000 |
| cub         | 2.016 |            |       |                  |       |
[32m[11/11 01:18:26 d2.engine.defaults]: [0mEvaluation results for val_f_2 in csv format:
[32m[11/11 01:18:26 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 01:18:26 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 01:18:26 d2.evaluation.testing]: [0mcopypaste: 0.9276,2.5314,0.5058,0.0575,2.0342,4.8292
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
