Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:02:05 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/11 07:02:08 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/11 07:02:08 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:02:08 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt1.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_101_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 1
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/1shot'

[32m[11/11 07:02:08 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_g_12',)
  TESTSHOTS: 1
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/1shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/11 07:02:08 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/config.yaml
[32m[11/11 07:02:15 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/11 07:02:15 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/11 07:02:16 d2.data.datasets.coco]: [0mLoaded 2088 images in COCO format from datasets/SUBT/use/val_g_12/new_annotations/val_g_12.json
[32m[11/11 07:02:17 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 223          |    rop     | 0            |      ven      | 0            |
|    helme    | 0            |    dril    | 352          | fire exting.. | 667          |
| helmet-ligh | 0            |  survivo   | 972          |   cell phon   | 0            |
|     cub     | 0            |            |              |               |              |
|    total    | 2214         |            |              |               |              |[0m
[32m[11/11 07:02:17 d2.data.common]: [0mSerializing 2088 elements to byte tensors and concatenating them all ...
[32m[11/11 07:02:17 d2.data.common]: [0mSerialized dataset takes 0.50 MiB
[32m[11/11 07:02:17 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/11 07:02:17 d2.evaluation.evaluator]: [0mStart inference on 2088 images
[32m[11/11 07:02:21 d2.evaluation.evaluator]: [0mInference done 11/2088. 0.2572 s / img. ETA=0:10:29
[32m[11/11 07:02:26 d2.evaluation.evaluator]: [0mInference done 23/2088. 0.2591 s / img. ETA=0:13:19
[32m[11/11 07:02:31 d2.evaluation.evaluator]: [0mInference done 33/2088. 0.2616 s / img. ETA=0:14:42
[32m[11/11 07:02:36 d2.evaluation.evaluator]: [0mInference done 44/2088. 0.2621 s / img. ETA=0:14:53
[32m[11/11 07:02:41 d2.evaluation.evaluator]: [0mInference done 55/2088. 0.2612 s / img. ETA=0:14:56
[32m[11/11 07:02:46 d2.evaluation.evaluator]: [0mInference done 67/2088. 0.2609 s / img. ETA=0:14:54
[32m[11/11 07:02:51 d2.evaluation.evaluator]: [0mInference done 78/2088. 0.2604 s / img. ETA=0:14:55
[32m[11/11 07:02:57 d2.evaluation.evaluator]: [0mInference done 90/2088. 0.2600 s / img. ETA=0:14:48
[32m[11/11 07:03:02 d2.evaluation.evaluator]: [0mInference done 101/2088. 0.2602 s / img. ETA=0:14:47
[32m[11/11 07:03:07 d2.evaluation.evaluator]: [0mInference done 112/2088. 0.2610 s / img. ETA=0:14:47
[32m[11/11 07:03:12 d2.evaluation.evaluator]: [0mInference done 123/2088. 0.2611 s / img. ETA=0:14:45
[32m[11/11 07:03:17 d2.evaluation.evaluator]: [0mInference done 135/2088. 0.2607 s / img. ETA=0:14:40
[32m[11/11 07:03:22 d2.evaluation.evaluator]: [0mInference done 146/2088. 0.2605 s / img. ETA=0:14:36
[32m[11/11 07:03:27 d2.evaluation.evaluator]: [0mInference done 159/2088. 0.2602 s / img. ETA=0:14:20
[32m[11/11 07:03:33 d2.evaluation.evaluator]: [0mInference done 176/2088. 0.2598 s / img. ETA=0:13:45
[32m[11/11 07:03:38 d2.evaluation.evaluator]: [0mInference done 193/2088. 0.2598 s / img. ETA=0:13:18
[32m[11/11 07:03:43 d2.evaluation.evaluator]: [0mInference done 210/2088. 0.2598 s / img. ETA=0:12:53
[32m[11/11 07:03:48 d2.evaluation.evaluator]: [0mInference done 226/2088. 0.2604 s / img. ETA=0:12:34
[32m[11/11 07:03:54 d2.evaluation.evaluator]: [0mInference done 243/2088. 0.2604 s / img. ETA=0:12:14
[32m[11/11 07:03:59 d2.evaluation.evaluator]: [0mInference done 260/2088. 0.2602 s / img. ETA=0:11:56
[32m[11/11 07:04:04 d2.evaluation.evaluator]: [0mInference done 277/2088. 0.2603 s / img. ETA=0:11:40
[32m[11/11 07:04:09 d2.evaluation.evaluator]: [0mInference done 293/2088. 0.2604 s / img. ETA=0:11:27
[32m[11/11 07:04:14 d2.evaluation.evaluator]: [0mInference done 310/2088. 0.2603 s / img. ETA=0:11:13
[32m[11/11 07:04:19 d2.evaluation.evaluator]: [0mInference done 326/2088. 0.2603 s / img. ETA=0:11:02
[32m[11/11 07:04:25 d2.evaluation.evaluator]: [0mInference done 342/2088. 0.2603 s / img. ETA=0:10:51
[32m[11/11 07:04:30 d2.evaluation.evaluator]: [0mInference done 358/2088. 0.2604 s / img. ETA=0:10:41
[32m[11/11 07:04:35 d2.evaluation.evaluator]: [0mInference done 374/2088. 0.2603 s / img. ETA=0:10:31
[32m[11/11 07:04:40 d2.evaluation.evaluator]: [0mInference done 390/2088. 0.2603 s / img. ETA=0:10:22
[32m[11/11 07:04:45 d2.evaluation.evaluator]: [0mInference done 406/2088. 0.2602 s / img. ETA=0:10:13
[32m[11/11 07:04:50 d2.evaluation.evaluator]: [0mInference done 422/2088. 0.2602 s / img. ETA=0:10:04
[32m[11/11 07:04:55 d2.evaluation.evaluator]: [0mInference done 438/2088. 0.2603 s / img. ETA=0:09:56
[32m[11/11 07:05:01 d2.evaluation.evaluator]: [0mInference done 454/2088. 0.2605 s / img. ETA=0:09:48
[32m[11/11 07:05:06 d2.evaluation.evaluator]: [0mInference done 470/2088. 0.2607 s / img. ETA=0:09:41
[32m[11/11 07:05:11 d2.evaluation.evaluator]: [0mInference done 486/2088. 0.2608 s / img. ETA=0:09:33
[32m[11/11 07:05:16 d2.evaluation.evaluator]: [0mInference done 500/2088. 0.2608 s / img. ETA=0:09:29
[32m[11/11 07:05:21 d2.evaluation.evaluator]: [0mInference done 511/2088. 0.2610 s / img. ETA=0:09:28
[32m[11/11 07:05:26 d2.evaluation.evaluator]: [0mInference done 522/2088. 0.2609 s / img. ETA=0:09:28
[32m[11/11 07:05:31 d2.evaluation.evaluator]: [0mInference done 533/2088. 0.2610 s / img. ETA=0:09:27
[32m[11/11 07:05:36 d2.evaluation.evaluator]: [0mInference done 544/2088. 0.2610 s / img. ETA=0:09:26
[32m[11/11 07:05:42 d2.evaluation.evaluator]: [0mInference done 555/2088. 0.2612 s / img. ETA=0:09:25
[32m[11/11 07:05:47 d2.evaluation.evaluator]: [0mInference done 566/2088. 0.2613 s / img. ETA=0:09:25
[32m[11/11 07:05:52 d2.evaluation.evaluator]: [0mInference done 577/2088. 0.2613 s / img. ETA=0:09:24
[32m[11/11 07:05:58 d2.evaluation.evaluator]: [0mInference done 588/2088. 0.2614 s / img. ETA=0:09:23
[32m[11/11 07:06:03 d2.evaluation.evaluator]: [0mInference done 598/2088. 0.2624 s / img. ETA=0:09:24
[32m[11/11 07:06:09 d2.evaluation.evaluator]: [0mInference done 604/2088. 0.2653 s / img. ETA=0:09:29
[32m[11/11 07:06:14 d2.evaluation.evaluator]: [0mInference done 610/2088. 0.2682 s / img. ETA=0:09:34
[32m[11/11 07:06:19 d2.evaluation.evaluator]: [0mInference done 616/2088. 0.2710 s / img. ETA=0:09:39
[32m[11/11 07:06:25 d2.evaluation.evaluator]: [0mInference done 622/2088. 0.2736 s / img. ETA=0:09:44
[32m[11/11 07:06:30 d2.evaluation.evaluator]: [0mInference done 628/2088. 0.2762 s / img. ETA=0:09:48
[32m[11/11 07:06:35 d2.evaluation.evaluator]: [0mInference done 634/2088. 0.2787 s / img. ETA=0:09:52
[32m[11/11 07:06:40 d2.evaluation.evaluator]: [0mInference done 641/2088. 0.2815 s / img. ETA=0:09:54
[32m[11/11 07:06:46 d2.evaluation.evaluator]: [0mInference done 650/2088. 0.2847 s / img. ETA=0:09:55
[32m[11/11 07:06:51 d2.evaluation.evaluator]: [0mInference done 659/2088. 0.2877 s / img. ETA=0:09:54
[32m[11/11 07:06:56 d2.evaluation.evaluator]: [0mInference done 667/2088. 0.2909 s / img. ETA=0:09:55
[32m[11/11 07:07:01 d2.evaluation.evaluator]: [0mInference done 677/2088. 0.2932 s / img. ETA=0:09:53
[32m[11/11 07:07:07 d2.evaluation.evaluator]: [0mInference done 687/2088. 0.2961 s / img. ETA=0:09:52
[32m[11/11 07:07:12 d2.evaluation.evaluator]: [0mInference done 695/2088. 0.2989 s / img. ETA=0:09:52
[32m[11/11 07:07:18 d2.evaluation.evaluator]: [0mInference done 704/2088. 0.3020 s / img. ETA=0:09:52
[32m[11/11 07:07:23 d2.evaluation.evaluator]: [0mInference done 713/2088. 0.3045 s / img. ETA=0:09:50
[32m[11/11 07:07:28 d2.evaluation.evaluator]: [0mInference done 721/2088. 0.3072 s / img. ETA=0:09:50
[32m[11/11 07:07:33 d2.evaluation.evaluator]: [0mInference done 730/2088. 0.3096 s / img. ETA=0:09:48
[32m[11/11 07:07:38 d2.evaluation.evaluator]: [0mInference done 739/2088. 0.3117 s / img. ETA=0:09:47
[32m[11/11 07:07:43 d2.evaluation.evaluator]: [0mInference done 748/2088. 0.3138 s / img. ETA=0:09:45
[32m[11/11 07:07:49 d2.evaluation.evaluator]: [0mInference done 757/2088. 0.3162 s / img. ETA=0:09:44
[32m[11/11 07:07:54 d2.evaluation.evaluator]: [0mInference done 766/2088. 0.3184 s / img. ETA=0:09:42
[32m[11/11 07:07:59 d2.evaluation.evaluator]: [0mInference done 775/2088. 0.3205 s / img. ETA=0:09:40
[32m[11/11 07:08:04 d2.evaluation.evaluator]: [0mInference done 783/2088. 0.3230 s / img. ETA=0:09:39
[32m[11/11 07:08:09 d2.evaluation.evaluator]: [0mInference done 792/2088. 0.3249 s / img. ETA=0:09:37
[32m[11/11 07:08:15 d2.evaluation.evaluator]: [0mInference done 801/2088. 0.3272 s / img. ETA=0:09:36
[32m[11/11 07:08:20 d2.evaluation.evaluator]: [0mInference done 810/2088. 0.3292 s / img. ETA=0:09:33
[32m[11/11 07:08:25 d2.evaluation.evaluator]: [0mInference done 819/2088. 0.3308 s / img. ETA=0:09:31
[32m[11/11 07:08:31 d2.evaluation.evaluator]: [0mInference done 828/2088. 0.3330 s / img. ETA=0:09:29
[32m[11/11 07:08:36 d2.evaluation.evaluator]: [0mInference done 837/2088. 0.3348 s / img. ETA=0:09:27
[32m[11/11 07:08:41 d2.evaluation.evaluator]: [0mInference done 847/2088. 0.3362 s / img. ETA=0:09:23
[32m[11/11 07:08:46 d2.evaluation.evaluator]: [0mInference done 855/2088. 0.3381 s / img. ETA=0:09:22
[32m[11/11 07:08:52 d2.evaluation.evaluator]: [0mInference done 863/2088. 0.3397 s / img. ETA=0:09:20
[32m[11/11 07:08:57 d2.evaluation.evaluator]: [0mInference done 869/2088. 0.3413 s / img. ETA=0:09:21
[32m[11/11 07:09:02 d2.evaluation.evaluator]: [0mInference done 875/2088. 0.3427 s / img. ETA=0:09:22
[32m[11/11 07:09:08 d2.evaluation.evaluator]: [0mInference done 881/2088. 0.3441 s / img. ETA=0:09:23
[32m[11/11 07:09:13 d2.evaluation.evaluator]: [0mInference done 887/2088. 0.3455 s / img. ETA=0:09:24
[32m[11/11 07:09:18 d2.evaluation.evaluator]: [0mInference done 893/2088. 0.3470 s / img. ETA=0:09:24
[32m[11/11 07:09:24 d2.evaluation.evaluator]: [0mInference done 899/2088. 0.3483 s / img. ETA=0:09:25
[32m[11/11 07:09:29 d2.evaluation.evaluator]: [0mInference done 905/2088. 0.3494 s / img. ETA=0:09:25
[32m[11/11 07:09:35 d2.evaluation.evaluator]: [0mInference done 911/2088. 0.3506 s / img. ETA=0:09:26
[32m[11/11 07:09:40 d2.evaluation.evaluator]: [0mInference done 917/2088. 0.3520 s / img. ETA=0:09:26
[32m[11/11 07:09:45 d2.evaluation.evaluator]: [0mInference done 923/2088. 0.3533 s / img. ETA=0:09:26
[32m[11/11 07:09:51 d2.evaluation.evaluator]: [0mInference done 929/2088. 0.3546 s / img. ETA=0:09:26
[32m[11/11 07:09:56 d2.evaluation.evaluator]: [0mInference done 935/2088. 0.3560 s / img. ETA=0:09:26
[32m[11/11 07:10:01 d2.evaluation.evaluator]: [0mInference done 941/2088. 0.3572 s / img. ETA=0:09:26
[32m[11/11 07:10:06 d2.evaluation.evaluator]: [0mInference done 947/2088. 0.3582 s / img. ETA=0:09:26
[32m[11/11 07:10:12 d2.evaluation.evaluator]: [0mInference done 953/2088. 0.3596 s / img. ETA=0:09:26
[32m[11/11 07:10:17 d2.evaluation.evaluator]: [0mInference done 959/2088. 0.3607 s / img. ETA=0:09:26
[32m[11/11 07:10:23 d2.evaluation.evaluator]: [0mInference done 965/2088. 0.3622 s / img. ETA=0:09:26
[32m[11/11 07:10:28 d2.evaluation.evaluator]: [0mInference done 971/2088. 0.3632 s / img. ETA=0:09:25
[32m[11/11 07:10:34 d2.evaluation.evaluator]: [0mInference done 978/2088. 0.3645 s / img. ETA=0:09:25
[32m[11/11 07:10:40 d2.evaluation.evaluator]: [0mInference done 987/2088. 0.3660 s / img. ETA=0:09:21
[32m[11/11 07:10:45 d2.evaluation.evaluator]: [0mInference done 995/2088. 0.3673 s / img. ETA=0:09:18
[32m[11/11 07:10:51 d2.evaluation.evaluator]: [0mInference done 1004/2088. 0.3688 s / img. ETA=0:09:15
[32m[11/11 07:10:56 d2.evaluation.evaluator]: [0mInference done 1013/2088. 0.3698 s / img. ETA=0:09:11
[32m[11/11 07:11:01 d2.evaluation.evaluator]: [0mInference done 1021/2088. 0.3713 s / img. ETA=0:09:08
[32m[11/11 07:11:06 d2.evaluation.evaluator]: [0mInference done 1029/2088. 0.3724 s / img. ETA=0:09:05
[32m[11/11 07:11:12 d2.evaluation.evaluator]: [0mInference done 1038/2088. 0.3737 s / img. ETA=0:09:01
[32m[11/11 07:11:17 d2.evaluation.evaluator]: [0mInference done 1047/2088. 0.3747 s / img. ETA=0:08:57
[32m[11/11 07:11:22 d2.evaluation.evaluator]: [0mInference done 1056/2088. 0.3755 s / img. ETA=0:08:53
[32m[11/11 07:11:27 d2.evaluation.evaluator]: [0mInference done 1064/2088. 0.3769 s / img. ETA=0:08:50
[32m[11/11 07:11:32 d2.evaluation.evaluator]: [0mInference done 1073/2088. 0.3777 s / img. ETA=0:08:46
[32m[11/11 07:11:38 d2.evaluation.evaluator]: [0mInference done 1082/2088. 0.3790 s / img. ETA=0:08:42
[32m[11/11 07:11:43 d2.evaluation.evaluator]: [0mInference done 1091/2088. 0.3799 s / img. ETA=0:08:38
[32m[11/11 07:11:48 d2.evaluation.evaluator]: [0mInference done 1099/2088. 0.3812 s / img. ETA=0:08:35
[32m[11/11 07:11:54 d2.evaluation.evaluator]: [0mInference done 1108/2088. 0.3822 s / img. ETA=0:08:30
[32m[11/11 07:11:59 d2.evaluation.evaluator]: [0mInference done 1117/2088. 0.3832 s / img. ETA=0:08:27
[32m[11/11 07:12:04 d2.evaluation.evaluator]: [0mInference done 1125/2088. 0.3842 s / img. ETA=0:08:23
[32m[11/11 07:12:10 d2.evaluation.evaluator]: [0mInference done 1134/2088. 0.3853 s / img. ETA=0:08:19
[32m[11/11 07:12:15 d2.evaluation.evaluator]: [0mInference done 1142/2088. 0.3864 s / img. ETA=0:08:16
[32m[11/11 07:12:21 d2.evaluation.evaluator]: [0mInference done 1151/2088. 0.3874 s / img. ETA=0:08:12
[32m[11/11 07:12:26 d2.evaluation.evaluator]: [0mInference done 1160/2088. 0.3883 s / img. ETA=0:08:08
[32m[11/11 07:12:32 d2.evaluation.evaluator]: [0mInference done 1168/2088. 0.3894 s / img. ETA=0:08:04
[32m[11/11 07:12:37 d2.evaluation.evaluator]: [0mInference done 1177/2088. 0.3900 s / img. ETA=0:08:00
[32m[11/11 07:12:42 d2.evaluation.evaluator]: [0mInference done 1186/2088. 0.3906 s / img. ETA=0:07:55
[32m[11/11 07:12:47 d2.evaluation.evaluator]: [0mInference done 1194/2088. 0.3918 s / img. ETA=0:07:52
[32m[11/11 07:12:52 d2.evaluation.evaluator]: [0mInference done 1203/2088. 0.3926 s / img. ETA=0:07:48
[32m[11/11 07:12:58 d2.evaluation.evaluator]: [0mInference done 1211/2088. 0.3936 s / img. ETA=0:07:44
[32m[11/11 07:13:03 d2.evaluation.evaluator]: [0mInference done 1220/2088. 0.3945 s / img. ETA=0:07:40
[32m[11/11 07:13:09 d2.evaluation.evaluator]: [0mInference done 1229/2088. 0.3954 s / img. ETA=0:07:36
[32m[11/11 07:13:14 d2.evaluation.evaluator]: [0mInference done 1238/2088. 0.3964 s / img. ETA=0:07:31
[32m[11/11 07:13:20 d2.evaluation.evaluator]: [0mInference done 1247/2088. 0.3971 s / img. ETA=0:07:27
[32m[11/11 07:13:25 d2.evaluation.evaluator]: [0mInference done 1255/2088. 0.3981 s / img. ETA=0:07:23
[32m[11/11 07:13:30 d2.evaluation.evaluator]: [0mInference done 1264/2088. 0.3985 s / img. ETA=0:07:19
[32m[11/11 07:13:35 d2.evaluation.evaluator]: [0mInference done 1272/2088. 0.3994 s / img. ETA=0:07:15
[32m[11/11 07:13:41 d2.evaluation.evaluator]: [0mInference done 1281/2088. 0.3999 s / img. ETA=0:07:11
[32m[11/11 07:13:46 d2.evaluation.evaluator]: [0mInference done 1289/2088. 0.4008 s / img. ETA=0:07:07
[32m[11/11 07:13:51 d2.evaluation.evaluator]: [0mInference done 1298/2088. 0.4014 s / img. ETA=0:07:02
[32m[11/11 07:13:56 d2.evaluation.evaluator]: [0mInference done 1306/2088. 0.4022 s / img. ETA=0:06:59
[32m[11/11 07:14:01 d2.evaluation.evaluator]: [0mInference done 1314/2088. 0.4031 s / img. ETA=0:06:55
[32m[11/11 07:14:07 d2.evaluation.evaluator]: [0mInference done 1323/2088. 0.4039 s / img. ETA=0:06:51
[32m[11/11 07:14:13 d2.evaluation.evaluator]: [0mInference done 1332/2088. 0.4047 s / img. ETA=0:06:46
[32m[11/11 07:14:18 d2.evaluation.evaluator]: [0mInference done 1340/2088. 0.4057 s / img. ETA=0:06:42
[32m[11/11 07:14:24 d2.evaluation.evaluator]: [0mInference done 1349/2088. 0.4064 s / img. ETA=0:06:38
[32m[11/11 07:14:29 d2.evaluation.evaluator]: [0mInference done 1358/2088. 0.4069 s / img. ETA=0:06:33
[32m[11/11 07:14:34 d2.evaluation.evaluator]: [0mInference done 1367/2088. 0.4077 s / img. ETA=0:06:29
[32m[11/11 07:14:40 d2.evaluation.evaluator]: [0mInference done 1376/2088. 0.4081 s / img. ETA=0:06:24
[32m[11/11 07:14:45 d2.evaluation.evaluator]: [0mInference done 1385/2088. 0.4085 s / img. ETA=0:06:20
[32m[11/11 07:14:50 d2.evaluation.evaluator]: [0mInference done 1393/2088. 0.4091 s / img. ETA=0:06:16
[32m[11/11 07:14:55 d2.evaluation.evaluator]: [0mInference done 1401/2088. 0.4098 s / img. ETA=0:06:12
[32m[11/11 07:15:00 d2.evaluation.evaluator]: [0mInference done 1410/2088. 0.4102 s / img. ETA=0:06:07
[32m[11/11 07:15:06 d2.evaluation.evaluator]: [0mInference done 1418/2088. 0.4111 s / img. ETA=0:06:03
[32m[11/11 07:15:11 d2.evaluation.evaluator]: [0mInference done 1427/2088. 0.4115 s / img. ETA=0:05:58
[32m[11/11 07:15:16 d2.evaluation.evaluator]: [0mInference done 1435/2088. 0.4124 s / img. ETA=0:05:55
[32m[11/11 07:15:21 d2.evaluation.evaluator]: [0mInference done 1444/2088. 0.4127 s / img. ETA=0:05:50
[32m[11/11 07:15:27 d2.evaluation.evaluator]: [0mInference done 1452/2088. 0.4132 s / img. ETA=0:05:46
[32m[11/11 07:15:32 d2.evaluation.evaluator]: [0mInference done 1458/2088. 0.4137 s / img. ETA=0:05:43
[32m[11/11 07:15:37 d2.evaluation.evaluator]: [0mInference done 1464/2088. 0.4143 s / img. ETA=0:05:41
[32m[11/11 07:15:43 d2.evaluation.evaluator]: [0mInference done 1470/2088. 0.4150 s / img. ETA=0:05:39
[32m[11/11 07:15:48 d2.evaluation.evaluator]: [0mInference done 1476/2088. 0.4158 s / img. ETA=0:05:36
[32m[11/11 07:15:54 d2.evaluation.evaluator]: [0mInference done 1483/2088. 0.4164 s / img. ETA=0:05:33
[32m[11/11 07:16:00 d2.evaluation.evaluator]: [0mInference done 1490/2088. 0.4169 s / img. ETA=0:05:30
[32m[11/11 07:16:05 d2.evaluation.evaluator]: [0mInference done 1496/2088. 0.4175 s / img. ETA=0:05:28
[32m[11/11 07:16:11 d2.evaluation.evaluator]: [0mInference done 1502/2088. 0.4180 s / img. ETA=0:05:25
[32m[11/11 07:16:16 d2.evaluation.evaluator]: [0mInference done 1508/2088. 0.4187 s / img. ETA=0:05:23
[32m[11/11 07:16:21 d2.evaluation.evaluator]: [0mInference done 1514/2088. 0.4192 s / img. ETA=0:05:20
[32m[11/11 07:16:27 d2.evaluation.evaluator]: [0mInference done 1521/2088. 0.4196 s / img. ETA=0:05:17
[32m[11/11 07:16:33 d2.evaluation.evaluator]: [0mInference done 1527/2088. 0.4202 s / img. ETA=0:05:14
[32m[11/11 07:16:38 d2.evaluation.evaluator]: [0mInference done 1533/2088. 0.4207 s / img. ETA=0:05:12
[32m[11/11 07:16:43 d2.evaluation.evaluator]: [0mInference done 1539/2088. 0.4213 s / img. ETA=0:05:09
[32m[11/11 07:16:49 d2.evaluation.evaluator]: [0mInference done 1545/2088. 0.4218 s / img. ETA=0:05:06
[32m[11/11 07:16:54 d2.evaluation.evaluator]: [0mInference done 1551/2088. 0.4224 s / img. ETA=0:05:04
[32m[11/11 07:17:00 d2.evaluation.evaluator]: [0mInference done 1557/2088. 0.4230 s / img. ETA=0:05:01
[32m[11/11 07:17:05 d2.evaluation.evaluator]: [0mInference done 1563/2088. 0.4235 s / img. ETA=0:04:58
[32m[11/11 07:17:11 d2.evaluation.evaluator]: [0mInference done 1569/2088. 0.4240 s / img. ETA=0:04:56
[32m[11/11 07:17:17 d2.evaluation.evaluator]: [0mInference done 1576/2088. 0.4245 s / img. ETA=0:04:52
[32m[11/11 07:17:22 d2.evaluation.evaluator]: [0mInference done 1582/2088. 0.4250 s / img. ETA=0:04:49
[32m[11/11 07:17:28 d2.evaluation.evaluator]: [0mInference done 1588/2088. 0.4255 s / img. ETA=0:04:47
[32m[11/11 07:17:33 d2.evaluation.evaluator]: [0mInference done 1594/2088. 0.4261 s / img. ETA=0:04:44
[32m[11/11 07:17:38 d2.evaluation.evaluator]: [0mInference done 1600/2088. 0.4265 s / img. ETA=0:04:41
[32m[11/11 07:17:43 d2.evaluation.evaluator]: [0mInference done 1606/2088. 0.4270 s / img. ETA=0:04:38
[32m[11/11 07:17:49 d2.evaluation.evaluator]: [0mInference done 1612/2088. 0.4274 s / img. ETA=0:04:35
[32m[11/11 07:17:54 d2.evaluation.evaluator]: [0mInference done 1618/2088. 0.4279 s / img. ETA=0:04:32
[32m[11/11 07:18:00 d2.evaluation.evaluator]: [0mInference done 1626/2088. 0.4286 s / img. ETA=0:04:28
[32m[11/11 07:18:05 d2.evaluation.evaluator]: [0mInference done 1635/2088. 0.4290 s / img. ETA=0:04:23
[32m[11/11 07:18:11 d2.evaluation.evaluator]: [0mInference done 1643/2088. 0.4296 s / img. ETA=0:04:18
[32m[11/11 07:18:16 d2.evaluation.evaluator]: [0mInference done 1652/2088. 0.4301 s / img. ETA=0:04:13
[32m[11/11 07:18:21 d2.evaluation.evaluator]: [0mInference done 1660/2088. 0.4307 s / img. ETA=0:04:08
[32m[11/11 07:18:27 d2.evaluation.evaluator]: [0mInference done 1669/2088. 0.4313 s / img. ETA=0:04:03
[32m[11/11 07:18:32 d2.evaluation.evaluator]: [0mInference done 1678/2088. 0.4315 s / img. ETA=0:03:58
[32m[11/11 07:18:38 d2.evaluation.evaluator]: [0mInference done 1687/2088. 0.4320 s / img. ETA=0:03:53
[32m[11/11 07:18:43 d2.evaluation.evaluator]: [0mInference done 1695/2088. 0.4325 s / img. ETA=0:03:48
[32m[11/11 07:18:49 d2.evaluation.evaluator]: [0mInference done 1704/2088. 0.4330 s / img. ETA=0:03:43
[32m[11/11 07:18:54 d2.evaluation.evaluator]: [0mInference done 1713/2088. 0.4333 s / img. ETA=0:03:38
[32m[11/11 07:18:59 d2.evaluation.evaluator]: [0mInference done 1721/2088. 0.4338 s / img. ETA=0:03:33
[32m[11/11 07:19:04 d2.evaluation.evaluator]: [0mInference done 1730/2088. 0.4341 s / img. ETA=0:03:28
[32m[11/11 07:19:09 d2.evaluation.evaluator]: [0mInference done 1738/2088. 0.4344 s / img. ETA=0:03:24
[32m[11/11 07:19:15 d2.evaluation.evaluator]: [0mInference done 1746/2088. 0.4349 s / img. ETA=0:03:19
[32m[11/11 07:19:20 d2.evaluation.evaluator]: [0mInference done 1755/2088. 0.4352 s / img. ETA=0:03:14
[32m[11/11 07:19:25 d2.evaluation.evaluator]: [0mInference done 1763/2088. 0.4356 s / img. ETA=0:03:09
[32m[11/11 07:19:30 d2.evaluation.evaluator]: [0mInference done 1772/2088. 0.4359 s / img. ETA=0:03:04
[32m[11/11 07:19:36 d2.evaluation.evaluator]: [0mInference done 1781/2088. 0.4363 s / img. ETA=0:02:59
[32m[11/11 07:19:41 d2.evaluation.evaluator]: [0mInference done 1790/2088. 0.4365 s / img. ETA=0:02:54
[32m[11/11 07:19:47 d2.evaluation.evaluator]: [0mInference done 1799/2088. 0.4368 s / img. ETA=0:02:48
[32m[11/11 07:19:52 d2.evaluation.evaluator]: [0mInference done 1807/2088. 0.4373 s / img. ETA=0:02:44
[32m[11/11 07:19:57 d2.evaluation.evaluator]: [0mInference done 1816/2088. 0.4375 s / img. ETA=0:02:38
[32m[11/11 07:20:02 d2.evaluation.evaluator]: [0mInference done 1824/2088. 0.4381 s / img. ETA=0:02:34
[32m[11/11 07:20:07 d2.evaluation.evaluator]: [0mInference done 1833/2088. 0.4384 s / img. ETA=0:02:29
[32m[11/11 07:20:13 d2.evaluation.evaluator]: [0mInference done 1842/2088. 0.4387 s / img. ETA=0:02:23
[32m[11/11 07:20:18 d2.evaluation.evaluator]: [0mInference done 1851/2088. 0.4389 s / img. ETA=0:02:18
[32m[11/11 07:20:24 d2.evaluation.evaluator]: [0mInference done 1860/2088. 0.4394 s / img. ETA=0:02:13
[32m[11/11 07:20:29 d2.evaluation.evaluator]: [0mInference done 1868/2088. 0.4398 s / img. ETA=0:02:08
[32m[11/11 07:20:35 d2.evaluation.evaluator]: [0mInference done 1877/2088. 0.4403 s / img. ETA=0:02:03
[32m[11/11 07:20:40 d2.evaluation.evaluator]: [0mInference done 1886/2088. 0.4406 s / img. ETA=0:01:58
[32m[11/11 07:20:45 d2.evaluation.evaluator]: [0mInference done 1894/2088. 0.4409 s / img. ETA=0:01:53
[32m[11/11 07:20:51 d2.evaluation.evaluator]: [0mInference done 1903/2088. 0.4411 s / img. ETA=0:01:48
[32m[11/11 07:20:56 d2.evaluation.evaluator]: [0mInference done 1911/2088. 0.4415 s / img. ETA=0:01:43
[32m[11/11 07:21:01 d2.evaluation.evaluator]: [0mInference done 1919/2088. 0.4420 s / img. ETA=0:01:39
[32m[11/11 07:21:06 d2.evaluation.evaluator]: [0mInference done 1928/2088. 0.4424 s / img. ETA=0:01:33
[32m[11/11 07:21:12 d2.evaluation.evaluator]: [0mInference done 1936/2088. 0.4427 s / img. ETA=0:01:29
[32m[11/11 07:21:17 d2.evaluation.evaluator]: [0mInference done 1945/2088. 0.4430 s / img. ETA=0:01:23
[32m[11/11 07:21:22 d2.evaluation.evaluator]: [0mInference done 1954/2088. 0.4433 s / img. ETA=0:01:18
[32m[11/11 07:21:28 d2.evaluation.evaluator]: [0mInference done 1963/2088. 0.4436 s / img. ETA=0:01:13
[32m[11/11 07:21:33 d2.evaluation.evaluator]: [0mInference done 1972/2088. 0.4439 s / img. ETA=0:01:08
[32m[11/11 07:21:38 d2.evaluation.evaluator]: [0mInference done 1981/2088. 0.4442 s / img. ETA=0:01:02
[32m[11/11 07:21:44 d2.evaluation.evaluator]: [0mInference done 1990/2088. 0.4445 s / img. ETA=0:00:57
[32m[11/11 07:21:49 d2.evaluation.evaluator]: [0mInference done 1999/2088. 0.4448 s / img. ETA=0:00:52
[32m[11/11 07:21:54 d2.evaluation.evaluator]: [0mInference done 2008/2088. 0.4450 s / img. ETA=0:00:46
[32m[11/11 07:21:59 d2.evaluation.evaluator]: [0mInference done 2017/2088. 0.4453 s / img. ETA=0:00:41
[32m[11/11 07:22:05 d2.evaluation.evaluator]: [0mInference done 2026/2088. 0.4455 s / img. ETA=0:00:36
[32m[11/11 07:22:10 d2.evaluation.evaluator]: [0mInference done 2035/2088. 0.4458 s / img. ETA=0:00:31
[32m[11/11 07:22:15 d2.evaluation.evaluator]: [0mInference done 2044/2088. 0.4460 s / img. ETA=0:00:25
[32m[11/11 07:22:21 d2.evaluation.evaluator]: [0mInference done 2053/2088. 0.4465 s / img. ETA=0:00:20
[32m[11/11 07:22:26 d2.evaluation.evaluator]: [0mInference done 2062/2088. 0.4467 s / img. ETA=0:00:15
[32m[11/11 07:22:32 d2.evaluation.evaluator]: [0mInference done 2072/2088. 0.4470 s / img. ETA=0:00:09
[32m[11/11 07:22:37 d2.evaluation.evaluator]: [0mInference done 2081/2088. 0.4472 s / img. ETA=0:00:04
[32m[11/11 07:22:41 d2.evaluation.evaluator]: [0mTotal inference time: 0:20:22.075331 (0.586690 s / img per device, on 1 devices)
[32m[11/11 07:22:41 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:15:31 (0.447361 s / img per device, on 1 devices)
[32m[11/11 07:22:42 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 07:22:42 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/inference/coco_instances_results.json
[32m[11/11 07:22:42 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.25s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.43 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.26 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.144
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.131
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.013
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.131
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.170
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.301
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.415
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.041
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.329
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.474
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 14.403 | 28.783 | 13.124 | 1.266 | 13.104 | 16.987 |
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 07:22:44 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP     | category   | AP    | category         | AP     |
|:------------|:-------|:-----------|:------|:-----------------|:-------|
| backpac     | 15.024 | rop        | nan   | ven              | nan    |
| helme       | nan    | dril       | 4.099 | fire extinguishe | 34.657 |
| helmet-ligh | nan    | survivo    | 3.834 | cell phon        | nan    |
| cub         | nan    |            |       |                  |        |
[32m[11/11 07:22:44 d2.engine.defaults]: [0mEvaluation results for val_g_12 in csv format:
[32m[11/11 07:22:44 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 07:22:44 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 07:22:44 d2.evaluation.testing]: [0mcopypaste: 14.4035,28.7834,13.1242,1.2660,13.1038,16.9866
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
