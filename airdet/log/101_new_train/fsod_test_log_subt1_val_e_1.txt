Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_e_1',)"], resume=False)
[32m[11/10 19:09:52 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/10 19:09:54 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/10 19:09:54 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_e_1',)"], resume=False)
[32m[11/10 19:09:54 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt1.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_101_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 1
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/1shot'

[32m[11/10 19:09:54 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_e_1',)
  TESTSHOTS: 1
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/1shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/10 19:09:54 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/config.yaml
[32m[11/10 19:10:02 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/10 19:10:02 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/10 19:10:03 d2.data.datasets.coco]: [0mLoaded 3014 images in COCO format from datasets/SUBT/use/val_e_1/new_annotations/val_e_1.json
[32m[11/10 19:10:03 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 1275         |    rop     | 1106         |      ven      | 0            |
|    helme    | 2468         |    dril    | 0            | fire exting.. | 0            |
| helmet-ligh | 0            |  survivo   | 1578         |   cell phon   | 0            |
|     cub     | 0            |            |              |               |              |
|    total    | 6427         |            |              |               |              |[0m
[32m[11/10 19:10:03 d2.data.common]: [0mSerializing 3014 elements to byte tensors and concatenating them all ...
[32m[11/10 19:10:03 d2.data.common]: [0mSerialized dataset takes 0.82 MiB
[32m[11/10 19:10:03 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/10 19:10:03 d2.evaluation.evaluator]: [0mStart inference on 3014 images
[32m[11/10 19:10:09 d2.evaluation.evaluator]: [0mInference done 1/3014. 5.1614 s / img. ETA=4:34:44
[32m[11/10 19:10:14 d2.evaluation.evaluator]: [0mInference done 17/3014. 0.2472 s / img. ETA=0:16:00
[32m[11/10 19:10:19 d2.evaluation.evaluator]: [0mInference done 34/3014. 0.2463 s / img. ETA=0:15:37
[32m[11/10 19:10:24 d2.evaluation.evaluator]: [0mInference done 50/3014. 0.2471 s / img. ETA=0:15:32
[32m[11/10 19:10:29 d2.evaluation.evaluator]: [0mInference done 66/3014. 0.2475 s / img. ETA=0:15:27
[32m[11/10 19:10:34 d2.evaluation.evaluator]: [0mInference done 83/3014. 0.2479 s / img. ETA=0:15:20
[32m[11/10 19:10:40 d2.evaluation.evaluator]: [0mInference done 100/3014. 0.2481 s / img. ETA=0:15:12
[32m[11/10 19:10:45 d2.evaluation.evaluator]: [0mInference done 116/3014. 0.2482 s / img. ETA=0:15:11
[32m[11/10 19:10:50 d2.evaluation.evaluator]: [0mInference done 133/3014. 0.2481 s / img. ETA=0:15:01
[32m[11/10 19:10:55 d2.evaluation.evaluator]: [0mInference done 150/3014. 0.2483 s / img. ETA=0:14:52
[32m[11/10 19:11:00 d2.evaluation.evaluator]: [0mInference done 166/3014. 0.2492 s / img. ETA=0:14:50
[32m[11/10 19:11:05 d2.evaluation.evaluator]: [0mInference done 182/3014. 0.2500 s / img. ETA=0:14:48
[32m[11/10 19:11:11 d2.evaluation.evaluator]: [0mInference done 198/3014. 0.2507 s / img. ETA=0:14:46
[32m[11/10 19:11:16 d2.evaluation.evaluator]: [0mInference done 214/3014. 0.2513 s / img. ETA=0:14:44
[32m[11/10 19:11:21 d2.evaluation.evaluator]: [0mInference done 230/3014. 0.2517 s / img. ETA=0:14:40
[32m[11/10 19:11:26 d2.evaluation.evaluator]: [0mInference done 246/3014. 0.2521 s / img. ETA=0:14:35
[32m[11/10 19:11:31 d2.evaluation.evaluator]: [0mInference done 262/3014. 0.2526 s / img. ETA=0:14:31
[32m[11/10 19:11:36 d2.evaluation.evaluator]: [0mInference done 278/3014. 0.2530 s / img. ETA=0:14:26
[32m[11/10 19:11:42 d2.evaluation.evaluator]: [0mInference done 294/3014. 0.2533 s / img. ETA=0:14:22
[32m[11/10 19:11:47 d2.evaluation.evaluator]: [0mInference done 310/3014. 0.2536 s / img. ETA=0:14:18
[32m[11/10 19:11:52 d2.evaluation.evaluator]: [0mInference done 326/3014. 0.2539 s / img. ETA=0:14:14
[32m[11/10 19:11:57 d2.evaluation.evaluator]: [0mInference done 341/3014. 0.2542 s / img. ETA=0:14:11
[32m[11/10 19:12:02 d2.evaluation.evaluator]: [0mInference done 356/3014. 0.2546 s / img. ETA=0:14:08
[32m[11/10 19:12:07 d2.evaluation.evaluator]: [0mInference done 372/3014. 0.2548 s / img. ETA=0:14:04
[32m[11/10 19:12:12 d2.evaluation.evaluator]: [0mInference done 388/3014. 0.2550 s / img. ETA=0:14:00
[32m[11/10 19:12:18 d2.evaluation.evaluator]: [0mInference done 404/3014. 0.2551 s / img. ETA=0:13:55
[32m[11/10 19:12:23 d2.evaluation.evaluator]: [0mInference done 419/3014. 0.2554 s / img. ETA=0:13:53
[32m[11/10 19:12:28 d2.evaluation.evaluator]: [0mInference done 434/3014. 0.2555 s / img. ETA=0:13:50
[32m[11/10 19:12:33 d2.evaluation.evaluator]: [0mInference done 449/3014. 0.2557 s / img. ETA=0:13:46
[32m[11/10 19:12:38 d2.evaluation.evaluator]: [0mInference done 465/3014. 0.2559 s / img. ETA=0:13:41
[32m[11/10 19:12:44 d2.evaluation.evaluator]: [0mInference done 481/3014. 0.2561 s / img. ETA=0:13:37
[32m[11/10 19:12:49 d2.evaluation.evaluator]: [0mInference done 497/3014. 0.2563 s / img. ETA=0:13:32
[32m[11/10 19:12:54 d2.evaluation.evaluator]: [0mInference done 513/3014. 0.2564 s / img. ETA=0:13:26
[32m[11/10 19:12:59 d2.evaluation.evaluator]: [0mInference done 529/3014. 0.2565 s / img. ETA=0:13:22
[32m[11/10 19:13:04 d2.evaluation.evaluator]: [0mInference done 545/3014. 0.2566 s / img. ETA=0:13:17
[32m[11/10 19:13:10 d2.evaluation.evaluator]: [0mInference done 561/3014. 0.2568 s / img. ETA=0:13:12
[32m[11/10 19:13:15 d2.evaluation.evaluator]: [0mInference done 577/3014. 0.2570 s / img. ETA=0:13:07
[32m[11/10 19:13:20 d2.evaluation.evaluator]: [0mInference done 593/3014. 0.2571 s / img. ETA=0:13:02
[32m[11/10 19:13:25 d2.evaluation.evaluator]: [0mInference done 609/3014. 0.2572 s / img. ETA=0:12:57
[32m[11/10 19:13:30 d2.evaluation.evaluator]: [0mInference done 625/3014. 0.2573 s / img. ETA=0:12:52
[32m[11/10 19:13:36 d2.evaluation.evaluator]: [0mInference done 641/3014. 0.2573 s / img. ETA=0:12:47
[32m[11/10 19:13:41 d2.evaluation.evaluator]: [0mInference done 656/3014. 0.2575 s / img. ETA=0:12:43
[32m[11/10 19:13:46 d2.evaluation.evaluator]: [0mInference done 672/3014. 0.2575 s / img. ETA=0:12:38
[32m[11/10 19:13:51 d2.evaluation.evaluator]: [0mInference done 688/3014. 0.2577 s / img. ETA=0:12:33
[32m[11/10 19:13:56 d2.evaluation.evaluator]: [0mInference done 704/3014. 0.2578 s / img. ETA=0:12:28
[32m[11/10 19:14:01 d2.evaluation.evaluator]: [0mInference done 720/3014. 0.2578 s / img. ETA=0:12:22
[32m[11/10 19:14:07 d2.evaluation.evaluator]: [0mInference done 735/3014. 0.2579 s / img. ETA=0:12:18
[32m[11/10 19:14:12 d2.evaluation.evaluator]: [0mInference done 751/3014. 0.2579 s / img. ETA=0:12:13
[32m[11/10 19:14:17 d2.evaluation.evaluator]: [0mInference done 767/3014. 0.2580 s / img. ETA=0:12:08
[32m[11/10 19:14:22 d2.evaluation.evaluator]: [0mInference done 783/3014. 0.2580 s / img. ETA=0:12:03
[32m[11/10 19:14:27 d2.evaluation.evaluator]: [0mInference done 799/3014. 0.2580 s / img. ETA=0:11:58
[32m[11/10 19:14:32 d2.evaluation.evaluator]: [0mInference done 814/3014. 0.2580 s / img. ETA=0:11:53
[32m[11/10 19:14:38 d2.evaluation.evaluator]: [0mInference done 830/3014. 0.2580 s / img. ETA=0:11:48
[32m[11/10 19:14:43 d2.evaluation.evaluator]: [0mInference done 845/3014. 0.2580 s / img. ETA=0:11:44
[32m[11/10 19:14:48 d2.evaluation.evaluator]: [0mInference done 861/3014. 0.2580 s / img. ETA=0:11:39
[32m[11/10 19:14:53 d2.evaluation.evaluator]: [0mInference done 876/3014. 0.2581 s / img. ETA=0:11:34
[32m[11/10 19:14:58 d2.evaluation.evaluator]: [0mInference done 891/3014. 0.2581 s / img. ETA=0:11:30
[32m[11/10 19:15:03 d2.evaluation.evaluator]: [0mInference done 907/3014. 0.2582 s / img. ETA=0:11:25
[32m[11/10 19:15:09 d2.evaluation.evaluator]: [0mInference done 923/3014. 0.2582 s / img. ETA=0:11:20
[32m[11/10 19:15:14 d2.evaluation.evaluator]: [0mInference done 939/3014. 0.2583 s / img. ETA=0:11:15
[32m[11/10 19:15:19 d2.evaluation.evaluator]: [0mInference done 955/3014. 0.2583 s / img. ETA=0:11:10
[32m[11/10 19:15:24 d2.evaluation.evaluator]: [0mInference done 971/3014. 0.2584 s / img. ETA=0:11:04
[32m[11/10 19:15:30 d2.evaluation.evaluator]: [0mInference done 987/3014. 0.2584 s / img. ETA=0:10:59
[32m[11/10 19:15:35 d2.evaluation.evaluator]: [0mInference done 1003/3014. 0.2584 s / img. ETA=0:10:54
[32m[11/10 19:15:40 d2.evaluation.evaluator]: [0mInference done 1018/3014. 0.2584 s / img. ETA=0:10:50
[32m[11/10 19:15:45 d2.evaluation.evaluator]: [0mInference done 1034/3014. 0.2584 s / img. ETA=0:10:45
[32m[11/10 19:15:50 d2.evaluation.evaluator]: [0mInference done 1049/3014. 0.2584 s / img. ETA=0:10:40
[32m[11/10 19:15:55 d2.evaluation.evaluator]: [0mInference done 1065/3014. 0.2584 s / img. ETA=0:10:35
[32m[11/10 19:16:01 d2.evaluation.evaluator]: [0mInference done 1081/3014. 0.2584 s / img. ETA=0:10:30
[32m[11/10 19:16:06 d2.evaluation.evaluator]: [0mInference done 1097/3014. 0.2584 s / img. ETA=0:10:24
[32m[11/10 19:16:11 d2.evaluation.evaluator]: [0mInference done 1112/3014. 0.2584 s / img. ETA=0:10:20
[32m[11/10 19:16:16 d2.evaluation.evaluator]: [0mInference done 1128/3014. 0.2585 s / img. ETA=0:10:15
[32m[11/10 19:16:21 d2.evaluation.evaluator]: [0mInference done 1144/3014. 0.2585 s / img. ETA=0:10:10
[32m[11/10 19:16:27 d2.evaluation.evaluator]: [0mInference done 1160/3014. 0.2584 s / img. ETA=0:10:04
[32m[11/10 19:16:32 d2.evaluation.evaluator]: [0mInference done 1176/3014. 0.2584 s / img. ETA=0:09:59
[32m[11/10 19:16:37 d2.evaluation.evaluator]: [0mInference done 1192/3014. 0.2585 s / img. ETA=0:09:54
[32m[11/10 19:16:42 d2.evaluation.evaluator]: [0mInference done 1208/3014. 0.2585 s / img. ETA=0:09:49
[32m[11/10 19:16:47 d2.evaluation.evaluator]: [0mInference done 1223/3014. 0.2585 s / img. ETA=0:09:44
[32m[11/10 19:16:52 d2.evaluation.evaluator]: [0mInference done 1238/3014. 0.2585 s / img. ETA=0:09:39
[32m[11/10 19:16:57 d2.evaluation.evaluator]: [0mInference done 1254/3014. 0.2584 s / img. ETA=0:09:34
[32m[11/10 19:17:02 d2.evaluation.evaluator]: [0mInference done 1269/3014. 0.2585 s / img. ETA=0:09:29
[32m[11/10 19:17:08 d2.evaluation.evaluator]: [0mInference done 1284/3014. 0.2585 s / img. ETA=0:09:25
[32m[11/10 19:17:13 d2.evaluation.evaluator]: [0mInference done 1300/3014. 0.2585 s / img. ETA=0:09:19
[32m[11/10 19:17:18 d2.evaluation.evaluator]: [0mInference done 1316/3014. 0.2585 s / img. ETA=0:09:14
[32m[11/10 19:17:23 d2.evaluation.evaluator]: [0mInference done 1332/3014. 0.2585 s / img. ETA=0:09:08
[32m[11/10 19:17:28 d2.evaluation.evaluator]: [0mInference done 1348/3014. 0.2585 s / img. ETA=0:09:03
[32m[11/10 19:17:33 d2.evaluation.evaluator]: [0mInference done 1363/3014. 0.2585 s / img. ETA=0:08:59
[32m[11/10 19:17:39 d2.evaluation.evaluator]: [0mInference done 1379/3014. 0.2585 s / img. ETA=0:08:53
[32m[11/10 19:17:44 d2.evaluation.evaluator]: [0mInference done 1395/3014. 0.2585 s / img. ETA=0:08:48
[32m[11/10 19:17:49 d2.evaluation.evaluator]: [0mInference done 1411/3014. 0.2585 s / img. ETA=0:08:43
[32m[11/10 19:17:54 d2.evaluation.evaluator]: [0mInference done 1427/3014. 0.2585 s / img. ETA=0:08:37
[32m[11/10 19:17:59 d2.evaluation.evaluator]: [0mInference done 1443/3014. 0.2585 s / img. ETA=0:08:32
[32m[11/10 19:18:04 d2.evaluation.evaluator]: [0mInference done 1459/3014. 0.2585 s / img. ETA=0:08:27
[32m[11/10 19:18:09 d2.evaluation.evaluator]: [0mInference done 1474/3014. 0.2585 s / img. ETA=0:08:22
[32m[11/10 19:18:15 d2.evaluation.evaluator]: [0mInference done 1490/3014. 0.2585 s / img. ETA=0:08:17
[32m[11/10 19:18:20 d2.evaluation.evaluator]: [0mInference done 1506/3014. 0.2585 s / img. ETA=0:08:12
[32m[11/10 19:18:25 d2.evaluation.evaluator]: [0mInference done 1522/3014. 0.2585 s / img. ETA=0:08:06
[32m[11/10 19:18:30 d2.evaluation.evaluator]: [0mInference done 1538/3014. 0.2585 s / img. ETA=0:08:01
[32m[11/10 19:18:35 d2.evaluation.evaluator]: [0mInference done 1554/3014. 0.2585 s / img. ETA=0:07:56
[32m[11/10 19:18:40 d2.evaluation.evaluator]: [0mInference done 1570/3014. 0.2585 s / img. ETA=0:07:51
[32m[11/10 19:18:45 d2.evaluation.evaluator]: [0mInference done 1586/3014. 0.2585 s / img. ETA=0:07:45
[32m[11/10 19:18:51 d2.evaluation.evaluator]: [0mInference done 1602/3014. 0.2585 s / img. ETA=0:07:40
[32m[11/10 19:18:56 d2.evaluation.evaluator]: [0mInference done 1618/3014. 0.2585 s / img. ETA=0:07:35
[32m[11/10 19:19:01 d2.evaluation.evaluator]: [0mInference done 1634/3014. 0.2585 s / img. ETA=0:07:29
[32m[11/10 19:19:06 d2.evaluation.evaluator]: [0mInference done 1650/3014. 0.2585 s / img. ETA=0:07:24
[32m[11/10 19:19:11 d2.evaluation.evaluator]: [0mInference done 1665/3014. 0.2585 s / img. ETA=0:07:19
[32m[11/10 19:19:16 d2.evaluation.evaluator]: [0mInference done 1681/3014. 0.2585 s / img. ETA=0:07:14
[32m[11/10 19:19:22 d2.evaluation.evaluator]: [0mInference done 1697/3014. 0.2585 s / img. ETA=0:07:09
[32m[11/10 19:19:27 d2.evaluation.evaluator]: [0mInference done 1713/3014. 0.2585 s / img. ETA=0:07:04
[32m[11/10 19:19:32 d2.evaluation.evaluator]: [0mInference done 1728/3014. 0.2585 s / img. ETA=0:06:59
[32m[11/10 19:19:37 d2.evaluation.evaluator]: [0mInference done 1744/3014. 0.2585 s / img. ETA=0:06:54
[32m[11/10 19:19:42 d2.evaluation.evaluator]: [0mInference done 1760/3014. 0.2585 s / img. ETA=0:06:49
[32m[11/10 19:19:48 d2.evaluation.evaluator]: [0mInference done 1777/3014. 0.2585 s / img. ETA=0:06:43
[32m[11/10 19:19:53 d2.evaluation.evaluator]: [0mInference done 1792/3014. 0.2585 s / img. ETA=0:06:38
[32m[11/10 19:19:58 d2.evaluation.evaluator]: [0mInference done 1808/3014. 0.2585 s / img. ETA=0:06:33
[32m[11/10 19:20:03 d2.evaluation.evaluator]: [0mInference done 1823/3014. 0.2585 s / img. ETA=0:06:28
[32m[11/10 19:20:08 d2.evaluation.evaluator]: [0mInference done 1839/3014. 0.2585 s / img. ETA=0:06:23
[32m[11/10 19:20:14 d2.evaluation.evaluator]: [0mInference done 1855/3014. 0.2585 s / img. ETA=0:06:18
[32m[11/10 19:20:19 d2.evaluation.evaluator]: [0mInference done 1870/3014. 0.2585 s / img. ETA=0:06:13
[32m[11/10 19:20:24 d2.evaluation.evaluator]: [0mInference done 1886/3014. 0.2585 s / img. ETA=0:06:08
[32m[11/10 19:20:29 d2.evaluation.evaluator]: [0mInference done 1902/3014. 0.2585 s / img. ETA=0:06:02
[32m[11/10 19:20:34 d2.evaluation.evaluator]: [0mInference done 1918/3014. 0.2585 s / img. ETA=0:05:57
[32m[11/10 19:20:39 d2.evaluation.evaluator]: [0mInference done 1933/3014. 0.2585 s / img. ETA=0:05:52
[32m[11/10 19:20:44 d2.evaluation.evaluator]: [0mInference done 1949/3014. 0.2584 s / img. ETA=0:05:47
[32m[11/10 19:20:50 d2.evaluation.evaluator]: [0mInference done 1965/3014. 0.2584 s / img. ETA=0:05:42
[32m[11/10 19:20:55 d2.evaluation.evaluator]: [0mInference done 1980/3014. 0.2585 s / img. ETA=0:05:37
[32m[11/10 19:21:00 d2.evaluation.evaluator]: [0mInference done 1995/3014. 0.2585 s / img. ETA=0:05:32
[32m[11/10 19:21:05 d2.evaluation.evaluator]: [0mInference done 2011/3014. 0.2585 s / img. ETA=0:05:27
[32m[11/10 19:21:10 d2.evaluation.evaluator]: [0mInference done 2027/3014. 0.2585 s / img. ETA=0:05:22
[32m[11/10 19:21:16 d2.evaluation.evaluator]: [0mInference done 2043/3014. 0.2585 s / img. ETA=0:05:17
[32m[11/10 19:21:21 d2.evaluation.evaluator]: [0mInference done 2058/3014. 0.2585 s / img. ETA=0:05:12
[32m[11/10 19:21:26 d2.evaluation.evaluator]: [0mInference done 2074/3014. 0.2585 s / img. ETA=0:05:07
[32m[11/10 19:21:31 d2.evaluation.evaluator]: [0mInference done 2090/3014. 0.2585 s / img. ETA=0:05:01
[32m[11/10 19:21:36 d2.evaluation.evaluator]: [0mInference done 2105/3014. 0.2585 s / img. ETA=0:04:57
[32m[11/10 19:21:41 d2.evaluation.evaluator]: [0mInference done 2121/3014. 0.2585 s / img. ETA=0:04:51
[32m[11/10 19:21:47 d2.evaluation.evaluator]: [0mInference done 2137/3014. 0.2585 s / img. ETA=0:04:46
[32m[11/10 19:21:52 d2.evaluation.evaluator]: [0mInference done 2153/3014. 0.2585 s / img. ETA=0:04:41
[32m[11/10 19:21:57 d2.evaluation.evaluator]: [0mInference done 2169/3014. 0.2585 s / img. ETA=0:04:36
[32m[11/10 19:22:02 d2.evaluation.evaluator]: [0mInference done 2185/3014. 0.2585 s / img. ETA=0:04:30
[32m[11/10 19:22:07 d2.evaluation.evaluator]: [0mInference done 2201/3014. 0.2586 s / img. ETA=0:04:25
[32m[11/10 19:22:13 d2.evaluation.evaluator]: [0mInference done 2217/3014. 0.2586 s / img. ETA=0:04:20
[32m[11/10 19:22:18 d2.evaluation.evaluator]: [0mInference done 2233/3014. 0.2586 s / img. ETA=0:04:15
[32m[11/10 19:22:23 d2.evaluation.evaluator]: [0mInference done 2249/3014. 0.2586 s / img. ETA=0:04:09
[32m[11/10 19:22:28 d2.evaluation.evaluator]: [0mInference done 2265/3014. 0.2586 s / img. ETA=0:04:04
[32m[11/10 19:22:34 d2.evaluation.evaluator]: [0mInference done 2281/3014. 0.2586 s / img. ETA=0:03:59
[32m[11/10 19:22:39 d2.evaluation.evaluator]: [0mInference done 2297/3014. 0.2586 s / img. ETA=0:03:54
[32m[11/10 19:22:44 d2.evaluation.evaluator]: [0mInference done 2313/3014. 0.2586 s / img. ETA=0:03:48
[32m[11/10 19:22:49 d2.evaluation.evaluator]: [0mInference done 2329/3014. 0.2586 s / img. ETA=0:03:43
[32m[11/10 19:22:54 d2.evaluation.evaluator]: [0mInference done 2345/3014. 0.2586 s / img. ETA=0:03:38
[32m[11/10 19:22:59 d2.evaluation.evaluator]: [0mInference done 2361/3014. 0.2586 s / img. ETA=0:03:33
[32m[11/10 19:23:05 d2.evaluation.evaluator]: [0mInference done 2376/3014. 0.2586 s / img. ETA=0:03:28
[32m[11/10 19:23:10 d2.evaluation.evaluator]: [0mInference done 2392/3014. 0.2586 s / img. ETA=0:03:23
[32m[11/10 19:23:15 d2.evaluation.evaluator]: [0mInference done 2408/3014. 0.2586 s / img. ETA=0:03:17
[32m[11/10 19:23:20 d2.evaluation.evaluator]: [0mInference done 2424/3014. 0.2586 s / img. ETA=0:03:12
[32m[11/10 19:23:25 d2.evaluation.evaluator]: [0mInference done 2440/3014. 0.2586 s / img. ETA=0:03:07
[32m[11/10 19:23:30 d2.evaluation.evaluator]: [0mInference done 2455/3014. 0.2586 s / img. ETA=0:03:02
[32m[11/10 19:23:36 d2.evaluation.evaluator]: [0mInference done 2471/3014. 0.2586 s / img. ETA=0:02:57
[32m[11/10 19:23:41 d2.evaluation.evaluator]: [0mInference done 2487/3014. 0.2586 s / img. ETA=0:02:52
[32m[11/10 19:23:46 d2.evaluation.evaluator]: [0mInference done 2502/3014. 0.2586 s / img. ETA=0:02:47
[32m[11/10 19:23:51 d2.evaluation.evaluator]: [0mInference done 2517/3014. 0.2586 s / img. ETA=0:02:42
[32m[11/10 19:23:56 d2.evaluation.evaluator]: [0mInference done 2533/3014. 0.2586 s / img. ETA=0:02:37
[32m[11/10 19:24:01 d2.evaluation.evaluator]: [0mInference done 2549/3014. 0.2587 s / img. ETA=0:02:31
[32m[11/10 19:24:06 d2.evaluation.evaluator]: [0mInference done 2565/3014. 0.2586 s / img. ETA=0:02:26
[32m[11/10 19:24:12 d2.evaluation.evaluator]: [0mInference done 2581/3014. 0.2587 s / img. ETA=0:02:21
[32m[11/10 19:24:17 d2.evaluation.evaluator]: [0mInference done 2597/3014. 0.2587 s / img. ETA=0:02:16
[32m[11/10 19:24:22 d2.evaluation.evaluator]: [0mInference done 2613/3014. 0.2586 s / img. ETA=0:02:10
[32m[11/10 19:24:27 d2.evaluation.evaluator]: [0mInference done 2628/3014. 0.2587 s / img. ETA=0:02:06
[32m[11/10 19:24:32 d2.evaluation.evaluator]: [0mInference done 2644/3014. 0.2587 s / img. ETA=0:02:00
[32m[11/10 19:24:37 d2.evaluation.evaluator]: [0mInference done 2660/3014. 0.2587 s / img. ETA=0:01:55
[32m[11/10 19:24:43 d2.evaluation.evaluator]: [0mInference done 2676/3014. 0.2587 s / img. ETA=0:01:50
[32m[11/10 19:24:48 d2.evaluation.evaluator]: [0mInference done 2692/3014. 0.2587 s / img. ETA=0:01:45
[32m[11/10 19:24:53 d2.evaluation.evaluator]: [0mInference done 2707/3014. 0.2587 s / img. ETA=0:01:40
[32m[11/10 19:24:58 d2.evaluation.evaluator]: [0mInference done 2723/3014. 0.2587 s / img. ETA=0:01:35
[32m[11/10 19:25:03 d2.evaluation.evaluator]: [0mInference done 2738/3014. 0.2587 s / img. ETA=0:01:30
[32m[11/10 19:25:08 d2.evaluation.evaluator]: [0mInference done 2753/3014. 0.2587 s / img. ETA=0:01:25
[32m[11/10 19:25:14 d2.evaluation.evaluator]: [0mInference done 2769/3014. 0.2587 s / img. ETA=0:01:20
[32m[11/10 19:25:19 d2.evaluation.evaluator]: [0mInference done 2785/3014. 0.2587 s / img. ETA=0:01:14
[32m[11/10 19:25:24 d2.evaluation.evaluator]: [0mInference done 2801/3014. 0.2587 s / img. ETA=0:01:09
[32m[11/10 19:25:29 d2.evaluation.evaluator]: [0mInference done 2817/3014. 0.2588 s / img. ETA=0:01:04
[32m[11/10 19:25:34 d2.evaluation.evaluator]: [0mInference done 2833/3014. 0.2588 s / img. ETA=0:00:59
[32m[11/10 19:25:39 d2.evaluation.evaluator]: [0mInference done 2849/3014. 0.2588 s / img. ETA=0:00:53
[32m[11/10 19:25:44 d2.evaluation.evaluator]: [0mInference done 2865/3014. 0.2588 s / img. ETA=0:00:48
[32m[11/10 19:25:50 d2.evaluation.evaluator]: [0mInference done 2881/3014. 0.2588 s / img. ETA=0:00:43
[32m[11/10 19:25:55 d2.evaluation.evaluator]: [0mInference done 2896/3014. 0.2588 s / img. ETA=0:00:38
[32m[11/10 19:26:00 d2.evaluation.evaluator]: [0mInference done 2912/3014. 0.2588 s / img. ETA=0:00:33
[32m[11/10 19:26:05 d2.evaluation.evaluator]: [0mInference done 2927/3014. 0.2588 s / img. ETA=0:00:28
[32m[11/10 19:26:10 d2.evaluation.evaluator]: [0mInference done 2942/3014. 0.2588 s / img. ETA=0:00:23
[32m[11/10 19:26:16 d2.evaluation.evaluator]: [0mInference done 2958/3014. 0.2588 s / img. ETA=0:00:18
[32m[11/10 19:26:21 d2.evaluation.evaluator]: [0mInference done 2974/3014. 0.2588 s / img. ETA=0:00:13
[32m[11/10 19:26:26 d2.evaluation.evaluator]: [0mInference done 2990/3014. 0.2588 s / img. ETA=0:00:07
[32m[11/10 19:26:31 d2.evaluation.evaluator]: [0mInference done 3006/3014. 0.2588 s / img. ETA=0:00:02
[32m[11/10 19:26:34 d2.evaluation.evaluator]: [0mTotal inference time: 0:16:24.109670 (0.327055 s / img per device, on 1 devices)
[32m[11/10 19:26:34 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:12:58 (0.258837 s / img per device, on 1 devices)
[32m[11/10 19:26:34 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/10 19:26:34 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/inference/coco_instances_results.json
[32m[11/10 19:26:35 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.22s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.27 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.18 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.055
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.158
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.028
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.003
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.049
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.154
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.109
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.145
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.145
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.129
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.330
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 5.542 | 15.759 | 2.821  | 0.257 | 4.878 | 15.352 |
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/10 19:26:36 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP     | category   | AP    | category         | AP   |
|:------------|:-------|:-----------|:------|:-----------------|:-----|
| backpac     | 10.906 | rop        | 0.012 | ven              | nan  |
| helme       | 7.279  | dril       | nan   | fire extinguishe | nan  |
| helmet-ligh | nan    | survivo    | 3.970 | cell phon        | nan  |
| cub         | nan    |            |       |                  |      |
[32m[11/10 19:26:36 d2.engine.defaults]: [0mEvaluation results for val_e_1 in csv format:
[32m[11/10 19:26:36 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/10 19:26:36 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/10 19:26:36 d2.evaluation.testing]: [0mcopypaste: 5.5417,15.7590,2.8215,0.2568,4.8780,15.3521
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
