Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt2.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/11 00:19:37 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/11 00:19:39 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/11 00:19:39 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt2.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/11 00:19:39 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt2.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 2
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/2shot'

[32m[11/11 00:19:39 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_f_2',)
  TESTSHOTS: 2
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/2shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/11 00:19:39 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/2shot/config.yaml
[32m[11/11 00:19:46 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/11 00:19:46 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/11 00:19:47 d2.data.datasets.coco]: [0mLoaded 2913 images in COCO format from datasets/SUBT/use/val_f_2/new_annotations/val_f_2.json
[32m[11/11 00:19:47 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 1454         |    rop     | 919          |      ven      | 1170         |
|    helme    | 1131         |    dril    | 517          | fire exting.. | 1436         |
| helmet-ligh | 25           |  survivo   | 447          |   cell phon   | 1            |
|     cub     | 390          |            |              |               |              |
|    total    | 7490         |            |              |               |              |[0m
[32m[11/11 00:19:47 d2.data.common]: [0mSerializing 2913 elements to byte tensors and concatenating them all ...
[32m[11/11 00:19:47 d2.data.common]: [0mSerialized dataset takes 0.82 MiB
[32m[11/11 00:19:47 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/11 00:19:47 d2.evaluation.evaluator]: [0mStart inference on 2913 images
[32m[11/11 00:19:54 d2.evaluation.evaluator]: [0mInference done 11/2913. 0.5418 s / img. ETA=0:28:30
[32m[11/11 00:20:00 d2.evaluation.evaluator]: [0mInference done 20/2913. 0.5406 s / img. ETA=0:28:24
[32m[11/11 00:20:05 d2.evaluation.evaluator]: [0mInference done 29/2913. 0.5429 s / img. ETA=0:28:29
[32m[11/11 00:20:10 d2.evaluation.evaluator]: [0mInference done 38/2913. 0.5433 s / img. ETA=0:28:18
[32m[11/11 00:20:16 d2.evaluation.evaluator]: [0mInference done 47/2913. 0.5441 s / img. ETA=0:28:14
[32m[11/11 00:20:21 d2.evaluation.evaluator]: [0mInference done 56/2913. 0.5442 s / img. ETA=0:28:07
[32m[11/11 00:20:26 d2.evaluation.evaluator]: [0mInference done 65/2913. 0.5449 s / img. ETA=0:28:02
[32m[11/11 00:20:32 d2.evaluation.evaluator]: [0mInference done 74/2913. 0.5453 s / img. ETA=0:27:56
[32m[11/11 00:20:37 d2.evaluation.evaluator]: [0mInference done 83/2913. 0.5453 s / img. ETA=0:27:51
[32m[11/11 00:20:42 d2.evaluation.evaluator]: [0mInference done 92/2913. 0.5460 s / img. ETA=0:27:48
[32m[11/11 00:20:48 d2.evaluation.evaluator]: [0mInference done 101/2913. 0.5467 s / img. ETA=0:27:46
[32m[11/11 00:20:53 d2.evaluation.evaluator]: [0mInference done 110/2913. 0.5467 s / img. ETA=0:27:45
[32m[11/11 00:20:59 d2.evaluation.evaluator]: [0mInference done 119/2913. 0.5457 s / img. ETA=0:27:45
[32m[11/11 00:21:04 d2.evaluation.evaluator]: [0mInference done 127/2913. 0.5450 s / img. ETA=0:27:47
[32m[11/11 00:21:09 d2.evaluation.evaluator]: [0mInference done 135/2913. 0.5444 s / img. ETA=0:27:47
[32m[11/11 00:21:14 d2.evaluation.evaluator]: [0mInference done 144/2913. 0.5436 s / img. ETA=0:27:45
[32m[11/11 00:21:20 d2.evaluation.evaluator]: [0mInference done 153/2913. 0.5431 s / img. ETA=0:27:42
[32m[11/11 00:21:26 d2.evaluation.evaluator]: [0mInference done 162/2913. 0.5425 s / img. ETA=0:27:40
[32m[11/11 00:21:31 d2.evaluation.evaluator]: [0mInference done 171/2913. 0.5422 s / img. ETA=0:27:38
[32m[11/11 00:21:36 d2.evaluation.evaluator]: [0mInference done 179/2913. 0.5419 s / img. ETA=0:27:36
[32m[11/11 00:21:42 d2.evaluation.evaluator]: [0mInference done 188/2913. 0.5416 s / img. ETA=0:27:33
[32m[11/11 00:21:47 d2.evaluation.evaluator]: [0mInference done 196/2913. 0.5414 s / img. ETA=0:27:31
[32m[11/11 00:21:52 d2.evaluation.evaluator]: [0mInference done 204/2913. 0.5418 s / img. ETA=0:27:31
[32m[11/11 00:21:58 d2.evaluation.evaluator]: [0mInference done 213/2913. 0.5415 s / img. ETA=0:27:27
[32m[11/11 00:22:03 d2.evaluation.evaluator]: [0mInference done 221/2913. 0.5413 s / img. ETA=0:27:25
[32m[11/11 00:22:08 d2.evaluation.evaluator]: [0mInference done 229/2913. 0.5413 s / img. ETA=0:27:23
[32m[11/11 00:22:14 d2.evaluation.evaluator]: [0mInference done 238/2913. 0.5409 s / img. ETA=0:27:19
[32m[11/11 00:22:19 d2.evaluation.evaluator]: [0mInference done 247/2913. 0.5405 s / img. ETA=0:27:13
[32m[11/11 00:22:24 d2.evaluation.evaluator]: [0mInference done 256/2913. 0.5406 s / img. ETA=0:27:05
[32m[11/11 00:22:30 d2.evaluation.evaluator]: [0mInference done 265/2913. 0.5407 s / img. ETA=0:26:57
[32m[11/11 00:22:35 d2.evaluation.evaluator]: [0mInference done 274/2913. 0.5410 s / img. ETA=0:26:50
[32m[11/11 00:22:40 d2.evaluation.evaluator]: [0mInference done 283/2913. 0.5413 s / img. ETA=0:26:43
[32m[11/11 00:22:46 d2.evaluation.evaluator]: [0mInference done 292/2913. 0.5417 s / img. ETA=0:26:37
[32m[11/11 00:22:51 d2.evaluation.evaluator]: [0mInference done 301/2913. 0.5420 s / img. ETA=0:26:31
[32m[11/11 00:22:57 d2.evaluation.evaluator]: [0mInference done 310/2913. 0.5421 s / img. ETA=0:26:24
[32m[11/11 00:23:02 d2.evaluation.evaluator]: [0mInference done 319/2913. 0.5424 s / img. ETA=0:26:18
[32m[11/11 00:23:07 d2.evaluation.evaluator]: [0mInference done 328/2913. 0.5427 s / img. ETA=0:26:13
[32m[11/11 00:23:13 d2.evaluation.evaluator]: [0mInference done 337/2913. 0.5429 s / img. ETA=0:26:06
[32m[11/11 00:23:18 d2.evaluation.evaluator]: [0mInference done 346/2913. 0.5432 s / img. ETA=0:26:00
[32m[11/11 00:23:23 d2.evaluation.evaluator]: [0mInference done 355/2913. 0.5433 s / img. ETA=0:25:53
[32m[11/11 00:23:29 d2.evaluation.evaluator]: [0mInference done 364/2913. 0.5435 s / img. ETA=0:25:47
[32m[11/11 00:23:34 d2.evaluation.evaluator]: [0mInference done 373/2913. 0.5437 s / img. ETA=0:25:42
[32m[11/11 00:23:40 d2.evaluation.evaluator]: [0mInference done 382/2913. 0.5438 s / img. ETA=0:25:35
[32m[11/11 00:23:45 d2.evaluation.evaluator]: [0mInference done 391/2913. 0.5440 s / img. ETA=0:25:29
[32m[11/11 00:23:50 d2.evaluation.evaluator]: [0mInference done 400/2913. 0.5442 s / img. ETA=0:25:24
[32m[11/11 00:23:56 d2.evaluation.evaluator]: [0mInference done 409/2913. 0.5445 s / img. ETA=0:25:18
[32m[11/11 00:24:01 d2.evaluation.evaluator]: [0mInference done 418/2913. 0.5448 s / img. ETA=0:25:12
[32m[11/11 00:24:07 d2.evaluation.evaluator]: [0mInference done 427/2913. 0.5451 s / img. ETA=0:25:07
[32m[11/11 00:24:12 d2.evaluation.evaluator]: [0mInference done 436/2913. 0.5453 s / img. ETA=0:25:01
[32m[11/11 00:24:17 d2.evaluation.evaluator]: [0mInference done 445/2913. 0.5455 s / img. ETA=0:24:55
[32m[11/11 00:24:23 d2.evaluation.evaluator]: [0mInference done 454/2913. 0.5456 s / img. ETA=0:24:49
[32m[11/11 00:24:28 d2.evaluation.evaluator]: [0mInference done 463/2913. 0.5457 s / img. ETA=0:24:43
[32m[11/11 00:24:33 d2.evaluation.evaluator]: [0mInference done 472/2913. 0.5458 s / img. ETA=0:24:37
[32m[11/11 00:24:39 d2.evaluation.evaluator]: [0mInference done 481/2913. 0.5460 s / img. ETA=0:24:31
[32m[11/11 00:24:44 d2.evaluation.evaluator]: [0mInference done 490/2913. 0.5461 s / img. ETA=0:24:25
[32m[11/11 00:24:50 d2.evaluation.evaluator]: [0mInference done 499/2913. 0.5463 s / img. ETA=0:24:20
[32m[11/11 00:24:55 d2.evaluation.evaluator]: [0mInference done 508/2913. 0.5463 s / img. ETA=0:24:14
[32m[11/11 00:25:00 d2.evaluation.evaluator]: [0mInference done 517/2913. 0.5464 s / img. ETA=0:24:08
[32m[11/11 00:25:06 d2.evaluation.evaluator]: [0mInference done 526/2913. 0.5466 s / img. ETA=0:24:03
[32m[11/11 00:25:11 d2.evaluation.evaluator]: [0mInference done 535/2913. 0.5466 s / img. ETA=0:23:57
[32m[11/11 00:25:17 d2.evaluation.evaluator]: [0mInference done 544/2913. 0.5467 s / img. ETA=0:23:51
[32m[11/11 00:25:22 d2.evaluation.evaluator]: [0mInference done 553/2913. 0.5468 s / img. ETA=0:23:45
[32m[11/11 00:25:27 d2.evaluation.evaluator]: [0mInference done 562/2913. 0.5469 s / img. ETA=0:23:40
[32m[11/11 00:25:33 d2.evaluation.evaluator]: [0mInference done 571/2913. 0.5469 s / img. ETA=0:23:34
[32m[11/11 00:25:38 d2.evaluation.evaluator]: [0mInference done 580/2913. 0.5470 s / img. ETA=0:23:28
[32m[11/11 00:25:43 d2.evaluation.evaluator]: [0mInference done 589/2913. 0.5472 s / img. ETA=0:23:22
[32m[11/11 00:25:49 d2.evaluation.evaluator]: [0mInference done 598/2913. 0.5472 s / img. ETA=0:23:17
[32m[11/11 00:25:54 d2.evaluation.evaluator]: [0mInference done 607/2913. 0.5473 s / img. ETA=0:23:11
[32m[11/11 00:25:59 d2.evaluation.evaluator]: [0mInference done 616/2913. 0.5473 s / img. ETA=0:23:05
[32m[11/11 00:26:05 d2.evaluation.evaluator]: [0mInference done 625/2913. 0.5473 s / img. ETA=0:23:00
[32m[11/11 00:26:10 d2.evaluation.evaluator]: [0mInference done 634/2913. 0.5474 s / img. ETA=0:22:55
[32m[11/11 00:26:16 d2.evaluation.evaluator]: [0mInference done 643/2913. 0.5475 s / img. ETA=0:22:49
[32m[11/11 00:26:21 d2.evaluation.evaluator]: [0mInference done 652/2913. 0.5475 s / img. ETA=0:22:43
[32m[11/11 00:26:26 d2.evaluation.evaluator]: [0mInference done 661/2913. 0.5475 s / img. ETA=0:22:37
[32m[11/11 00:26:32 d2.evaluation.evaluator]: [0mInference done 670/2913. 0.5475 s / img. ETA=0:22:31
[32m[11/11 00:26:37 d2.evaluation.evaluator]: [0mInference done 679/2913. 0.5476 s / img. ETA=0:22:26
[32m[11/11 00:26:42 d2.evaluation.evaluator]: [0mInference done 688/2913. 0.5476 s / img. ETA=0:22:20
[32m[11/11 00:26:48 d2.evaluation.evaluator]: [0mInference done 697/2913. 0.5476 s / img. ETA=0:22:14
[32m[11/11 00:26:53 d2.evaluation.evaluator]: [0mInference done 706/2913. 0.5476 s / img. ETA=0:22:09
[32m[11/11 00:26:58 d2.evaluation.evaluator]: [0mInference done 715/2913. 0.5476 s / img. ETA=0:22:03
[32m[11/11 00:27:04 d2.evaluation.evaluator]: [0mInference done 724/2913. 0.5476 s / img. ETA=0:21:57
[32m[11/11 00:27:09 d2.evaluation.evaluator]: [0mInference done 733/2913. 0.5477 s / img. ETA=0:21:52
[32m[11/11 00:27:15 d2.evaluation.evaluator]: [0mInference done 742/2913. 0.5478 s / img. ETA=0:21:47
[32m[11/11 00:27:20 d2.evaluation.evaluator]: [0mInference done 751/2913. 0.5478 s / img. ETA=0:21:41
[32m[11/11 00:27:25 d2.evaluation.evaluator]: [0mInference done 760/2913. 0.5478 s / img. ETA=0:21:36
[32m[11/11 00:27:31 d2.evaluation.evaluator]: [0mInference done 769/2913. 0.5478 s / img. ETA=0:21:30
[32m[11/11 00:27:36 d2.evaluation.evaluator]: [0mInference done 778/2913. 0.5478 s / img. ETA=0:21:25
[32m[11/11 00:27:42 d2.evaluation.evaluator]: [0mInference done 787/2913. 0.5478 s / img. ETA=0:21:19
[32m[11/11 00:27:47 d2.evaluation.evaluator]: [0mInference done 796/2913. 0.5478 s / img. ETA=0:21:13
[32m[11/11 00:27:52 d2.evaluation.evaluator]: [0mInference done 805/2913. 0.5479 s / img. ETA=0:21:08
[32m[11/11 00:27:58 d2.evaluation.evaluator]: [0mInference done 814/2913. 0.5479 s / img. ETA=0:21:02
[32m[11/11 00:28:03 d2.evaluation.evaluator]: [0mInference done 823/2913. 0.5479 s / img. ETA=0:20:57
[32m[11/11 00:28:08 d2.evaluation.evaluator]: [0mInference done 832/2913. 0.5479 s / img. ETA=0:20:51
[32m[11/11 00:28:14 d2.evaluation.evaluator]: [0mInference done 841/2913. 0.5478 s / img. ETA=0:20:45
[32m[11/11 00:28:19 d2.evaluation.evaluator]: [0mInference done 850/2913. 0.5478 s / img. ETA=0:20:40
[32m[11/11 00:28:24 d2.evaluation.evaluator]: [0mInference done 859/2913. 0.5478 s / img. ETA=0:20:34
[32m[11/11 00:28:30 d2.evaluation.evaluator]: [0mInference done 868/2913. 0.5478 s / img. ETA=0:20:29
[32m[11/11 00:28:35 d2.evaluation.evaluator]: [0mInference done 877/2913. 0.5478 s / img. ETA=0:20:23
[32m[11/11 00:28:40 d2.evaluation.evaluator]: [0mInference done 886/2913. 0.5477 s / img. ETA=0:20:18
[32m[11/11 00:28:46 d2.evaluation.evaluator]: [0mInference done 895/2913. 0.5477 s / img. ETA=0:20:12
[32m[11/11 00:28:51 d2.evaluation.evaluator]: [0mInference done 904/2913. 0.5477 s / img. ETA=0:20:07
[32m[11/11 00:28:56 d2.evaluation.evaluator]: [0mInference done 913/2913. 0.5476 s / img. ETA=0:20:01
[32m[11/11 00:29:02 d2.evaluation.evaluator]: [0mInference done 922/2913. 0.5475 s / img. ETA=0:19:55
[32m[11/11 00:29:07 d2.evaluation.evaluator]: [0mInference done 931/2913. 0.5475 s / img. ETA=0:19:50
[32m[11/11 00:29:12 d2.evaluation.evaluator]: [0mInference done 940/2913. 0.5475 s / img. ETA=0:19:44
[32m[11/11 00:29:18 d2.evaluation.evaluator]: [0mInference done 949/2913. 0.5475 s / img. ETA=0:19:38
[32m[11/11 00:29:23 d2.evaluation.evaluator]: [0mInference done 958/2913. 0.5474 s / img. ETA=0:19:33
[32m[11/11 00:29:28 d2.evaluation.evaluator]: [0mInference done 967/2913. 0.5474 s / img. ETA=0:19:27
[32m[11/11 00:29:33 d2.evaluation.evaluator]: [0mInference done 976/2913. 0.5473 s / img. ETA=0:19:22
[32m[11/11 00:29:39 d2.evaluation.evaluator]: [0mInference done 985/2913. 0.5473 s / img. ETA=0:19:16
[32m[11/11 00:29:44 d2.evaluation.evaluator]: [0mInference done 994/2913. 0.5474 s / img. ETA=0:19:11
[32m[11/11 00:29:49 d2.evaluation.evaluator]: [0mInference done 1003/2913. 0.5473 s / img. ETA=0:19:05
[32m[11/11 00:29:55 d2.evaluation.evaluator]: [0mInference done 1012/2913. 0.5473 s / img. ETA=0:18:59
[32m[11/11 00:30:00 d2.evaluation.evaluator]: [0mInference done 1021/2913. 0.5473 s / img. ETA=0:18:54
[32m[11/11 00:30:05 d2.evaluation.evaluator]: [0mInference done 1030/2913. 0.5473 s / img. ETA=0:18:48
[32m[11/11 00:30:11 d2.evaluation.evaluator]: [0mInference done 1039/2913. 0.5473 s / img. ETA=0:18:43
[32m[11/11 00:30:16 d2.evaluation.evaluator]: [0mInference done 1048/2913. 0.5473 s / img. ETA=0:18:37
[32m[11/11 00:30:21 d2.evaluation.evaluator]: [0mInference done 1057/2913. 0.5473 s / img. ETA=0:18:32
[32m[11/11 00:30:27 d2.evaluation.evaluator]: [0mInference done 1066/2913. 0.5473 s / img. ETA=0:18:26
[32m[11/11 00:30:32 d2.evaluation.evaluator]: [0mInference done 1075/2913. 0.5472 s / img. ETA=0:18:21
[32m[11/11 00:30:37 d2.evaluation.evaluator]: [0mInference done 1084/2913. 0.5473 s / img. ETA=0:18:15
[32m[11/11 00:30:43 d2.evaluation.evaluator]: [0mInference done 1093/2913. 0.5473 s / img. ETA=0:18:10
[32m[11/11 00:30:48 d2.evaluation.evaluator]: [0mInference done 1102/2913. 0.5472 s / img. ETA=0:18:04
[32m[11/11 00:30:53 d2.evaluation.evaluator]: [0mInference done 1111/2913. 0.5472 s / img. ETA=0:17:59
[32m[11/11 00:30:59 d2.evaluation.evaluator]: [0mInference done 1120/2913. 0.5472 s / img. ETA=0:17:53
[32m[11/11 00:31:04 d2.evaluation.evaluator]: [0mInference done 1129/2913. 0.5472 s / img. ETA=0:17:48
[32m[11/11 00:31:09 d2.evaluation.evaluator]: [0mInference done 1138/2913. 0.5472 s / img. ETA=0:17:42
[32m[11/11 00:31:15 d2.evaluation.evaluator]: [0mInference done 1147/2913. 0.5472 s / img. ETA=0:17:37
[32m[11/11 00:31:20 d2.evaluation.evaluator]: [0mInference done 1156/2913. 0.5472 s / img. ETA=0:17:31
[32m[11/11 00:31:25 d2.evaluation.evaluator]: [0mInference done 1165/2913. 0.5471 s / img. ETA=0:17:26
[32m[11/11 00:31:30 d2.evaluation.evaluator]: [0mInference done 1174/2913. 0.5471 s / img. ETA=0:17:20
[32m[11/11 00:31:36 d2.evaluation.evaluator]: [0mInference done 1183/2913. 0.5471 s / img. ETA=0:17:15
[32m[11/11 00:31:41 d2.evaluation.evaluator]: [0mInference done 1192/2913. 0.5470 s / img. ETA=0:17:09
[32m[11/11 00:31:46 d2.evaluation.evaluator]: [0mInference done 1201/2913. 0.5470 s / img. ETA=0:17:04
[32m[11/11 00:31:52 d2.evaluation.evaluator]: [0mInference done 1210/2913. 0.5470 s / img. ETA=0:16:58
[32m[11/11 00:31:57 d2.evaluation.evaluator]: [0mInference done 1219/2913. 0.5470 s / img. ETA=0:16:53
[32m[11/11 00:32:02 d2.evaluation.evaluator]: [0mInference done 1228/2913. 0.5470 s / img. ETA=0:16:47
[32m[11/11 00:32:08 d2.evaluation.evaluator]: [0mInference done 1237/2913. 0.5470 s / img. ETA=0:16:42
[32m[11/11 00:32:13 d2.evaluation.evaluator]: [0mInference done 1246/2913. 0.5471 s / img. ETA=0:16:37
[32m[11/11 00:32:19 d2.evaluation.evaluator]: [0mInference done 1255/2913. 0.5471 s / img. ETA=0:16:31
[32m[11/11 00:32:24 d2.evaluation.evaluator]: [0mInference done 1264/2913. 0.5471 s / img. ETA=0:16:26
[32m[11/11 00:32:29 d2.evaluation.evaluator]: [0mInference done 1273/2913. 0.5471 s / img. ETA=0:16:20
[32m[11/11 00:32:35 d2.evaluation.evaluator]: [0mInference done 1282/2913. 0.5471 s / img. ETA=0:16:15
[32m[11/11 00:32:40 d2.evaluation.evaluator]: [0mInference done 1291/2913. 0.5471 s / img. ETA=0:16:10
[32m[11/11 00:32:45 d2.evaluation.evaluator]: [0mInference done 1300/2913. 0.5471 s / img. ETA=0:16:04
[32m[11/11 00:32:51 d2.evaluation.evaluator]: [0mInference done 1309/2913. 0.5470 s / img. ETA=0:15:59
[32m[11/11 00:32:56 d2.evaluation.evaluator]: [0mInference done 1318/2913. 0.5470 s / img. ETA=0:15:53
[32m[11/11 00:33:01 d2.evaluation.evaluator]: [0mInference done 1327/2913. 0.5470 s / img. ETA=0:15:48
[32m[11/11 00:33:07 d2.evaluation.evaluator]: [0mInference done 1336/2913. 0.5470 s / img. ETA=0:15:43
[32m[11/11 00:33:12 d2.evaluation.evaluator]: [0mInference done 1345/2913. 0.5470 s / img. ETA=0:15:37
[32m[11/11 00:33:18 d2.evaluation.evaluator]: [0mInference done 1354/2913. 0.5470 s / img. ETA=0:15:32
[32m[11/11 00:33:23 d2.evaluation.evaluator]: [0mInference done 1363/2913. 0.5470 s / img. ETA=0:15:26
[32m[11/11 00:33:28 d2.evaluation.evaluator]: [0mInference done 1372/2913. 0.5470 s / img. ETA=0:15:21
[32m[11/11 00:33:34 d2.evaluation.evaluator]: [0mInference done 1381/2913. 0.5470 s / img. ETA=0:15:15
[32m[11/11 00:33:39 d2.evaluation.evaluator]: [0mInference done 1390/2913. 0.5470 s / img. ETA=0:15:10
[32m[11/11 00:33:44 d2.evaluation.evaluator]: [0mInference done 1399/2913. 0.5470 s / img. ETA=0:15:05
[32m[11/11 00:33:50 d2.evaluation.evaluator]: [0mInference done 1408/2913. 0.5471 s / img. ETA=0:14:59
[32m[11/11 00:33:55 d2.evaluation.evaluator]: [0mInference done 1417/2913. 0.5471 s / img. ETA=0:14:54
[32m[11/11 00:34:00 d2.evaluation.evaluator]: [0mInference done 1426/2913. 0.5471 s / img. ETA=0:14:48
[32m[11/11 00:34:06 d2.evaluation.evaluator]: [0mInference done 1435/2913. 0.5471 s / img. ETA=0:14:43
[32m[11/11 00:34:11 d2.evaluation.evaluator]: [0mInference done 1444/2913. 0.5471 s / img. ETA=0:14:38
[32m[11/11 00:34:17 d2.evaluation.evaluator]: [0mInference done 1453/2913. 0.5472 s / img. ETA=0:14:32
[32m[11/11 00:34:22 d2.evaluation.evaluator]: [0mInference done 1462/2913. 0.5472 s / img. ETA=0:14:27
[32m[11/11 00:34:27 d2.evaluation.evaluator]: [0mInference done 1471/2913. 0.5472 s / img. ETA=0:14:22
[32m[11/11 00:34:33 d2.evaluation.evaluator]: [0mInference done 1480/2913. 0.5473 s / img. ETA=0:14:16
[32m[11/11 00:34:38 d2.evaluation.evaluator]: [0mInference done 1489/2913. 0.5473 s / img. ETA=0:14:11
[32m[11/11 00:34:44 d2.evaluation.evaluator]: [0mInference done 1498/2913. 0.5473 s / img. ETA=0:14:06
[32m[11/11 00:34:49 d2.evaluation.evaluator]: [0mInference done 1507/2913. 0.5473 s / img. ETA=0:14:00
[32m[11/11 00:34:54 d2.evaluation.evaluator]: [0mInference done 1516/2913. 0.5474 s / img. ETA=0:13:55
[32m[11/11 00:35:00 d2.evaluation.evaluator]: [0mInference done 1525/2913. 0.5474 s / img. ETA=0:13:49
[32m[11/11 00:35:05 d2.evaluation.evaluator]: [0mInference done 1534/2913. 0.5474 s / img. ETA=0:13:44
[32m[11/11 00:35:11 d2.evaluation.evaluator]: [0mInference done 1543/2913. 0.5474 s / img. ETA=0:13:39
[32m[11/11 00:35:16 d2.evaluation.evaluator]: [0mInference done 1552/2913. 0.5475 s / img. ETA=0:13:33
[32m[11/11 00:35:21 d2.evaluation.evaluator]: [0mInference done 1561/2913. 0.5475 s / img. ETA=0:13:28
[32m[11/11 00:35:27 d2.evaluation.evaluator]: [0mInference done 1570/2913. 0.5475 s / img. ETA=0:13:23
[32m[11/11 00:35:32 d2.evaluation.evaluator]: [0mInference done 1579/2913. 0.5475 s / img. ETA=0:13:17
[32m[11/11 00:35:37 d2.evaluation.evaluator]: [0mInference done 1588/2913. 0.5476 s / img. ETA=0:13:12
[32m[11/11 00:35:43 d2.evaluation.evaluator]: [0mInference done 1597/2913. 0.5476 s / img. ETA=0:13:06
[32m[11/11 00:35:48 d2.evaluation.evaluator]: [0mInference done 1606/2913. 0.5476 s / img. ETA=0:13:01
[32m[11/11 00:35:54 d2.evaluation.evaluator]: [0mInference done 1615/2913. 0.5476 s / img. ETA=0:12:56
[32m[11/11 00:35:59 d2.evaluation.evaluator]: [0mInference done 1624/2913. 0.5476 s / img. ETA=0:12:50
[32m[11/11 00:36:04 d2.evaluation.evaluator]: [0mInference done 1632/2913. 0.5476 s / img. ETA=0:12:46
[32m[11/11 00:36:09 d2.evaluation.evaluator]: [0mInference done 1641/2913. 0.5477 s / img. ETA=0:12:40
[32m[11/11 00:36:15 d2.evaluation.evaluator]: [0mInference done 1650/2913. 0.5477 s / img. ETA=0:12:35
[32m[11/11 00:36:20 d2.evaluation.evaluator]: [0mInference done 1659/2913. 0.5477 s / img. ETA=0:12:30
[32m[11/11 00:36:25 d2.evaluation.evaluator]: [0mInference done 1668/2913. 0.5477 s / img. ETA=0:12:24
[32m[11/11 00:36:31 d2.evaluation.evaluator]: [0mInference done 1677/2913. 0.5477 s / img. ETA=0:12:19
[32m[11/11 00:36:36 d2.evaluation.evaluator]: [0mInference done 1686/2913. 0.5478 s / img. ETA=0:12:13
[32m[11/11 00:36:42 d2.evaluation.evaluator]: [0mInference done 1695/2913. 0.5478 s / img. ETA=0:12:08
[32m[11/11 00:36:47 d2.evaluation.evaluator]: [0mInference done 1704/2913. 0.5478 s / img. ETA=0:12:03
[32m[11/11 00:36:53 d2.evaluation.evaluator]: [0mInference done 1713/2913. 0.5478 s / img. ETA=0:11:57
[32m[11/11 00:36:58 d2.evaluation.evaluator]: [0mInference done 1722/2913. 0.5478 s / img. ETA=0:11:52
[32m[11/11 00:37:03 d2.evaluation.evaluator]: [0mInference done 1731/2913. 0.5479 s / img. ETA=0:11:47
[32m[11/11 00:37:09 d2.evaluation.evaluator]: [0mInference done 1740/2913. 0.5479 s / img. ETA=0:11:41
[32m[11/11 00:37:14 d2.evaluation.evaluator]: [0mInference done 1749/2913. 0.5479 s / img. ETA=0:11:36
[32m[11/11 00:37:19 d2.evaluation.evaluator]: [0mInference done 1758/2913. 0.5479 s / img. ETA=0:11:30
[32m[11/11 00:37:25 d2.evaluation.evaluator]: [0mInference done 1767/2913. 0.5479 s / img. ETA=0:11:25
[32m[11/11 00:37:30 d2.evaluation.evaluator]: [0mInference done 1776/2913. 0.5479 s / img. ETA=0:11:20
[32m[11/11 00:37:36 d2.evaluation.evaluator]: [0mInference done 1785/2913. 0.5479 s / img. ETA=0:11:14
[32m[11/11 00:37:41 d2.evaluation.evaluator]: [0mInference done 1794/2913. 0.5479 s / img. ETA=0:11:09
[32m[11/11 00:37:46 d2.evaluation.evaluator]: [0mInference done 1803/2913. 0.5479 s / img. ETA=0:11:04
[32m[11/11 00:37:52 d2.evaluation.evaluator]: [0mInference done 1812/2913. 0.5480 s / img. ETA=0:10:58
[32m[11/11 00:37:57 d2.evaluation.evaluator]: [0mInference done 1821/2913. 0.5480 s / img. ETA=0:10:53
[32m[11/11 00:38:03 d2.evaluation.evaluator]: [0mInference done 1830/2913. 0.5480 s / img. ETA=0:10:47
[32m[11/11 00:38:08 d2.evaluation.evaluator]: [0mInference done 1839/2913. 0.5480 s / img. ETA=0:10:42
[32m[11/11 00:38:13 d2.evaluation.evaluator]: [0mInference done 1848/2913. 0.5480 s / img. ETA=0:10:37
[32m[11/11 00:38:19 d2.evaluation.evaluator]: [0mInference done 1857/2913. 0.5480 s / img. ETA=0:10:31
[32m[11/11 00:38:24 d2.evaluation.evaluator]: [0mInference done 1866/2913. 0.5480 s / img. ETA=0:10:26
[32m[11/11 00:38:29 d2.evaluation.evaluator]: [0mInference done 1875/2913. 0.5480 s / img. ETA=0:10:20
[32m[11/11 00:38:35 d2.evaluation.evaluator]: [0mInference done 1884/2913. 0.5480 s / img. ETA=0:10:15
[32m[11/11 00:38:40 d2.evaluation.evaluator]: [0mInference done 1893/2913. 0.5480 s / img. ETA=0:10:09
[32m[11/11 00:38:45 d2.evaluation.evaluator]: [0mInference done 1902/2913. 0.5480 s / img. ETA=0:10:04
[32m[11/11 00:38:51 d2.evaluation.evaluator]: [0mInference done 1911/2913. 0.5480 s / img. ETA=0:09:59
[32m[11/11 00:38:56 d2.evaluation.evaluator]: [0mInference done 1920/2913. 0.5480 s / img. ETA=0:09:53
[32m[11/11 00:39:01 d2.evaluation.evaluator]: [0mInference done 1929/2913. 0.5479 s / img. ETA=0:09:48
[32m[11/11 00:39:07 d2.evaluation.evaluator]: [0mInference done 1938/2913. 0.5480 s / img. ETA=0:09:42
[32m[11/11 00:39:12 d2.evaluation.evaluator]: [0mInference done 1947/2913. 0.5480 s / img. ETA=0:09:37
[32m[11/11 00:39:17 d2.evaluation.evaluator]: [0mInference done 1956/2913. 0.5480 s / img. ETA=0:09:32
[32m[11/11 00:39:23 d2.evaluation.evaluator]: [0mInference done 1965/2913. 0.5480 s / img. ETA=0:09:26
[32m[11/11 00:39:28 d2.evaluation.evaluator]: [0mInference done 1974/2913. 0.5480 s / img. ETA=0:09:21
[32m[11/11 00:39:34 d2.evaluation.evaluator]: [0mInference done 1983/2913. 0.5481 s / img. ETA=0:09:16
[32m[11/11 00:39:39 d2.evaluation.evaluator]: [0mInference done 1992/2913. 0.5481 s / img. ETA=0:09:10
[32m[11/11 00:39:44 d2.evaluation.evaluator]: [0mInference done 2001/2913. 0.5481 s / img. ETA=0:09:05
[32m[11/11 00:39:50 d2.evaluation.evaluator]: [0mInference done 2010/2913. 0.5481 s / img. ETA=0:09:00
[32m[11/11 00:39:55 d2.evaluation.evaluator]: [0mInference done 2019/2913. 0.5482 s / img. ETA=0:08:54
[32m[11/11 00:40:01 d2.evaluation.evaluator]: [0mInference done 2028/2913. 0.5482 s / img. ETA=0:08:49
[32m[11/11 00:40:06 d2.evaluation.evaluator]: [0mInference done 2037/2913. 0.5482 s / img. ETA=0:08:43
[32m[11/11 00:40:12 d2.evaluation.evaluator]: [0mInference done 2046/2913. 0.5483 s / img. ETA=0:08:38
[32m[11/11 00:40:17 d2.evaluation.evaluator]: [0mInference done 2055/2913. 0.5483 s / img. ETA=0:08:33
[32m[11/11 00:40:22 d2.evaluation.evaluator]: [0mInference done 2064/2913. 0.5483 s / img. ETA=0:08:27
[32m[11/11 00:40:28 d2.evaluation.evaluator]: [0mInference done 2073/2913. 0.5483 s / img. ETA=0:08:22
[32m[11/11 00:40:33 d2.evaluation.evaluator]: [0mInference done 2082/2913. 0.5483 s / img. ETA=0:08:17
[32m[11/11 00:40:39 d2.evaluation.evaluator]: [0mInference done 2091/2913. 0.5483 s / img. ETA=0:08:11
[32m[11/11 00:40:44 d2.evaluation.evaluator]: [0mInference done 2100/2913. 0.5484 s / img. ETA=0:08:06
[32m[11/11 00:40:49 d2.evaluation.evaluator]: [0mInference done 2109/2913. 0.5484 s / img. ETA=0:08:00
[32m[11/11 00:40:55 d2.evaluation.evaluator]: [0mInference done 2118/2913. 0.5484 s / img. ETA=0:07:55
[32m[11/11 00:41:00 d2.evaluation.evaluator]: [0mInference done 2127/2913. 0.5484 s / img. ETA=0:07:50
[32m[11/11 00:41:06 d2.evaluation.evaluator]: [0mInference done 2136/2913. 0.5484 s / img. ETA=0:07:44
[32m[11/11 00:41:11 d2.evaluation.evaluator]: [0mInference done 2144/2913. 0.5485 s / img. ETA=0:07:40
[32m[11/11 00:41:16 d2.evaluation.evaluator]: [0mInference done 2153/2913. 0.5485 s / img. ETA=0:07:34
[32m[11/11 00:41:21 d2.evaluation.evaluator]: [0mInference done 2162/2913. 0.5485 s / img. ETA=0:07:29
[32m[11/11 00:41:27 d2.evaluation.evaluator]: [0mInference done 2171/2913. 0.5485 s / img. ETA=0:07:23
[32m[11/11 00:41:32 d2.evaluation.evaluator]: [0mInference done 2180/2913. 0.5485 s / img. ETA=0:07:18
[32m[11/11 00:41:37 d2.evaluation.evaluator]: [0mInference done 2189/2913. 0.5485 s / img. ETA=0:07:13
[32m[11/11 00:41:43 d2.evaluation.evaluator]: [0mInference done 2198/2913. 0.5485 s / img. ETA=0:07:07
[32m[11/11 00:41:48 d2.evaluation.evaluator]: [0mInference done 2207/2913. 0.5486 s / img. ETA=0:07:02
[32m[11/11 00:41:54 d2.evaluation.evaluator]: [0mInference done 2216/2913. 0.5486 s / img. ETA=0:06:57
[32m[11/11 00:41:59 d2.evaluation.evaluator]: [0mInference done 2225/2913. 0.5486 s / img. ETA=0:06:51
[32m[11/11 00:42:05 d2.evaluation.evaluator]: [0mInference done 2234/2913. 0.5486 s / img. ETA=0:06:46
[32m[11/11 00:42:10 d2.evaluation.evaluator]: [0mInference done 2243/2913. 0.5486 s / img. ETA=0:06:40
[32m[11/11 00:42:15 d2.evaluation.evaluator]: [0mInference done 2252/2913. 0.5486 s / img. ETA=0:06:35
[32m[11/11 00:42:21 d2.evaluation.evaluator]: [0mInference done 2261/2913. 0.5486 s / img. ETA=0:06:30
[32m[11/11 00:42:26 d2.evaluation.evaluator]: [0mInference done 2270/2913. 0.5486 s / img. ETA=0:06:24
[32m[11/11 00:42:31 d2.evaluation.evaluator]: [0mInference done 2279/2913. 0.5486 s / img. ETA=0:06:19
[32m[11/11 00:42:37 d2.evaluation.evaluator]: [0mInference done 2288/2913. 0.5486 s / img. ETA=0:06:13
[32m[11/11 00:42:42 d2.evaluation.evaluator]: [0mInference done 2297/2913. 0.5486 s / img. ETA=0:06:08
[32m[11/11 00:42:48 d2.evaluation.evaluator]: [0mInference done 2306/2913. 0.5486 s / img. ETA=0:06:03
[32m[11/11 00:42:53 d2.evaluation.evaluator]: [0mInference done 2315/2913. 0.5486 s / img. ETA=0:05:57
[32m[11/11 00:42:58 d2.evaluation.evaluator]: [0mInference done 2324/2913. 0.5486 s / img. ETA=0:05:52
[32m[11/11 00:43:04 d2.evaluation.evaluator]: [0mInference done 2333/2913. 0.5486 s / img. ETA=0:05:47
[32m[11/11 00:43:09 d2.evaluation.evaluator]: [0mInference done 2342/2913. 0.5486 s / img. ETA=0:05:41
[32m[11/11 00:43:15 d2.evaluation.evaluator]: [0mInference done 2351/2913. 0.5486 s / img. ETA=0:05:36
[32m[11/11 00:43:20 d2.evaluation.evaluator]: [0mInference done 2360/2913. 0.5487 s / img. ETA=0:05:30
[32m[11/11 00:43:25 d2.evaluation.evaluator]: [0mInference done 2369/2913. 0.5487 s / img. ETA=0:05:25
[32m[11/11 00:43:31 d2.evaluation.evaluator]: [0mInference done 2378/2913. 0.5487 s / img. ETA=0:05:20
[32m[11/11 00:43:36 d2.evaluation.evaluator]: [0mInference done 2387/2913. 0.5486 s / img. ETA=0:05:14
[32m[11/11 00:43:42 d2.evaluation.evaluator]: [0mInference done 2396/2913. 0.5486 s / img. ETA=0:05:09
[32m[11/11 00:43:47 d2.evaluation.evaluator]: [0mInference done 2405/2913. 0.5486 s / img. ETA=0:05:03
[32m[11/11 00:43:52 d2.evaluation.evaluator]: [0mInference done 2414/2913. 0.5486 s / img. ETA=0:04:58
[32m[11/11 00:43:58 d2.evaluation.evaluator]: [0mInference done 2423/2913. 0.5486 s / img. ETA=0:04:53
[32m[11/11 00:44:03 d2.evaluation.evaluator]: [0mInference done 2432/2913. 0.5486 s / img. ETA=0:04:47
[32m[11/11 00:44:08 d2.evaluation.evaluator]: [0mInference done 2441/2913. 0.5486 s / img. ETA=0:04:42
[32m[11/11 00:44:14 d2.evaluation.evaluator]: [0mInference done 2450/2913. 0.5486 s / img. ETA=0:04:37
[32m[11/11 00:44:19 d2.evaluation.evaluator]: [0mInference done 2459/2913. 0.5486 s / img. ETA=0:04:31
[32m[11/11 00:44:24 d2.evaluation.evaluator]: [0mInference done 2468/2913. 0.5486 s / img. ETA=0:04:26
[32m[11/11 00:44:30 d2.evaluation.evaluator]: [0mInference done 2477/2913. 0.5486 s / img. ETA=0:04:20
[32m[11/11 00:44:35 d2.evaluation.evaluator]: [0mInference done 2486/2913. 0.5486 s / img. ETA=0:04:15
[32m[11/11 00:44:41 d2.evaluation.evaluator]: [0mInference done 2495/2913. 0.5486 s / img. ETA=0:04:10
[32m[11/11 00:44:46 d2.evaluation.evaluator]: [0mInference done 2504/2913. 0.5486 s / img. ETA=0:04:04
[32m[11/11 00:44:51 d2.evaluation.evaluator]: [0mInference done 2513/2913. 0.5486 s / img. ETA=0:03:59
[32m[11/11 00:44:57 d2.evaluation.evaluator]: [0mInference done 2522/2913. 0.5486 s / img. ETA=0:03:53
[32m[11/11 00:45:02 d2.evaluation.evaluator]: [0mInference done 2531/2913. 0.5486 s / img. ETA=0:03:48
[32m[11/11 00:45:08 d2.evaluation.evaluator]: [0mInference done 2540/2913. 0.5486 s / img. ETA=0:03:43
[32m[11/11 00:45:13 d2.evaluation.evaluator]: [0mInference done 2549/2913. 0.5486 s / img. ETA=0:03:37
[32m[11/11 00:45:18 d2.evaluation.evaluator]: [0mInference done 2558/2913. 0.5486 s / img. ETA=0:03:32
[32m[11/11 00:45:24 d2.evaluation.evaluator]: [0mInference done 2567/2913. 0.5487 s / img. ETA=0:03:27
[32m[11/11 00:45:29 d2.evaluation.evaluator]: [0mInference done 2576/2913. 0.5486 s / img. ETA=0:03:21
[32m[11/11 00:45:34 d2.evaluation.evaluator]: [0mInference done 2585/2913. 0.5486 s / img. ETA=0:03:16
[32m[11/11 00:45:40 d2.evaluation.evaluator]: [0mInference done 2594/2913. 0.5486 s / img. ETA=0:03:10
[32m[11/11 00:45:45 d2.evaluation.evaluator]: [0mInference done 2603/2913. 0.5486 s / img. ETA=0:03:05
[32m[11/11 00:45:50 d2.evaluation.evaluator]: [0mInference done 2612/2913. 0.5486 s / img. ETA=0:03:00
[32m[11/11 00:45:56 d2.evaluation.evaluator]: [0mInference done 2621/2913. 0.5486 s / img. ETA=0:02:54
[32m[11/11 00:46:01 d2.evaluation.evaluator]: [0mInference done 2630/2913. 0.5486 s / img. ETA=0:02:49
[32m[11/11 00:46:06 d2.evaluation.evaluator]: [0mInference done 2639/2913. 0.5486 s / img. ETA=0:02:43
[32m[11/11 00:46:12 d2.evaluation.evaluator]: [0mInference done 2648/2913. 0.5486 s / img. ETA=0:02:38
[32m[11/11 00:46:17 d2.evaluation.evaluator]: [0mInference done 2657/2913. 0.5487 s / img. ETA=0:02:33
[32m[11/11 00:46:23 d2.evaluation.evaluator]: [0mInference done 2666/2913. 0.5487 s / img. ETA=0:02:27
[32m[11/11 00:46:28 d2.evaluation.evaluator]: [0mInference done 2675/2913. 0.5487 s / img. ETA=0:02:22
[32m[11/11 00:46:33 d2.evaluation.evaluator]: [0mInference done 2684/2913. 0.5487 s / img. ETA=0:02:16
[32m[11/11 00:46:39 d2.evaluation.evaluator]: [0mInference done 2693/2913. 0.5486 s / img. ETA=0:02:11
[32m[11/11 00:46:44 d2.evaluation.evaluator]: [0mInference done 2702/2913. 0.5486 s / img. ETA=0:02:06
[32m[11/11 00:46:49 d2.evaluation.evaluator]: [0mInference done 2711/2913. 0.5486 s / img. ETA=0:02:00
[32m[11/11 00:46:55 d2.evaluation.evaluator]: [0mInference done 2720/2913. 0.5486 s / img. ETA=0:01:55
[32m[11/11 00:47:00 d2.evaluation.evaluator]: [0mInference done 2729/2913. 0.5486 s / img. ETA=0:01:50
[32m[11/11 00:47:05 d2.evaluation.evaluator]: [0mInference done 2738/2913. 0.5486 s / img. ETA=0:01:44
[32m[11/11 00:47:11 d2.evaluation.evaluator]: [0mInference done 2747/2913. 0.5486 s / img. ETA=0:01:39
[32m[11/11 00:47:16 d2.evaluation.evaluator]: [0mInference done 2756/2913. 0.5486 s / img. ETA=0:01:33
[32m[11/11 00:47:21 d2.evaluation.evaluator]: [0mInference done 2765/2913. 0.5486 s / img. ETA=0:01:28
[32m[11/11 00:47:27 d2.evaluation.evaluator]: [0mInference done 2774/2913. 0.5486 s / img. ETA=0:01:23
[32m[11/11 00:47:32 d2.evaluation.evaluator]: [0mInference done 2783/2913. 0.5486 s / img. ETA=0:01:17
[32m[11/11 00:47:37 d2.evaluation.evaluator]: [0mInference done 2792/2913. 0.5486 s / img. ETA=0:01:12
[32m[11/11 00:47:43 d2.evaluation.evaluator]: [0mInference done 2801/2913. 0.5486 s / img. ETA=0:01:06
[32m[11/11 00:47:48 d2.evaluation.evaluator]: [0mInference done 2810/2913. 0.5486 s / img. ETA=0:01:01
[32m[11/11 00:47:53 d2.evaluation.evaluator]: [0mInference done 2819/2913. 0.5486 s / img. ETA=0:00:56
[32m[11/11 00:47:59 d2.evaluation.evaluator]: [0mInference done 2828/2913. 0.5486 s / img. ETA=0:00:50
[32m[11/11 00:48:04 d2.evaluation.evaluator]: [0mInference done 2837/2913. 0.5486 s / img. ETA=0:00:45
[32m[11/11 00:48:10 d2.evaluation.evaluator]: [0mInference done 2846/2913. 0.5486 s / img. ETA=0:00:40
[32m[11/11 00:48:15 d2.evaluation.evaluator]: [0mInference done 2855/2913. 0.5486 s / img. ETA=0:00:34
[32m[11/11 00:48:20 d2.evaluation.evaluator]: [0mInference done 2864/2913. 0.5485 s / img. ETA=0:00:29
[32m[11/11 00:48:26 d2.evaluation.evaluator]: [0mInference done 2873/2913. 0.5485 s / img. ETA=0:00:23
[32m[11/11 00:48:31 d2.evaluation.evaluator]: [0mInference done 2882/2913. 0.5485 s / img. ETA=0:00:18
[32m[11/11 00:48:36 d2.evaluation.evaluator]: [0mInference done 2891/2913. 0.5485 s / img. ETA=0:00:13
[32m[11/11 00:48:41 d2.evaluation.evaluator]: [0mInference done 2900/2913. 0.5485 s / img. ETA=0:00:07
[32m[11/11 00:48:47 d2.evaluation.evaluator]: [0mInference done 2909/2913. 0.5485 s / img. ETA=0:00:02
[32m[11/11 00:48:49 d2.evaluation.evaluator]: [0mTotal inference time: 0:28:58.401913 (0.597800 s / img per device, on 1 devices)
[32m[11/11 00:48:49 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:26:34 (0.548478 s / img per device, on 1 devices)
[32m[11/11 00:48:50 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 00:48:50 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/2shot/inference/coco_instances_results.json
[32m[11/11 00:48:51 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.44s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 2.18 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.37 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.023
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.006
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.018
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.046
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.023
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.034
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.034
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.060
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.198
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.889 | 2.290  | 0.552  | 0.066 | 1.780 | 4.639 |
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : 0.89
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: 2.29
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: 0.55
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : 1.78
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 00:48:54 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP    | category   | AP    | category         | AP    |
|:------------|:------|:-----------|:------|:-----------------|:------|
| backpac     | 0.137 | rop        | 2.089 | ven              | 3.928 |
| helme       | 0.008 | dril       | 0.001 | fire extinguishe | 0.046 |
| helmet-ligh | 0.000 | survivo    | 1.093 | cell phon        | 0.000 |
| cub         | 1.585 |            |       |                  |       |
[32m[11/11 00:48:54 d2.engine.defaults]: [0mEvaluation results for val_f_2 in csv format:
[32m[11/11 00:48:54 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 00:48:54 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 00:48:54 d2.evaluation.testing]: [0mcopypaste: 0.8887,2.2902,0.5516,0.0655,1.7799,4.6386
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
