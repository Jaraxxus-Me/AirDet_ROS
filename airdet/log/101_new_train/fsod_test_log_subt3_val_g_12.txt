Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:47:17 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/11 07:47:18 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/11 07:47:18 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_g_12',)"], resume=False)
[32m[11/11 07:47:18 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt3.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 3
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/3shot'

[32m[11/11 07:47:18 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_g_12',)
  TESTSHOTS: 3
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/3shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/11 07:47:18 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/config.yaml
[32m[11/11 07:47:25 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/11 07:47:25 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/11 07:47:26 d2.data.datasets.coco]: [0mLoaded 2088 images in COCO format from datasets/SUBT/use/val_g_12/new_annotations/val_g_12.json
[32m[11/11 07:47:26 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 223          |    rop     | 0            |      ven      | 0            |
|    helme    | 0            |    dril    | 352          | fire exting.. | 667          |
| helmet-ligh | 0            |  survivo   | 972          |   cell phon   | 0            |
|     cub     | 0            |            |              |               |              |
|    total    | 2214         |            |              |               |              |[0m
[32m[11/11 07:47:26 d2.data.common]: [0mSerializing 2088 elements to byte tensors and concatenating them all ...
[32m[11/11 07:47:26 d2.data.common]: [0mSerialized dataset takes 0.50 MiB
[32m[11/11 07:47:26 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/11 07:47:26 d2.evaluation.evaluator]: [0mStart inference on 2088 images
[32m[11/11 07:47:30 d2.evaluation.evaluator]: [0mInference done 11/2088. 0.2530 s / img. ETA=0:10:29
[32m[11/11 07:47:35 d2.evaluation.evaluator]: [0mInference done 23/2088. 0.2547 s / img. ETA=0:13:26
[32m[11/11 07:47:40 d2.evaluation.evaluator]: [0mInference done 34/2088. 0.2576 s / img. ETA=0:14:21
[32m[11/11 07:47:45 d2.evaluation.evaluator]: [0mInference done 45/2088. 0.2598 s / img. ETA=0:14:43
[32m[11/11 07:47:50 d2.evaluation.evaluator]: [0mInference done 56/2088. 0.2587 s / img. ETA=0:14:56
[32m[11/11 07:47:55 d2.evaluation.evaluator]: [0mInference done 67/2088. 0.2586 s / img. ETA=0:14:57
[32m[11/11 07:48:01 d2.evaluation.evaluator]: [0mInference done 79/2088. 0.2574 s / img. ETA=0:14:54
[32m[11/11 07:48:06 d2.evaluation.evaluator]: [0mInference done 90/2088. 0.2572 s / img. ETA=0:14:56
[32m[11/11 07:48:11 d2.evaluation.evaluator]: [0mInference done 101/2088. 0.2572 s / img. ETA=0:14:59
[32m[11/11 07:48:17 d2.evaluation.evaluator]: [0mInference done 112/2088. 0.2570 s / img. ETA=0:15:02
[32m[11/11 07:48:22 d2.evaluation.evaluator]: [0mInference done 123/2088. 0.2567 s / img. ETA=0:15:03
[32m[11/11 07:48:27 d2.evaluation.evaluator]: [0mInference done 131/2088. 0.2620 s / img. ETA=0:15:21
[32m[11/11 07:48:32 d2.evaluation.evaluator]: [0mInference done 137/2088. 0.2725 s / img. ETA=0:15:54
[32m[11/11 07:48:38 d2.evaluation.evaluator]: [0mInference done 143/2088. 0.2841 s / img. ETA=0:16:22
[32m[11/11 07:48:43 d2.evaluation.evaluator]: [0mInference done 149/2088. 0.2930 s / img. ETA=0:16:47
[32m[11/11 07:48:48 d2.evaluation.evaluator]: [0mInference done 156/2088. 0.3035 s / img. ETA=0:17:04
[32m[11/11 07:48:53 d2.evaluation.evaluator]: [0mInference done 165/2088. 0.3142 s / img. ETA=0:17:05
[32m[11/11 07:48:58 d2.evaluation.evaluator]: [0mInference done 174/2088. 0.3238 s / img. ETA=0:17:03
[32m[11/11 07:49:04 d2.evaluation.evaluator]: [0mInference done 184/2088. 0.3306 s / img. ETA=0:16:57
[32m[11/11 07:49:09 d2.evaluation.evaluator]: [0mInference done 193/2088. 0.3404 s / img. ETA=0:16:59
[32m[11/11 07:49:14 d2.evaluation.evaluator]: [0mInference done 202/2088. 0.3475 s / img. ETA=0:16:58
[32m[11/11 07:49:20 d2.evaluation.evaluator]: [0mInference done 212/2088. 0.3546 s / img. ETA=0:16:55
[32m[11/11 07:49:25 d2.evaluation.evaluator]: [0mInference done 222/2088. 0.3594 s / img. ETA=0:16:49
[32m[11/11 07:49:31 d2.evaluation.evaluator]: [0mInference done 231/2088. 0.3662 s / img. ETA=0:16:49
[32m[11/11 07:49:36 d2.evaluation.evaluator]: [0mInference done 241/2088. 0.3696 s / img. ETA=0:16:41
[32m[11/11 07:49:41 d2.evaluation.evaluator]: [0mInference done 250/2088. 0.3744 s / img. ETA=0:16:38
[32m[11/11 07:49:46 d2.evaluation.evaluator]: [0mInference done 259/2088. 0.3798 s / img. ETA=0:16:37
[32m[11/11 07:49:52 d2.evaluation.evaluator]: [0mInference done 269/2088. 0.3822 s / img. ETA=0:16:30
[32m[11/11 07:49:57 d2.evaluation.evaluator]: [0mInference done 278/2088. 0.3864 s / img. ETA=0:16:28
[32m[11/11 07:50:02 d2.evaluation.evaluator]: [0mInference done 287/2088. 0.3903 s / img. ETA=0:16:26
[32m[11/11 07:50:08 d2.evaluation.evaluator]: [0mInference done 296/2088. 0.3940 s / img. ETA=0:16:24
[32m[11/11 07:50:13 d2.evaluation.evaluator]: [0mInference done 305/2088. 0.3965 s / img. ETA=0:16:19
[32m[11/11 07:50:18 d2.evaluation.evaluator]: [0mInference done 314/2088. 0.3996 s / img. ETA=0:16:16
[32m[11/11 07:50:23 d2.evaluation.evaluator]: [0mInference done 323/2088. 0.4025 s / img. ETA=0:16:14
[32m[11/11 07:50:29 d2.evaluation.evaluator]: [0mInference done 332/2088. 0.4064 s / img. ETA=0:16:13
[32m[11/11 07:50:34 d2.evaluation.evaluator]: [0mInference done 341/2088. 0.4082 s / img. ETA=0:16:09
[32m[11/11 07:50:39 d2.evaluation.evaluator]: [0mInference done 349/2088. 0.4110 s / img. ETA=0:16:08
[32m[11/11 07:50:45 d2.evaluation.evaluator]: [0mInference done 358/2088. 0.4135 s / img. ETA=0:16:05
[32m[11/11 07:50:50 d2.evaluation.evaluator]: [0mInference done 366/2088. 0.4164 s / img. ETA=0:16:04
[32m[11/11 07:50:55 d2.evaluation.evaluator]: [0mInference done 375/2088. 0.4173 s / img. ETA=0:15:59
[32m[11/11 07:51:00 d2.evaluation.evaluator]: [0mInference done 383/2088. 0.4197 s / img. ETA=0:15:57
[32m[11/11 07:51:05 d2.evaluation.evaluator]: [0mInference done 392/2088. 0.4211 s / img. ETA=0:15:52
[32m[11/11 07:51:11 d2.evaluation.evaluator]: [0mInference done 401/2088. 0.4237 s / img. ETA=0:15:50
[32m[11/11 07:51:17 d2.evaluation.evaluator]: [0mInference done 411/2088. 0.4253 s / img. ETA=0:15:45
[32m[11/11 07:51:22 d2.evaluation.evaluator]: [0mInference done 420/2088. 0.4267 s / img. ETA=0:15:40
[32m[11/11 07:51:28 d2.evaluation.evaluator]: [0mInference done 429/2088. 0.4289 s / img. ETA=0:15:37
[32m[11/11 07:51:33 d2.evaluation.evaluator]: [0mInference done 438/2088. 0.4303 s / img. ETA=0:15:33
[32m[11/11 07:51:38 d2.evaluation.evaluator]: [0mInference done 446/2088. 0.4321 s / img. ETA=0:15:30
[32m[11/11 07:51:43 d2.evaluation.evaluator]: [0mInference done 455/2088. 0.4333 s / img. ETA=0:15:26
[32m[11/11 07:51:49 d2.evaluation.evaluator]: [0mInference done 464/2088. 0.4345 s / img. ETA=0:15:22
[32m[11/11 07:51:54 d2.evaluation.evaluator]: [0mInference done 472/2088. 0.4369 s / img. ETA=0:15:20
[32m[11/11 07:51:59 d2.evaluation.evaluator]: [0mInference done 481/2088. 0.4379 s / img. ETA=0:15:16
[32m[11/11 07:52:05 d2.evaluation.evaluator]: [0mInference done 490/2088. 0.4392 s / img. ETA=0:15:12
[32m[11/11 07:52:11 d2.evaluation.evaluator]: [0mInference done 499/2088. 0.4403 s / img. ETA=0:15:09
[32m[11/11 07:52:16 d2.evaluation.evaluator]: [0mInference done 505/2088. 0.4414 s / img. ETA=0:15:11
[32m[11/11 07:52:21 d2.evaluation.evaluator]: [0mInference done 511/2088. 0.4429 s / img. ETA=0:15:14
[32m[11/11 07:52:26 d2.evaluation.evaluator]: [0mInference done 517/2088. 0.4443 s / img. ETA=0:15:16
[32m[11/11 07:52:32 d2.evaluation.evaluator]: [0mInference done 523/2088. 0.4453 s / img. ETA=0:15:17
[32m[11/11 07:52:37 d2.evaluation.evaluator]: [0mInference done 529/2088. 0.4466 s / img. ETA=0:15:19
[32m[11/11 07:52:42 d2.evaluation.evaluator]: [0mInference done 535/2088. 0.4478 s / img. ETA=0:15:20
[32m[11/11 07:52:47 d2.evaluation.evaluator]: [0mInference done 541/2088. 0.4487 s / img. ETA=0:15:21
[32m[11/11 07:52:53 d2.evaluation.evaluator]: [0mInference done 548/2088. 0.4501 s / img. ETA=0:15:21
[32m[11/11 07:52:58 d2.evaluation.evaluator]: [0mInference done 554/2088. 0.4515 s / img. ETA=0:15:23
[32m[11/11 07:53:04 d2.evaluation.evaluator]: [0mInference done 560/2088. 0.4527 s / img. ETA=0:15:24
[32m[11/11 07:53:09 d2.evaluation.evaluator]: [0mInference done 566/2088. 0.4536 s / img. ETA=0:15:25
[32m[11/11 07:53:14 d2.evaluation.evaluator]: [0mInference done 572/2088. 0.4546 s / img. ETA=0:15:25
[32m[11/11 07:53:20 d2.evaluation.evaluator]: [0mInference done 579/2088. 0.4551 s / img. ETA=0:15:25
[32m[11/11 07:53:25 d2.evaluation.evaluator]: [0mInference done 585/2088. 0.4559 s / img. ETA=0:15:25
[32m[11/11 07:53:30 d2.evaluation.evaluator]: [0mInference done 591/2088. 0.4568 s / img. ETA=0:15:25
[32m[11/11 07:53:36 d2.evaluation.evaluator]: [0mInference done 597/2088. 0.4577 s / img. ETA=0:15:26
[32m[11/11 07:53:41 d2.evaluation.evaluator]: [0mInference done 603/2088. 0.4586 s / img. ETA=0:15:25
[32m[11/11 07:53:46 d2.evaluation.evaluator]: [0mInference done 609/2088. 0.4594 s / img. ETA=0:15:25
[32m[11/11 07:53:51 d2.evaluation.evaluator]: [0mInference done 615/2088. 0.4603 s / img. ETA=0:15:25
[32m[11/11 07:53:56 d2.evaluation.evaluator]: [0mInference done 621/2088. 0.4612 s / img. ETA=0:15:24
[32m[11/11 07:54:01 d2.evaluation.evaluator]: [0mInference done 627/2088. 0.4619 s / img. ETA=0:15:24
[32m[11/11 07:54:07 d2.evaluation.evaluator]: [0mInference done 633/2088. 0.4629 s / img. ETA=0:15:24
[32m[11/11 07:54:12 d2.evaluation.evaluator]: [0mInference done 640/2088. 0.4635 s / img. ETA=0:15:22
[32m[11/11 07:54:18 d2.evaluation.evaluator]: [0mInference done 650/2088. 0.4636 s / img. ETA=0:15:13
[32m[11/11 07:54:23 d2.evaluation.evaluator]: [0mInference done 659/2088. 0.4644 s / img. ETA=0:15:07
[32m[11/11 07:54:28 d2.evaluation.evaluator]: [0mInference done 668/2088. 0.4652 s / img. ETA=0:15:00
[32m[11/11 07:54:34 d2.evaluation.evaluator]: [0mInference done 677/2088. 0.4657 s / img. ETA=0:14:54
[32m[11/11 07:54:39 d2.evaluation.evaluator]: [0mInference done 686/2088. 0.4662 s / img. ETA=0:14:47
[32m[11/11 07:54:44 d2.evaluation.evaluator]: [0mInference done 695/2088. 0.4669 s / img. ETA=0:14:41
[32m[11/11 07:54:50 d2.evaluation.evaluator]: [0mInference done 704/2088. 0.4673 s / img. ETA=0:14:34
[32m[11/11 07:54:55 d2.evaluation.evaluator]: [0mInference done 713/2088. 0.4679 s / img. ETA=0:14:28
[32m[11/11 07:55:00 d2.evaluation.evaluator]: [0mInference done 723/2088. 0.4679 s / img. ETA=0:14:20
[32m[11/11 07:55:06 d2.evaluation.evaluator]: [0mInference done 732/2088. 0.4684 s / img. ETA=0:14:13
[32m[11/11 07:55:11 d2.evaluation.evaluator]: [0mInference done 741/2088. 0.4684 s / img. ETA=0:14:07
[32m[11/11 07:55:16 d2.evaluation.evaluator]: [0mInference done 750/2088. 0.4693 s / img. ETA=0:14:01
[32m[11/11 07:55:22 d2.evaluation.evaluator]: [0mInference done 759/2088. 0.4699 s / img. ETA=0:13:55
[32m[11/11 07:55:27 d2.evaluation.evaluator]: [0mInference done 768/2088. 0.4705 s / img. ETA=0:13:49
[32m[11/11 07:55:32 d2.evaluation.evaluator]: [0mInference done 777/2088. 0.4710 s / img. ETA=0:13:42
[32m[11/11 07:55:38 d2.evaluation.evaluator]: [0mInference done 786/2088. 0.4714 s / img. ETA=0:13:36
[32m[11/11 07:55:43 d2.evaluation.evaluator]: [0mInference done 795/2088. 0.4719 s / img. ETA=0:13:30
[32m[11/11 07:55:48 d2.evaluation.evaluator]: [0mInference done 804/2088. 0.4726 s / img. ETA=0:13:24
[32m[11/11 07:55:54 d2.evaluation.evaluator]: [0mInference done 813/2088. 0.4729 s / img. ETA=0:13:18
[32m[11/11 07:55:59 d2.evaluation.evaluator]: [0mInference done 822/2088. 0.4736 s / img. ETA=0:13:12
[32m[11/11 07:56:05 d2.evaluation.evaluator]: [0mInference done 831/2088. 0.4739 s / img. ETA=0:13:06
[32m[11/11 07:56:10 d2.evaluation.evaluator]: [0mInference done 840/2088. 0.4743 s / img. ETA=0:13:00
[32m[11/11 07:56:15 d2.evaluation.evaluator]: [0mInference done 849/2088. 0.4745 s / img. ETA=0:12:54
[32m[11/11 07:56:21 d2.evaluation.evaluator]: [0mInference done 858/2088. 0.4752 s / img. ETA=0:12:48
[32m[11/11 07:56:26 d2.evaluation.evaluator]: [0mInference done 865/2088. 0.4754 s / img. ETA=0:12:44
[32m[11/11 07:56:31 d2.evaluation.evaluator]: [0mInference done 871/2088. 0.4759 s / img. ETA=0:12:43
[32m[11/11 07:56:36 d2.evaluation.evaluator]: [0mInference done 877/2088. 0.4764 s / img. ETA=0:12:41
[32m[11/11 07:56:42 d2.evaluation.evaluator]: [0mInference done 883/2088. 0.4770 s / img. ETA=0:12:40
[32m[11/11 07:56:48 d2.evaluation.evaluator]: [0mInference done 890/2088. 0.4775 s / img. ETA=0:12:37
[32m[11/11 07:56:53 d2.evaluation.evaluator]: [0mInference done 897/2088. 0.4777 s / img. ETA=0:12:35
[32m[11/11 07:56:59 d2.evaluation.evaluator]: [0mInference done 903/2088. 0.4780 s / img. ETA=0:12:33
[32m[11/11 07:57:04 d2.evaluation.evaluator]: [0mInference done 909/2088. 0.4784 s / img. ETA=0:12:31
[32m[11/11 07:57:09 d2.evaluation.evaluator]: [0mInference done 915/2088. 0.4789 s / img. ETA=0:12:29
[32m[11/11 07:57:15 d2.evaluation.evaluator]: [0mInference done 921/2088. 0.4790 s / img. ETA=0:12:27
[32m[11/11 07:57:20 d2.evaluation.evaluator]: [0mInference done 927/2088. 0.4798 s / img. ETA=0:12:25
[32m[11/11 07:57:25 d2.evaluation.evaluator]: [0mInference done 933/2088. 0.4803 s / img. ETA=0:12:23
[32m[11/11 07:57:31 d2.evaluation.evaluator]: [0mInference done 939/2088. 0.4807 s / img. ETA=0:12:21
[32m[11/11 07:57:36 d2.evaluation.evaluator]: [0mInference done 945/2088. 0.4811 s / img. ETA=0:12:19
[32m[11/11 07:57:41 d2.evaluation.evaluator]: [0mInference done 951/2088. 0.4815 s / img. ETA=0:12:16
[32m[11/11 07:57:46 d2.evaluation.evaluator]: [0mInference done 957/2088. 0.4817 s / img. ETA=0:12:14
[32m[11/11 07:57:51 d2.evaluation.evaluator]: [0mInference done 963/2088. 0.4819 s / img. ETA=0:12:11
[32m[11/11 07:57:56 d2.evaluation.evaluator]: [0mInference done 969/2088. 0.4823 s / img. ETA=0:12:09
[32m[11/11 07:58:02 d2.evaluation.evaluator]: [0mInference done 975/2088. 0.4826 s / img. ETA=0:12:07
[32m[11/11 07:58:07 d2.evaluation.evaluator]: [0mInference done 982/2088. 0.4828 s / img. ETA=0:12:03
[32m[11/11 07:58:12 d2.evaluation.evaluator]: [0mInference done 991/2088. 0.4833 s / img. ETA=0:11:57
[32m[11/11 07:58:18 d2.evaluation.evaluator]: [0mInference done 1000/2088. 0.4832 s / img. ETA=0:11:50
[32m[11/11 07:58:23 d2.evaluation.evaluator]: [0mInference done 1008/2088. 0.4837 s / img. ETA=0:11:45
[32m[11/11 07:58:28 d2.evaluation.evaluator]: [0mInference done 1017/2088. 0.4836 s / img. ETA=0:11:38
[32m[11/11 07:58:33 d2.evaluation.evaluator]: [0mInference done 1025/2088. 0.4840 s / img. ETA=0:11:33
[32m[11/11 07:58:38 d2.evaluation.evaluator]: [0mInference done 1034/2088. 0.4839 s / img. ETA=0:11:26
[32m[11/11 07:58:43 d2.evaluation.evaluator]: [0mInference done 1042/2088. 0.4843 s / img. ETA=0:11:21
[32m[11/11 07:58:49 d2.evaluation.evaluator]: [0mInference done 1051/2088. 0.4846 s / img. ETA=0:11:15
[32m[11/11 07:58:54 d2.evaluation.evaluator]: [0mInference done 1059/2088. 0.4851 s / img. ETA=0:11:09
[32m[11/11 07:59:00 d2.evaluation.evaluator]: [0mInference done 1068/2088. 0.4853 s / img. ETA=0:11:03
[32m[11/11 07:59:05 d2.evaluation.evaluator]: [0mInference done 1077/2088. 0.4856 s / img. ETA=0:10:57
[32m[11/11 07:59:11 d2.evaluation.evaluator]: [0mInference done 1086/2088. 0.4857 s / img. ETA=0:10:51
[32m[11/11 07:59:16 d2.evaluation.evaluator]: [0mInference done 1095/2088. 0.4860 s / img. ETA=0:10:45
[32m[11/11 07:59:21 d2.evaluation.evaluator]: [0mInference done 1104/2088. 0.4859 s / img. ETA=0:10:38
[32m[11/11 07:59:27 d2.evaluation.evaluator]: [0mInference done 1113/2088. 0.4862 s / img. ETA=0:10:32
[32m[11/11 07:59:33 d2.evaluation.evaluator]: [0mInference done 1122/2088. 0.4865 s / img. ETA=0:10:26
[32m[11/11 07:59:38 d2.evaluation.evaluator]: [0mInference done 1131/2088. 0.4863 s / img. ETA=0:10:20
[32m[11/11 07:59:43 d2.evaluation.evaluator]: [0mInference done 1140/2088. 0.4866 s / img. ETA=0:10:14
[32m[11/11 07:59:48 d2.evaluation.evaluator]: [0mInference done 1149/2088. 0.4865 s / img. ETA=0:10:07
[32m[11/11 07:59:54 d2.evaluation.evaluator]: [0mInference done 1158/2088. 0.4868 s / img. ETA=0:10:01
[32m[11/11 07:59:59 d2.evaluation.evaluator]: [0mInference done 1167/2088. 0.4865 s / img. ETA=0:09:55
[32m[11/11 08:00:04 d2.evaluation.evaluator]: [0mInference done 1175/2088. 0.4868 s / img. ETA=0:09:50
[32m[11/11 08:00:09 d2.evaluation.evaluator]: [0mInference done 1184/2088. 0.4866 s / img. ETA=0:09:43
[32m[11/11 08:00:15 d2.evaluation.evaluator]: [0mInference done 1193/2088. 0.4869 s / img. ETA=0:09:37
[32m[11/11 08:00:20 d2.evaluation.evaluator]: [0mInference done 1202/2088. 0.4867 s / img. ETA=0:09:31
[32m[11/11 08:00:25 d2.evaluation.evaluator]: [0mInference done 1211/2088. 0.4865 s / img. ETA=0:09:25
[32m[11/11 08:00:31 d2.evaluation.evaluator]: [0mInference done 1220/2088. 0.4869 s / img. ETA=0:09:19
[32m[11/11 08:00:36 d2.evaluation.evaluator]: [0mInference done 1229/2088. 0.4868 s / img. ETA=0:09:13
[32m[11/11 08:00:41 d2.evaluation.evaluator]: [0mInference done 1238/2088. 0.4870 s / img. ETA=0:09:06
[32m[11/11 08:00:47 d2.evaluation.evaluator]: [0mInference done 1248/2088. 0.4868 s / img. ETA=0:09:00
[32m[11/11 08:00:52 d2.evaluation.evaluator]: [0mInference done 1257/2088. 0.4868 s / img. ETA=0:08:53
[32m[11/11 08:00:58 d2.evaluation.evaluator]: [0mInference done 1266/2088. 0.4870 s / img. ETA=0:08:48
[32m[11/11 08:01:03 d2.evaluation.evaluator]: [0mInference done 1275/2088. 0.4873 s / img. ETA=0:08:42
[32m[11/11 08:01:09 d2.evaluation.evaluator]: [0mInference done 1284/2088. 0.4873 s / img. ETA=0:08:36
[32m[11/11 08:01:14 d2.evaluation.evaluator]: [0mInference done 1292/2088. 0.4875 s / img. ETA=0:08:30
[32m[11/11 08:01:19 d2.evaluation.evaluator]: [0mInference done 1301/2088. 0.4878 s / img. ETA=0:08:25
[32m[11/11 08:01:25 d2.evaluation.evaluator]: [0mInference done 1310/2088. 0.4877 s / img. ETA=0:08:18
[32m[11/11 08:01:30 d2.evaluation.evaluator]: [0mInference done 1318/2088. 0.4880 s / img. ETA=0:08:13
[32m[11/11 08:01:35 d2.evaluation.evaluator]: [0mInference done 1327/2088. 0.4878 s / img. ETA=0:08:07
[32m[11/11 08:01:41 d2.evaluation.evaluator]: [0mInference done 1336/2088. 0.4881 s / img. ETA=0:08:01
[32m[11/11 08:01:46 d2.evaluation.evaluator]: [0mInference done 1345/2088. 0.4883 s / img. ETA=0:07:55
[32m[11/11 08:01:51 d2.evaluation.evaluator]: [0mInference done 1354/2088. 0.4882 s / img. ETA=0:07:49
[32m[11/11 08:01:56 d2.evaluation.evaluator]: [0mInference done 1363/2088. 0.4881 s / img. ETA=0:07:43
[32m[11/11 08:02:01 d2.evaluation.evaluator]: [0mInference done 1371/2088. 0.4884 s / img. ETA=0:07:38
[32m[11/11 08:02:06 d2.evaluation.evaluator]: [0mInference done 1380/2088. 0.4882 s / img. ETA=0:07:32
[32m[11/11 08:02:12 d2.evaluation.evaluator]: [0mInference done 1388/2088. 0.4884 s / img. ETA=0:07:27
[32m[11/11 08:02:17 d2.evaluation.evaluator]: [0mInference done 1397/2088. 0.4882 s / img. ETA=0:07:21
[32m[11/11 08:02:22 d2.evaluation.evaluator]: [0mInference done 1406/2088. 0.4881 s / img. ETA=0:07:15
[32m[11/11 08:02:27 d2.evaluation.evaluator]: [0mInference done 1415/2088. 0.4883 s / img. ETA=0:07:09
[32m[11/11 08:02:32 d2.evaluation.evaluator]: [0mInference done 1423/2088. 0.4885 s / img. ETA=0:07:04
[32m[11/11 08:02:38 d2.evaluation.evaluator]: [0mInference done 1432/2088. 0.4886 s / img. ETA=0:06:58
[32m[11/11 08:02:43 d2.evaluation.evaluator]: [0mInference done 1441/2088. 0.4887 s / img. ETA=0:06:52
[32m[11/11 08:02:49 d2.evaluation.evaluator]: [0mInference done 1450/2088. 0.4888 s / img. ETA=0:06:46
[32m[11/11 08:02:54 d2.evaluation.evaluator]: [0mInference done 1457/2088. 0.4890 s / img. ETA=0:06:42
[32m[11/11 08:02:59 d2.evaluation.evaluator]: [0mInference done 1463/2088. 0.4893 s / img. ETA=0:06:39
[32m[11/11 08:03:05 d2.evaluation.evaluator]: [0mInference done 1469/2088. 0.4895 s / img. ETA=0:06:36
[32m[11/11 08:03:10 d2.evaluation.evaluator]: [0mInference done 1475/2088. 0.4897 s / img. ETA=0:06:32
[32m[11/11 08:03:15 d2.evaluation.evaluator]: [0mInference done 1481/2088. 0.4899 s / img. ETA=0:06:29
[32m[11/11 08:03:20 d2.evaluation.evaluator]: [0mInference done 1487/2088. 0.4902 s / img. ETA=0:06:26
[32m[11/11 08:03:25 d2.evaluation.evaluator]: [0mInference done 1493/2088. 0.4903 s / img. ETA=0:06:22
[32m[11/11 08:03:31 d2.evaluation.evaluator]: [0mInference done 1499/2088. 0.4906 s / img. ETA=0:06:19
[32m[11/11 08:03:36 d2.evaluation.evaluator]: [0mInference done 1505/2088. 0.4908 s / img. ETA=0:06:16
[32m[11/11 08:03:41 d2.evaluation.evaluator]: [0mInference done 1511/2088. 0.4911 s / img. ETA=0:06:12
[32m[11/11 08:03:47 d2.evaluation.evaluator]: [0mInference done 1517/2088. 0.4913 s / img. ETA=0:06:09
[32m[11/11 08:03:52 d2.evaluation.evaluator]: [0mInference done 1523/2088. 0.4916 s / img. ETA=0:06:06
[32m[11/11 08:03:57 d2.evaluation.evaluator]: [0mInference done 1529/2088. 0.4918 s / img. ETA=0:06:02
[32m[11/11 08:04:02 d2.evaluation.evaluator]: [0mInference done 1535/2088. 0.4920 s / img. ETA=0:05:59
[32m[11/11 08:04:07 d2.evaluation.evaluator]: [0mInference done 1541/2088. 0.4922 s / img. ETA=0:05:55
[32m[11/11 08:04:13 d2.evaluation.evaluator]: [0mInference done 1547/2088. 0.4924 s / img. ETA=0:05:52
[32m[11/11 08:04:18 d2.evaluation.evaluator]: [0mInference done 1553/2088. 0.4927 s / img. ETA=0:05:49
[32m[11/11 08:04:23 d2.evaluation.evaluator]: [0mInference done 1559/2088. 0.4928 s / img. ETA=0:05:45
[32m[11/11 08:04:28 d2.evaluation.evaluator]: [0mInference done 1565/2088. 0.4930 s / img. ETA=0:05:42
[32m[11/11 08:04:33 d2.evaluation.evaluator]: [0mInference done 1571/2088. 0.4931 s / img. ETA=0:05:38
[32m[11/11 08:04:39 d2.evaluation.evaluator]: [0mInference done 1577/2088. 0.4933 s / img. ETA=0:05:35
[32m[11/11 08:04:44 d2.evaluation.evaluator]: [0mInference done 1583/2088. 0.4935 s / img. ETA=0:05:31
[32m[11/11 08:04:50 d2.evaluation.evaluator]: [0mInference done 1589/2088. 0.4937 s / img. ETA=0:05:28
[32m[11/11 08:04:55 d2.evaluation.evaluator]: [0mInference done 1595/2088. 0.4940 s / img. ETA=0:05:24
[32m[11/11 08:05:00 d2.evaluation.evaluator]: [0mInference done 1601/2088. 0.4942 s / img. ETA=0:05:21
[32m[11/11 08:05:05 d2.evaluation.evaluator]: [0mInference done 1607/2088. 0.4944 s / img. ETA=0:05:17
[32m[11/11 08:05:11 d2.evaluation.evaluator]: [0mInference done 1613/2088. 0.4947 s / img. ETA=0:05:14
[32m[11/11 08:05:16 d2.evaluation.evaluator]: [0mInference done 1619/2088. 0.4948 s / img. ETA=0:05:10
[32m[11/11 08:05:21 d2.evaluation.evaluator]: [0mInference done 1628/2088. 0.4948 s / img. ETA=0:05:04
[32m[11/11 08:05:26 d2.evaluation.evaluator]: [0mInference done 1636/2088. 0.4950 s / img. ETA=0:04:58
[32m[11/11 08:05:31 d2.evaluation.evaluator]: [0mInference done 1645/2088. 0.4948 s / img. ETA=0:04:52
[32m[11/11 08:05:37 d2.evaluation.evaluator]: [0mInference done 1654/2088. 0.4949 s / img. ETA=0:04:46
[32m[11/11 08:05:42 d2.evaluation.evaluator]: [0mInference done 1663/2088. 0.4947 s / img. ETA=0:04:40
[32m[11/11 08:05:47 d2.evaluation.evaluator]: [0mInference done 1671/2088. 0.4949 s / img. ETA=0:04:35
[32m[11/11 08:05:53 d2.evaluation.evaluator]: [0mInference done 1680/2088. 0.4951 s / img. ETA=0:04:29
[32m[11/11 08:05:58 d2.evaluation.evaluator]: [0mInference done 1689/2088. 0.4950 s / img. ETA=0:04:23
[32m[11/11 08:06:04 d2.evaluation.evaluator]: [0mInference done 1698/2088. 0.4950 s / img. ETA=0:04:17
[32m[11/11 08:06:09 d2.evaluation.evaluator]: [0mInference done 1707/2088. 0.4949 s / img. ETA=0:04:10
[32m[11/11 08:06:14 d2.evaluation.evaluator]: [0mInference done 1716/2088. 0.4950 s / img. ETA=0:04:04
[32m[11/11 08:06:20 d2.evaluation.evaluator]: [0mInference done 1725/2088. 0.4951 s / img. ETA=0:03:58
[32m[11/11 08:06:25 d2.evaluation.evaluator]: [0mInference done 1733/2088. 0.4952 s / img. ETA=0:03:53
[32m[11/11 08:06:30 d2.evaluation.evaluator]: [0mInference done 1741/2088. 0.4954 s / img. ETA=0:03:48
[32m[11/11 08:06:35 d2.evaluation.evaluator]: [0mInference done 1749/2088. 0.4955 s / img. ETA=0:03:43
[32m[11/11 08:06:40 d2.evaluation.evaluator]: [0mInference done 1758/2088. 0.4953 s / img. ETA=0:03:36
[32m[11/11 08:06:45 d2.evaluation.evaluator]: [0mInference done 1766/2088. 0.4955 s / img. ETA=0:03:31
[32m[11/11 08:06:50 d2.evaluation.evaluator]: [0mInference done 1775/2088. 0.4954 s / img. ETA=0:03:25
[32m[11/11 08:06:56 d2.evaluation.evaluator]: [0mInference done 1784/2088. 0.4956 s / img. ETA=0:03:19
[32m[11/11 08:07:01 d2.evaluation.evaluator]: [0mInference done 1793/2088. 0.4957 s / img. ETA=0:03:13
[32m[11/11 08:07:07 d2.evaluation.evaluator]: [0mInference done 1802/2088. 0.4956 s / img. ETA=0:03:07
[32m[11/11 08:07:12 d2.evaluation.evaluator]: [0mInference done 1811/2088. 0.4956 s / img. ETA=0:03:01
[32m[11/11 08:07:17 d2.evaluation.evaluator]: [0mInference done 1820/2088. 0.4955 s / img. ETA=0:02:55
[32m[11/11 08:07:23 d2.evaluation.evaluator]: [0mInference done 1828/2088. 0.4958 s / img. ETA=0:02:50
[32m[11/11 08:07:28 d2.evaluation.evaluator]: [0mInference done 1837/2088. 0.4958 s / img. ETA=0:02:44
[32m[11/11 08:07:33 d2.evaluation.evaluator]: [0mInference done 1846/2088. 0.4957 s / img. ETA=0:02:38
[32m[11/11 08:07:39 d2.evaluation.evaluator]: [0mInference done 1855/2088. 0.4957 s / img. ETA=0:02:32
[32m[11/11 08:07:44 d2.evaluation.evaluator]: [0mInference done 1864/2088. 0.4957 s / img. ETA=0:02:26
[32m[11/11 08:07:50 d2.evaluation.evaluator]: [0mInference done 1873/2088. 0.4958 s / img. ETA=0:02:20
[32m[11/11 08:07:55 d2.evaluation.evaluator]: [0mInference done 1882/2088. 0.4959 s / img. ETA=0:02:14
[32m[11/11 08:08:01 d2.evaluation.evaluator]: [0mInference done 1891/2088. 0.4958 s / img. ETA=0:02:08
[32m[11/11 08:08:06 d2.evaluation.evaluator]: [0mInference done 1900/2088. 0.4959 s / img. ETA=0:02:02
[32m[11/11 08:08:12 d2.evaluation.evaluator]: [0mInference done 1909/2088. 0.4959 s / img. ETA=0:01:56
[32m[11/11 08:08:17 d2.evaluation.evaluator]: [0mInference done 1918/2088. 0.4959 s / img. ETA=0:01:51
[32m[11/11 08:08:22 d2.evaluation.evaluator]: [0mInference done 1926/2088. 0.4961 s / img. ETA=0:01:45
[32m[11/11 08:08:28 d2.evaluation.evaluator]: [0mInference done 1935/2088. 0.4961 s / img. ETA=0:01:39
[32m[11/11 08:08:33 d2.evaluation.evaluator]: [0mInference done 1943/2088. 0.4963 s / img. ETA=0:01:34
[32m[11/11 08:08:38 d2.evaluation.evaluator]: [0mInference done 1952/2088. 0.4962 s / img. ETA=0:01:28
[32m[11/11 08:08:44 d2.evaluation.evaluator]: [0mInference done 1961/2088. 0.4964 s / img. ETA=0:01:22
[32m[11/11 08:08:49 d2.evaluation.evaluator]: [0mInference done 1970/2088. 0.4963 s / img. ETA=0:01:16
[32m[11/11 08:08:54 d2.evaluation.evaluator]: [0mInference done 1979/2088. 0.4964 s / img. ETA=0:01:11
[32m[11/11 08:08:59 d2.evaluation.evaluator]: [0mInference done 1988/2088. 0.4964 s / img. ETA=0:01:05
[32m[11/11 08:09:05 d2.evaluation.evaluator]: [0mInference done 1997/2088. 0.4966 s / img. ETA=0:00:59
[32m[11/11 08:09:10 d2.evaluation.evaluator]: [0mInference done 2006/2088. 0.4965 s / img. ETA=0:00:53
[32m[11/11 08:09:16 d2.evaluation.evaluator]: [0mInference done 2016/2088. 0.4965 s / img. ETA=0:00:46
[32m[11/11 08:09:21 d2.evaluation.evaluator]: [0mInference done 2025/2088. 0.4965 s / img. ETA=0:00:40
[32m[11/11 08:09:26 d2.evaluation.evaluator]: [0mInference done 2034/2088. 0.4965 s / img. ETA=0:00:35
[32m[11/11 08:09:31 d2.evaluation.evaluator]: [0mInference done 2042/2088. 0.4967 s / img. ETA=0:00:29
[32m[11/11 08:09:37 d2.evaluation.evaluator]: [0mInference done 2052/2088. 0.4966 s / img. ETA=0:00:23
[32m[11/11 08:09:42 d2.evaluation.evaluator]: [0mInference done 2061/2088. 0.4967 s / img. ETA=0:00:17
[32m[11/11 08:09:48 d2.evaluation.evaluator]: [0mInference done 2071/2088. 0.4967 s / img. ETA=0:00:11
[32m[11/11 08:09:53 d2.evaluation.evaluator]: [0mInference done 2081/2088. 0.4966 s / img. ETA=0:00:04
[32m[11/11 08:09:57 d2.evaluation.evaluator]: [0mTotal inference time: 0:22:29.631885 (0.647927 s / img per device, on 1 devices)
[32m[11/11 08:09:57 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:17:14 (0.496568 s / img per device, on 1 devices)
[32m[11/11 08:09:58 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 08:09:58 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/inference/coco_instances_results.json
[32m[11/11 08:09:59 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.31s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 2.01 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.38 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.163
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.329
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.147
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.216
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.304
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.423
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.425
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.090
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.340
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.481
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 16.324 | 32.930 | 14.692 | 0.975 | 11.065 | 21.574 |
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 08:10:02 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP     | category   | AP     | category         | AP     |
|:------------|:-------|:-----------|:-------|:-----------------|:-------|
| backpac     | 15.581 | rop        | nan    | ven              | nan    |
| helme       | nan    | dril       | 11.008 | fire extinguishe | 34.700 |
| helmet-ligh | nan    | survivo    | 4.009  | cell phon        | nan    |
| cub         | nan    |            |        |                  |        |
[32m[11/11 08:10:02 d2.engine.defaults]: [0mEvaluation results for val_g_12 in csv format:
[32m[11/11 08:10:02 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 08:10:02 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 08:10:02 d2.evaluation.testing]: [0mcopypaste: 16.3243,32.9298,14.6925,0.9750,11.0651,21.5739
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
