Command Line Args: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/10 23:49:25 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/10 23:49:27 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA TITAN X (Pascal)
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/10 23:49:27 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_101_C4_1x_subt1.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/fsod/R_101_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_f_2',)"], resume=False)
[32m[11/10 23:49:27 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_101_C4_1x_subt1.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_101_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 1
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/1shot'

[32m[11/10 23:49:27 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_f_2',)
  TESTSHOTS: 1
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/fsod/R_101_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/1shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_a_0_1shot
  VIS_THRESH: 0.9
VERSION: 2
VIS_PERIOD: 0
[32m[11/10 23:49:27 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/config.yaml
[32m[11/10 23:49:34 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/10 23:49:34 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/fsod/R_101_C4_1x/model_final.pth ...
[32m[11/10 23:49:35 d2.data.datasets.coco]: [0mLoaded 2913 images in COCO format from datasets/SUBT/use/val_f_2/new_annotations/val_f_2.json
[32m[11/10 23:49:35 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 1454         |    rop     | 919          |      ven      | 1170         |
|    helme    | 1131         |    dril    | 517          | fire exting.. | 1436         |
| helmet-ligh | 25           |  survivo   | 447          |   cell phon   | 1            |
|     cub     | 390          |            |              |               |              |
|    total    | 7490         |            |              |               |              |[0m
[32m[11/10 23:49:35 d2.data.common]: [0mSerializing 2913 elements to byte tensors and concatenating them all ...
[32m[11/10 23:49:35 d2.data.common]: [0mSerialized dataset takes 0.82 MiB
[32m[11/10 23:49:35 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/10 23:49:35 d2.evaluation.evaluator]: [0mStart inference on 2913 images
[32m[11/10 23:49:42 d2.evaluation.evaluator]: [0mInference done 11/2913. 0.5381 s / img. ETA=0:28:48
[32m[11/10 23:49:48 d2.evaluation.evaluator]: [0mInference done 20/2913. 0.5409 s / img. ETA=0:29:07
[32m[11/10 23:49:53 d2.evaluation.evaluator]: [0mInference done 29/2913. 0.5430 s / img. ETA=0:28:57
[32m[11/10 23:49:59 d2.evaluation.evaluator]: [0mInference done 38/2913. 0.5436 s / img. ETA=0:28:58
[32m[11/10 23:50:04 d2.evaluation.evaluator]: [0mInference done 47/2913. 0.5449 s / img. ETA=0:28:55
[32m[11/10 23:50:10 d2.evaluation.evaluator]: [0mInference done 56/2913. 0.5462 s / img. ETA=0:28:54
[32m[11/10 23:50:15 d2.evaluation.evaluator]: [0mInference done 65/2913. 0.5465 s / img. ETA=0:28:50
[32m[11/10 23:50:21 d2.evaluation.evaluator]: [0mInference done 74/2913. 0.5461 s / img. ETA=0:28:44
[32m[11/10 23:50:26 d2.evaluation.evaluator]: [0mInference done 83/2913. 0.5460 s / img. ETA=0:28:37
[32m[11/10 23:50:32 d2.evaluation.evaluator]: [0mInference done 92/2913. 0.5464 s / img. ETA=0:28:33
[32m[11/10 23:50:37 d2.evaluation.evaluator]: [0mInference done 101/2913. 0.5467 s / img. ETA=0:28:31
[32m[11/10 23:50:43 d2.evaluation.evaluator]: [0mInference done 110/2913. 0.5465 s / img. ETA=0:28:25
[32m[11/10 23:50:48 d2.evaluation.evaluator]: [0mInference done 118/2913. 0.5455 s / img. ETA=0:28:28
[32m[11/10 23:50:53 d2.evaluation.evaluator]: [0mInference done 126/2913. 0.5445 s / img. ETA=0:28:30
[32m[11/10 23:50:58 d2.evaluation.evaluator]: [0mInference done 134/2913. 0.5438 s / img. ETA=0:28:33
[32m[11/10 23:51:04 d2.evaluation.evaluator]: [0mInference done 142/2913. 0.5435 s / img. ETA=0:28:35
[32m[11/10 23:51:09 d2.evaluation.evaluator]: [0mInference done 150/2913. 0.5430 s / img. ETA=0:28:36
[32m[11/10 23:51:14 d2.evaluation.evaluator]: [0mInference done 158/2913. 0.5425 s / img. ETA=0:28:35
[32m[11/10 23:51:19 d2.evaluation.evaluator]: [0mInference done 166/2913. 0.5419 s / img. ETA=0:28:34
[32m[11/10 23:51:25 d2.evaluation.evaluator]: [0mInference done 174/2913. 0.5415 s / img. ETA=0:28:33
[32m[11/10 23:51:30 d2.evaluation.evaluator]: [0mInference done 182/2913. 0.5410 s / img. ETA=0:28:31
[32m[11/10 23:51:35 d2.evaluation.evaluator]: [0mInference done 190/2913. 0.5408 s / img. ETA=0:28:29
[32m[11/10 23:51:40 d2.evaluation.evaluator]: [0mInference done 198/2913. 0.5406 s / img. ETA=0:28:28
[32m[11/10 23:51:46 d2.evaluation.evaluator]: [0mInference done 206/2913. 0.5402 s / img. ETA=0:28:26
[32m[11/10 23:51:51 d2.evaluation.evaluator]: [0mInference done 214/2913. 0.5399 s / img. ETA=0:28:23
[32m[11/10 23:51:56 d2.evaluation.evaluator]: [0mInference done 222/2913. 0.5396 s / img. ETA=0:28:20
[32m[11/10 23:52:01 d2.evaluation.evaluator]: [0mInference done 230/2913. 0.5393 s / img. ETA=0:28:16
[32m[11/10 23:52:06 d2.evaluation.evaluator]: [0mInference done 238/2913. 0.5392 s / img. ETA=0:28:13
[32m[11/10 23:52:12 d2.evaluation.evaluator]: [0mInference done 246/2913. 0.5389 s / img. ETA=0:28:09
[32m[11/10 23:52:17 d2.evaluation.evaluator]: [0mInference done 255/2913. 0.5392 s / img. ETA=0:28:02
[32m[11/10 23:52:23 d2.evaluation.evaluator]: [0mInference done 264/2913. 0.5395 s / img. ETA=0:27:54
[32m[11/10 23:52:28 d2.evaluation.evaluator]: [0mInference done 273/2913. 0.5397 s / img. ETA=0:27:46
[32m[11/10 23:52:33 d2.evaluation.evaluator]: [0mInference done 282/2913. 0.5399 s / img. ETA=0:27:38
[32m[11/10 23:52:39 d2.evaluation.evaluator]: [0mInference done 291/2913. 0.5400 s / img. ETA=0:27:31
[32m[11/10 23:52:44 d2.evaluation.evaluator]: [0mInference done 299/2913. 0.5403 s / img. ETA=0:27:25
[32m[11/10 23:52:49 d2.evaluation.evaluator]: [0mInference done 308/2913. 0.5405 s / img. ETA=0:27:18
[32m[11/10 23:52:55 d2.evaluation.evaluator]: [0mInference done 317/2913. 0.5406 s / img. ETA=0:27:11
[32m[11/10 23:53:00 d2.evaluation.evaluator]: [0mInference done 326/2913. 0.5407 s / img. ETA=0:27:04
[32m[11/10 23:53:06 d2.evaluation.evaluator]: [0mInference done 335/2913. 0.5409 s / img. ETA=0:26:57
[32m[11/10 23:53:12 d2.evaluation.evaluator]: [0mInference done 344/2913. 0.5412 s / img. ETA=0:26:51
[32m[11/10 23:53:17 d2.evaluation.evaluator]: [0mInference done 353/2913. 0.5414 s / img. ETA=0:26:44
[32m[11/10 23:53:23 d2.evaluation.evaluator]: [0mInference done 362/2913. 0.5416 s / img. ETA=0:26:38
[32m[11/10 23:53:28 d2.evaluation.evaluator]: [0mInference done 371/2913. 0.5418 s / img. ETA=0:26:32
[32m[11/10 23:53:34 d2.evaluation.evaluator]: [0mInference done 380/2913. 0.5420 s / img. ETA=0:26:26
[32m[11/10 23:53:39 d2.evaluation.evaluator]: [0mInference done 389/2913. 0.5423 s / img. ETA=0:26:19
[32m[11/10 23:53:45 d2.evaluation.evaluator]: [0mInference done 398/2913. 0.5425 s / img. ETA=0:26:13
[32m[11/10 23:53:50 d2.evaluation.evaluator]: [0mInference done 406/2913. 0.5426 s / img. ETA=0:26:08
[32m[11/10 23:53:55 d2.evaluation.evaluator]: [0mInference done 415/2913. 0.5427 s / img. ETA=0:26:02
[32m[11/10 23:54:01 d2.evaluation.evaluator]: [0mInference done 424/2913. 0.5428 s / img. ETA=0:25:55
[32m[11/10 23:54:06 d2.evaluation.evaluator]: [0mInference done 433/2913. 0.5430 s / img. ETA=0:25:49
[32m[11/10 23:54:12 d2.evaluation.evaluator]: [0mInference done 442/2913. 0.5431 s / img. ETA=0:25:42
[32m[11/10 23:54:17 d2.evaluation.evaluator]: [0mInference done 451/2913. 0.5431 s / img. ETA=0:25:36
[32m[11/10 23:54:23 d2.evaluation.evaluator]: [0mInference done 460/2913. 0.5432 s / img. ETA=0:25:29
[32m[11/10 23:54:28 d2.evaluation.evaluator]: [0mInference done 469/2913. 0.5433 s / img. ETA=0:25:23
[32m[11/10 23:54:34 d2.evaluation.evaluator]: [0mInference done 478/2913. 0.5434 s / img. ETA=0:25:17
[32m[11/10 23:54:39 d2.evaluation.evaluator]: [0mInference done 487/2913. 0.5434 s / img. ETA=0:25:11
[32m[11/10 23:54:45 d2.evaluation.evaluator]: [0mInference done 496/2913. 0.5435 s / img. ETA=0:25:05
[32m[11/10 23:54:50 d2.evaluation.evaluator]: [0mInference done 505/2913. 0.5436 s / img. ETA=0:24:59
[32m[11/10 23:54:55 d2.evaluation.evaluator]: [0mInference done 513/2913. 0.5436 s / img. ETA=0:24:54
[32m[11/10 23:55:01 d2.evaluation.evaluator]: [0mInference done 522/2913. 0.5436 s / img. ETA=0:24:48
[32m[11/10 23:55:06 d2.evaluation.evaluator]: [0mInference done 531/2913. 0.5437 s / img. ETA=0:24:41
[32m[11/10 23:55:12 d2.evaluation.evaluator]: [0mInference done 540/2913. 0.5438 s / img. ETA=0:24:35
[32m[11/10 23:55:17 d2.evaluation.evaluator]: [0mInference done 549/2913. 0.5438 s / img. ETA=0:24:29
[32m[11/10 23:55:22 d2.evaluation.evaluator]: [0mInference done 558/2913. 0.5438 s / img. ETA=0:24:23
[32m[11/10 23:55:28 d2.evaluation.evaluator]: [0mInference done 567/2913. 0.5439 s / img. ETA=0:24:17
[32m[11/10 23:55:34 d2.evaluation.evaluator]: [0mInference done 576/2913. 0.5439 s / img. ETA=0:24:11
[32m[11/10 23:55:39 d2.evaluation.evaluator]: [0mInference done 585/2913. 0.5440 s / img. ETA=0:24:05
[32m[11/10 23:55:45 d2.evaluation.evaluator]: [0mInference done 594/2913. 0.5440 s / img. ETA=0:24:00
[32m[11/10 23:55:50 d2.evaluation.evaluator]: [0mInference done 603/2913. 0.5441 s / img. ETA=0:23:53
[32m[11/10 23:55:56 d2.evaluation.evaluator]: [0mInference done 612/2913. 0.5441 s / img. ETA=0:23:48
[32m[11/10 23:56:01 d2.evaluation.evaluator]: [0mInference done 621/2913. 0.5441 s / img. ETA=0:23:41
[32m[11/10 23:56:07 d2.evaluation.evaluator]: [0mInference done 630/2913. 0.5442 s / img. ETA=0:23:36
[32m[11/10 23:56:12 d2.evaluation.evaluator]: [0mInference done 639/2913. 0.5442 s / img. ETA=0:23:30
[32m[11/10 23:56:18 d2.evaluation.evaluator]: [0mInference done 648/2913. 0.5442 s / img. ETA=0:23:24
[32m[11/10 23:56:23 d2.evaluation.evaluator]: [0mInference done 657/2913. 0.5443 s / img. ETA=0:23:18
[32m[11/10 23:56:29 d2.evaluation.evaluator]: [0mInference done 666/2913. 0.5443 s / img. ETA=0:23:13
[32m[11/10 23:56:34 d2.evaluation.evaluator]: [0mInference done 675/2913. 0.5443 s / img. ETA=0:23:07
[32m[11/10 23:56:40 d2.evaluation.evaluator]: [0mInference done 684/2913. 0.5444 s / img. ETA=0:23:01
[32m[11/10 23:56:45 d2.evaluation.evaluator]: [0mInference done 693/2913. 0.5443 s / img. ETA=0:22:55
[32m[11/10 23:56:51 d2.evaluation.evaluator]: [0mInference done 702/2913. 0.5442 s / img. ETA=0:22:49
[32m[11/10 23:56:56 d2.evaluation.evaluator]: [0mInference done 711/2913. 0.5442 s / img. ETA=0:22:43
[32m[11/10 23:57:02 d2.evaluation.evaluator]: [0mInference done 720/2913. 0.5442 s / img. ETA=0:22:37
[32m[11/10 23:57:07 d2.evaluation.evaluator]: [0mInference done 729/2913. 0.5442 s / img. ETA=0:22:31
[32m[11/10 23:57:12 d2.evaluation.evaluator]: [0mInference done 738/2913. 0.5442 s / img. ETA=0:22:25
[32m[11/10 23:57:18 d2.evaluation.evaluator]: [0mInference done 747/2913. 0.5441 s / img. ETA=0:22:19
[32m[11/10 23:57:23 d2.evaluation.evaluator]: [0mInference done 756/2913. 0.5441 s / img. ETA=0:22:13
[32m[11/10 23:57:29 d2.evaluation.evaluator]: [0mInference done 765/2913. 0.5441 s / img. ETA=0:22:07
[32m[11/10 23:57:34 d2.evaluation.evaluator]: [0mInference done 774/2913. 0.5440 s / img. ETA=0:22:01
[32m[11/10 23:57:39 d2.evaluation.evaluator]: [0mInference done 783/2913. 0.5440 s / img. ETA=0:21:55
[32m[11/10 23:57:45 d2.evaluation.evaluator]: [0mInference done 792/2913. 0.5440 s / img. ETA=0:21:50
[32m[11/10 23:57:51 d2.evaluation.evaluator]: [0mInference done 801/2913. 0.5441 s / img. ETA=0:21:44
[32m[11/10 23:57:56 d2.evaluation.evaluator]: [0mInference done 810/2913. 0.5441 s / img. ETA=0:21:38
[32m[11/10 23:58:02 d2.evaluation.evaluator]: [0mInference done 819/2913. 0.5441 s / img. ETA=0:21:33
[32m[11/10 23:58:07 d2.evaluation.evaluator]: [0mInference done 828/2913. 0.5441 s / img. ETA=0:21:27
[32m[11/10 23:58:13 d2.evaluation.evaluator]: [0mInference done 837/2913. 0.5441 s / img. ETA=0:21:21
[32m[11/10 23:58:18 d2.evaluation.evaluator]: [0mInference done 846/2913. 0.5440 s / img. ETA=0:21:15
[32m[11/10 23:58:23 d2.evaluation.evaluator]: [0mInference done 855/2913. 0.5440 s / img. ETA=0:21:10
[32m[11/10 23:58:29 d2.evaluation.evaluator]: [0mInference done 864/2913. 0.5440 s / img. ETA=0:21:04
[32m[11/10 23:58:34 d2.evaluation.evaluator]: [0mInference done 873/2913. 0.5440 s / img. ETA=0:20:58
[32m[11/10 23:58:40 d2.evaluation.evaluator]: [0mInference done 882/2913. 0.5439 s / img. ETA=0:20:52
[32m[11/10 23:58:45 d2.evaluation.evaluator]: [0mInference done 890/2913. 0.5439 s / img. ETA=0:20:47
[32m[11/10 23:58:50 d2.evaluation.evaluator]: [0mInference done 899/2913. 0.5440 s / img. ETA=0:20:42
[32m[11/10 23:58:56 d2.evaluation.evaluator]: [0mInference done 908/2913. 0.5440 s / img. ETA=0:20:36
[32m[11/10 23:59:01 d2.evaluation.evaluator]: [0mInference done 917/2913. 0.5440 s / img. ETA=0:20:31
[32m[11/10 23:59:07 d2.evaluation.evaluator]: [0mInference done 926/2913. 0.5441 s / img. ETA=0:20:25
[32m[11/10 23:59:12 d2.evaluation.evaluator]: [0mInference done 935/2913. 0.5441 s / img. ETA=0:20:19
[32m[11/10 23:59:18 d2.evaluation.evaluator]: [0mInference done 944/2913. 0.5442 s / img. ETA=0:20:13
[32m[11/10 23:59:23 d2.evaluation.evaluator]: [0mInference done 953/2913. 0.5442 s / img. ETA=0:20:08
[32m[11/10 23:59:29 d2.evaluation.evaluator]: [0mInference done 962/2913. 0.5441 s / img. ETA=0:20:02
[32m[11/10 23:59:34 d2.evaluation.evaluator]: [0mInference done 971/2913. 0.5441 s / img. ETA=0:19:56
[32m[11/10 23:59:40 d2.evaluation.evaluator]: [0mInference done 980/2913. 0.5440 s / img. ETA=0:19:50
[32m[11/10 23:59:45 d2.evaluation.evaluator]: [0mInference done 989/2913. 0.5440 s / img. ETA=0:19:45
[32m[11/10 23:59:51 d2.evaluation.evaluator]: [0mInference done 998/2913. 0.5440 s / img. ETA=0:19:39
[32m[11/10 23:59:56 d2.evaluation.evaluator]: [0mInference done 1007/2913. 0.5440 s / img. ETA=0:19:33
[32m[11/11 00:00:01 d2.evaluation.evaluator]: [0mInference done 1016/2913. 0.5439 s / img. ETA=0:19:27
[32m[11/11 00:00:07 d2.evaluation.evaluator]: [0mInference done 1025/2913. 0.5440 s / img. ETA=0:19:22
[32m[11/11 00:00:12 d2.evaluation.evaluator]: [0mInference done 1034/2913. 0.5440 s / img. ETA=0:19:16
[32m[11/11 00:00:18 d2.evaluation.evaluator]: [0mInference done 1043/2913. 0.5440 s / img. ETA=0:19:10
[32m[11/11 00:00:23 d2.evaluation.evaluator]: [0mInference done 1052/2913. 0.5439 s / img. ETA=0:19:05
[32m[11/11 00:00:29 d2.evaluation.evaluator]: [0mInference done 1061/2913. 0.5439 s / img. ETA=0:18:59
[32m[11/11 00:00:34 d2.evaluation.evaluator]: [0mInference done 1070/2913. 0.5439 s / img. ETA=0:18:53
[32m[11/11 00:00:40 d2.evaluation.evaluator]: [0mInference done 1079/2913. 0.5438 s / img. ETA=0:18:48
[32m[11/11 00:00:45 d2.evaluation.evaluator]: [0mInference done 1088/2913. 0.5438 s / img. ETA=0:18:42
[32m[11/11 00:00:51 d2.evaluation.evaluator]: [0mInference done 1097/2913. 0.5437 s / img. ETA=0:18:37
[32m[11/11 00:00:56 d2.evaluation.evaluator]: [0mInference done 1106/2913. 0.5437 s / img. ETA=0:18:31
[32m[11/11 00:01:02 d2.evaluation.evaluator]: [0mInference done 1115/2913. 0.5437 s / img. ETA=0:18:25
[32m[11/11 00:01:07 d2.evaluation.evaluator]: [0mInference done 1124/2913. 0.5437 s / img. ETA=0:18:20
[32m[11/11 00:01:13 d2.evaluation.evaluator]: [0mInference done 1133/2913. 0.5437 s / img. ETA=0:18:14
[32m[11/11 00:01:18 d2.evaluation.evaluator]: [0mInference done 1142/2913. 0.5437 s / img. ETA=0:18:08
[32m[11/11 00:01:24 d2.evaluation.evaluator]: [0mInference done 1151/2913. 0.5437 s / img. ETA=0:18:03
[32m[11/11 00:01:29 d2.evaluation.evaluator]: [0mInference done 1160/2913. 0.5437 s / img. ETA=0:17:57
[32m[11/11 00:01:34 d2.evaluation.evaluator]: [0mInference done 1169/2913. 0.5437 s / img. ETA=0:17:52
[32m[11/11 00:01:40 d2.evaluation.evaluator]: [0mInference done 1178/2913. 0.5437 s / img. ETA=0:17:46
[32m[11/11 00:01:46 d2.evaluation.evaluator]: [0mInference done 1187/2913. 0.5437 s / img. ETA=0:17:41
[32m[11/11 00:01:51 d2.evaluation.evaluator]: [0mInference done 1196/2913. 0.5436 s / img. ETA=0:17:35
[32m[11/11 00:01:56 d2.evaluation.evaluator]: [0mInference done 1205/2913. 0.5436 s / img. ETA=0:17:29
[32m[11/11 00:02:02 d2.evaluation.evaluator]: [0mInference done 1214/2913. 0.5437 s / img. ETA=0:17:24
[32m[11/11 00:02:08 d2.evaluation.evaluator]: [0mInference done 1223/2913. 0.5437 s / img. ETA=0:17:18
[32m[11/11 00:02:13 d2.evaluation.evaluator]: [0mInference done 1232/2913. 0.5437 s / img. ETA=0:17:13
[32m[11/11 00:02:19 d2.evaluation.evaluator]: [0mInference done 1241/2913. 0.5437 s / img. ETA=0:17:07
[32m[11/11 00:02:24 d2.evaluation.evaluator]: [0mInference done 1250/2913. 0.5437 s / img. ETA=0:17:02
[32m[11/11 00:02:30 d2.evaluation.evaluator]: [0mInference done 1259/2913. 0.5438 s / img. ETA=0:16:56
[32m[11/11 00:02:35 d2.evaluation.evaluator]: [0mInference done 1268/2913. 0.5438 s / img. ETA=0:16:50
[32m[11/11 00:02:40 d2.evaluation.evaluator]: [0mInference done 1277/2913. 0.5437 s / img. ETA=0:16:45
[32m[11/11 00:02:46 d2.evaluation.evaluator]: [0mInference done 1286/2913. 0.5437 s / img. ETA=0:16:39
[32m[11/11 00:02:51 d2.evaluation.evaluator]: [0mInference done 1295/2913. 0.5437 s / img. ETA=0:16:33
[32m[11/11 00:02:57 d2.evaluation.evaluator]: [0mInference done 1304/2913. 0.5437 s / img. ETA=0:16:28
[32m[11/11 00:03:02 d2.evaluation.evaluator]: [0mInference done 1313/2913. 0.5436 s / img. ETA=0:16:22
[32m[11/11 00:03:08 d2.evaluation.evaluator]: [0mInference done 1322/2913. 0.5436 s / img. ETA=0:16:17
[32m[11/11 00:03:13 d2.evaluation.evaluator]: [0mInference done 1331/2913. 0.5436 s / img. ETA=0:16:11
[32m[11/11 00:03:19 d2.evaluation.evaluator]: [0mInference done 1340/2913. 0.5435 s / img. ETA=0:16:05
[32m[11/11 00:03:24 d2.evaluation.evaluator]: [0mInference done 1349/2913. 0.5435 s / img. ETA=0:16:00
[32m[11/11 00:03:30 d2.evaluation.evaluator]: [0mInference done 1358/2913. 0.5434 s / img. ETA=0:15:54
[32m[11/11 00:03:35 d2.evaluation.evaluator]: [0mInference done 1367/2913. 0.5434 s / img. ETA=0:15:49
[32m[11/11 00:03:41 d2.evaluation.evaluator]: [0mInference done 1376/2913. 0.5434 s / img. ETA=0:15:43
[32m[11/11 00:03:46 d2.evaluation.evaluator]: [0mInference done 1385/2913. 0.5434 s / img. ETA=0:15:37
[32m[11/11 00:03:51 d2.evaluation.evaluator]: [0mInference done 1394/2913. 0.5434 s / img. ETA=0:15:32
[32m[11/11 00:03:57 d2.evaluation.evaluator]: [0mInference done 1403/2913. 0.5434 s / img. ETA=0:15:26
[32m[11/11 00:04:02 d2.evaluation.evaluator]: [0mInference done 1412/2913. 0.5434 s / img. ETA=0:15:21
[32m[11/11 00:04:08 d2.evaluation.evaluator]: [0mInference done 1421/2913. 0.5434 s / img. ETA=0:15:15
[32m[11/11 00:04:13 d2.evaluation.evaluator]: [0mInference done 1430/2913. 0.5434 s / img. ETA=0:15:09
[32m[11/11 00:04:19 d2.evaluation.evaluator]: [0mInference done 1439/2913. 0.5435 s / img. ETA=0:15:04
[32m[11/11 00:04:24 d2.evaluation.evaluator]: [0mInference done 1448/2913. 0.5435 s / img. ETA=0:14:58
[32m[11/11 00:04:29 d2.evaluation.evaluator]: [0mInference done 1457/2913. 0.5435 s / img. ETA=0:14:53
[32m[11/11 00:04:35 d2.evaluation.evaluator]: [0mInference done 1466/2913. 0.5435 s / img. ETA=0:14:47
[32m[11/11 00:04:41 d2.evaluation.evaluator]: [0mInference done 1475/2913. 0.5435 s / img. ETA=0:14:42
[32m[11/11 00:04:46 d2.evaluation.evaluator]: [0mInference done 1484/2913. 0.5435 s / img. ETA=0:14:36
[32m[11/11 00:04:52 d2.evaluation.evaluator]: [0mInference done 1493/2913. 0.5435 s / img. ETA=0:14:31
[32m[11/11 00:04:57 d2.evaluation.evaluator]: [0mInference done 1502/2913. 0.5435 s / img. ETA=0:14:25
[32m[11/11 00:05:03 d2.evaluation.evaluator]: [0mInference done 1511/2913. 0.5435 s / img. ETA=0:14:19
[32m[11/11 00:05:08 d2.evaluation.evaluator]: [0mInference done 1520/2913. 0.5435 s / img. ETA=0:14:14
[32m[11/11 00:05:14 d2.evaluation.evaluator]: [0mInference done 1529/2913. 0.5435 s / img. ETA=0:14:08
[32m[11/11 00:05:19 d2.evaluation.evaluator]: [0mInference done 1538/2913. 0.5435 s / img. ETA=0:14:03
[32m[11/11 00:05:25 d2.evaluation.evaluator]: [0mInference done 1547/2913. 0.5435 s / img. ETA=0:13:57
[32m[11/11 00:05:30 d2.evaluation.evaluator]: [0mInference done 1556/2913. 0.5435 s / img. ETA=0:13:52
[32m[11/11 00:05:35 d2.evaluation.evaluator]: [0mInference done 1565/2913. 0.5435 s / img. ETA=0:13:46
[32m[11/11 00:05:41 d2.evaluation.evaluator]: [0mInference done 1574/2913. 0.5435 s / img. ETA=0:13:40
[32m[11/11 00:05:46 d2.evaluation.evaluator]: [0mInference done 1583/2913. 0.5435 s / img. ETA=0:13:35
[32m[11/11 00:05:52 d2.evaluation.evaluator]: [0mInference done 1592/2913. 0.5435 s / img. ETA=0:13:29
[32m[11/11 00:05:57 d2.evaluation.evaluator]: [0mInference done 1601/2913. 0.5435 s / img. ETA=0:13:24
[32m[11/11 00:06:03 d2.evaluation.evaluator]: [0mInference done 1610/2913. 0.5435 s / img. ETA=0:13:18
[32m[11/11 00:06:08 d2.evaluation.evaluator]: [0mInference done 1619/2913. 0.5435 s / img. ETA=0:13:13
[32m[11/11 00:06:14 d2.evaluation.evaluator]: [0mInference done 1628/2913. 0.5435 s / img. ETA=0:13:07
[32m[11/11 00:06:19 d2.evaluation.evaluator]: [0mInference done 1636/2913. 0.5435 s / img. ETA=0:13:02
[32m[11/11 00:06:24 d2.evaluation.evaluator]: [0mInference done 1645/2913. 0.5435 s / img. ETA=0:12:57
[32m[11/11 00:06:30 d2.evaluation.evaluator]: [0mInference done 1654/2913. 0.5435 s / img. ETA=0:12:51
[32m[11/11 00:06:35 d2.evaluation.evaluator]: [0mInference done 1663/2913. 0.5435 s / img. ETA=0:12:46
[32m[11/11 00:06:41 d2.evaluation.evaluator]: [0mInference done 1672/2913. 0.5435 s / img. ETA=0:12:40
[32m[11/11 00:06:46 d2.evaluation.evaluator]: [0mInference done 1681/2913. 0.5435 s / img. ETA=0:12:35
[32m[11/11 00:06:52 d2.evaluation.evaluator]: [0mInference done 1690/2913. 0.5435 s / img. ETA=0:12:29
[32m[11/11 00:06:57 d2.evaluation.evaluator]: [0mInference done 1699/2913. 0.5435 s / img. ETA=0:12:24
[32m[11/11 00:07:03 d2.evaluation.evaluator]: [0mInference done 1708/2913. 0.5435 s / img. ETA=0:12:18
[32m[11/11 00:07:08 d2.evaluation.evaluator]: [0mInference done 1717/2913. 0.5435 s / img. ETA=0:12:12
[32m[11/11 00:07:14 d2.evaluation.evaluator]: [0mInference done 1726/2913. 0.5435 s / img. ETA=0:12:07
[32m[11/11 00:07:19 d2.evaluation.evaluator]: [0mInference done 1735/2913. 0.5436 s / img. ETA=0:12:01
[32m[11/11 00:07:25 d2.evaluation.evaluator]: [0mInference done 1744/2913. 0.5436 s / img. ETA=0:11:56
[32m[11/11 00:07:30 d2.evaluation.evaluator]: [0mInference done 1753/2913. 0.5436 s / img. ETA=0:11:50
[32m[11/11 00:07:35 d2.evaluation.evaluator]: [0mInference done 1762/2913. 0.5436 s / img. ETA=0:11:45
[32m[11/11 00:07:41 d2.evaluation.evaluator]: [0mInference done 1771/2913. 0.5436 s / img. ETA=0:11:39
[32m[11/11 00:07:46 d2.evaluation.evaluator]: [0mInference done 1780/2913. 0.5436 s / img. ETA=0:11:34
[32m[11/11 00:07:52 d2.evaluation.evaluator]: [0mInference done 1789/2913. 0.5436 s / img. ETA=0:11:28
[32m[11/11 00:07:57 d2.evaluation.evaluator]: [0mInference done 1798/2913. 0.5436 s / img. ETA=0:11:23
[32m[11/11 00:08:03 d2.evaluation.evaluator]: [0mInference done 1807/2913. 0.5436 s / img. ETA=0:11:17
[32m[11/11 00:08:08 d2.evaluation.evaluator]: [0mInference done 1816/2913. 0.5436 s / img. ETA=0:11:11
[32m[11/11 00:08:14 d2.evaluation.evaluator]: [0mInference done 1825/2913. 0.5436 s / img. ETA=0:11:06
[32m[11/11 00:08:19 d2.evaluation.evaluator]: [0mInference done 1834/2913. 0.5436 s / img. ETA=0:11:01
[32m[11/11 00:08:25 d2.evaluation.evaluator]: [0mInference done 1843/2913. 0.5436 s / img. ETA=0:10:55
[32m[11/11 00:08:30 d2.evaluation.evaluator]: [0mInference done 1852/2913. 0.5436 s / img. ETA=0:10:49
[32m[11/11 00:08:36 d2.evaluation.evaluator]: [0mInference done 1861/2913. 0.5436 s / img. ETA=0:10:44
[32m[11/11 00:08:41 d2.evaluation.evaluator]: [0mInference done 1870/2913. 0.5436 s / img. ETA=0:10:38
[32m[11/11 00:08:47 d2.evaluation.evaluator]: [0mInference done 1879/2913. 0.5436 s / img. ETA=0:10:33
[32m[11/11 00:08:52 d2.evaluation.evaluator]: [0mInference done 1888/2913. 0.5436 s / img. ETA=0:10:27
[32m[11/11 00:08:58 d2.evaluation.evaluator]: [0mInference done 1897/2913. 0.5436 s / img. ETA=0:10:22
[32m[11/11 00:09:03 d2.evaluation.evaluator]: [0mInference done 1906/2913. 0.5436 s / img. ETA=0:10:16
[32m[11/11 00:09:09 d2.evaluation.evaluator]: [0mInference done 1915/2913. 0.5436 s / img. ETA=0:10:11
[32m[11/11 00:09:14 d2.evaluation.evaluator]: [0mInference done 1924/2913. 0.5436 s / img. ETA=0:10:05
[32m[11/11 00:09:19 d2.evaluation.evaluator]: [0mInference done 1933/2913. 0.5436 s / img. ETA=0:10:00
[32m[11/11 00:09:25 d2.evaluation.evaluator]: [0mInference done 1942/2913. 0.5436 s / img. ETA=0:09:54
[32m[11/11 00:09:30 d2.evaluation.evaluator]: [0mInference done 1951/2913. 0.5436 s / img. ETA=0:09:49
[32m[11/11 00:09:36 d2.evaluation.evaluator]: [0mInference done 1960/2913. 0.5436 s / img. ETA=0:09:43
[32m[11/11 00:09:41 d2.evaluation.evaluator]: [0mInference done 1969/2913. 0.5436 s / img. ETA=0:09:37
[32m[11/11 00:09:46 d2.evaluation.evaluator]: [0mInference done 1977/2913. 0.5436 s / img. ETA=0:09:33
[32m[11/11 00:09:52 d2.evaluation.evaluator]: [0mInference done 1986/2913. 0.5436 s / img. ETA=0:09:27
[32m[11/11 00:09:57 d2.evaluation.evaluator]: [0mInference done 1995/2913. 0.5436 s / img. ETA=0:09:22
[32m[11/11 00:10:03 d2.evaluation.evaluator]: [0mInference done 2004/2913. 0.5436 s / img. ETA=0:09:16
[32m[11/11 00:10:08 d2.evaluation.evaluator]: [0mInference done 2013/2913. 0.5436 s / img. ETA=0:09:11
[32m[11/11 00:10:14 d2.evaluation.evaluator]: [0mInference done 2022/2913. 0.5437 s / img. ETA=0:09:05
[32m[11/11 00:10:19 d2.evaluation.evaluator]: [0mInference done 2031/2913. 0.5437 s / img. ETA=0:08:59
[32m[11/11 00:10:25 d2.evaluation.evaluator]: [0mInference done 2040/2913. 0.5437 s / img. ETA=0:08:54
[32m[11/11 00:10:30 d2.evaluation.evaluator]: [0mInference done 2049/2913. 0.5437 s / img. ETA=0:08:48
[32m[11/11 00:10:36 d2.evaluation.evaluator]: [0mInference done 2058/2913. 0.5437 s / img. ETA=0:08:43
[32m[11/11 00:10:41 d2.evaluation.evaluator]: [0mInference done 2067/2913. 0.5437 s / img. ETA=0:08:37
[32m[11/11 00:10:47 d2.evaluation.evaluator]: [0mInference done 2076/2913. 0.5437 s / img. ETA=0:08:32
[32m[11/11 00:10:52 d2.evaluation.evaluator]: [0mInference done 2085/2913. 0.5437 s / img. ETA=0:08:26
[32m[11/11 00:10:58 d2.evaluation.evaluator]: [0mInference done 2094/2913. 0.5438 s / img. ETA=0:08:21
[32m[11/11 00:11:03 d2.evaluation.evaluator]: [0mInference done 2103/2913. 0.5438 s / img. ETA=0:08:15
[32m[11/11 00:11:09 d2.evaluation.evaluator]: [0mInference done 2112/2913. 0.5438 s / img. ETA=0:08:10
[32m[11/11 00:11:14 d2.evaluation.evaluator]: [0mInference done 2121/2913. 0.5438 s / img. ETA=0:08:04
[32m[11/11 00:11:20 d2.evaluation.evaluator]: [0mInference done 2130/2913. 0.5438 s / img. ETA=0:07:59
[32m[11/11 00:11:25 d2.evaluation.evaluator]: [0mInference done 2139/2913. 0.5438 s / img. ETA=0:07:53
[32m[11/11 00:11:30 d2.evaluation.evaluator]: [0mInference done 2148/2913. 0.5438 s / img. ETA=0:07:48
[32m[11/11 00:11:36 d2.evaluation.evaluator]: [0mInference done 2156/2913. 0.5438 s / img. ETA=0:07:43
[32m[11/11 00:11:41 d2.evaluation.evaluator]: [0mInference done 2165/2913. 0.5438 s / img. ETA=0:07:37
[32m[11/11 00:11:47 d2.evaluation.evaluator]: [0mInference done 2174/2913. 0.5438 s / img. ETA=0:07:32
[32m[11/11 00:11:52 d2.evaluation.evaluator]: [0mInference done 2183/2913. 0.5439 s / img. ETA=0:07:26
[32m[11/11 00:11:57 d2.evaluation.evaluator]: [0mInference done 2192/2913. 0.5439 s / img. ETA=0:07:21
[32m[11/11 00:12:03 d2.evaluation.evaluator]: [0mInference done 2201/2913. 0.5439 s / img. ETA=0:07:15
[32m[11/11 00:12:09 d2.evaluation.evaluator]: [0mInference done 2210/2913. 0.5439 s / img. ETA=0:07:10
[32m[11/11 00:12:14 d2.evaluation.evaluator]: [0mInference done 2219/2913. 0.5439 s / img. ETA=0:07:04
[32m[11/11 00:12:19 d2.evaluation.evaluator]: [0mInference done 2228/2913. 0.5439 s / img. ETA=0:06:59
[32m[11/11 00:12:25 d2.evaluation.evaluator]: [0mInference done 2237/2913. 0.5439 s / img. ETA=0:06:53
[32m[11/11 00:12:30 d2.evaluation.evaluator]: [0mInference done 2246/2913. 0.5439 s / img. ETA=0:06:48
[32m[11/11 00:12:36 d2.evaluation.evaluator]: [0mInference done 2255/2913. 0.5439 s / img. ETA=0:06:42
[32m[11/11 00:12:41 d2.evaluation.evaluator]: [0mInference done 2264/2913. 0.5439 s / img. ETA=0:06:37
[32m[11/11 00:12:47 d2.evaluation.evaluator]: [0mInference done 2273/2913. 0.5439 s / img. ETA=0:06:31
[32m[11/11 00:12:52 d2.evaluation.evaluator]: [0mInference done 2282/2913. 0.5439 s / img. ETA=0:06:26
[32m[11/11 00:12:58 d2.evaluation.evaluator]: [0mInference done 2291/2913. 0.5439 s / img. ETA=0:06:20
[32m[11/11 00:13:03 d2.evaluation.evaluator]: [0mInference done 2300/2913. 0.5439 s / img. ETA=0:06:15
[32m[11/11 00:13:09 d2.evaluation.evaluator]: [0mInference done 2309/2913. 0.5439 s / img. ETA=0:06:09
[32m[11/11 00:13:14 d2.evaluation.evaluator]: [0mInference done 2318/2913. 0.5438 s / img. ETA=0:06:04
[32m[11/11 00:13:20 d2.evaluation.evaluator]: [0mInference done 2327/2913. 0.5438 s / img. ETA=0:05:58
[32m[11/11 00:13:25 d2.evaluation.evaluator]: [0mInference done 2336/2913. 0.5438 s / img. ETA=0:05:53
[32m[11/11 00:13:31 d2.evaluation.evaluator]: [0mInference done 2345/2913. 0.5438 s / img. ETA=0:05:47
[32m[11/11 00:13:36 d2.evaluation.evaluator]: [0mInference done 2354/2913. 0.5438 s / img. ETA=0:05:42
[32m[11/11 00:13:42 d2.evaluation.evaluator]: [0mInference done 2363/2913. 0.5438 s / img. ETA=0:05:36
[32m[11/11 00:13:47 d2.evaluation.evaluator]: [0mInference done 2372/2913. 0.5437 s / img. ETA=0:05:30
[32m[11/11 00:13:52 d2.evaluation.evaluator]: [0mInference done 2381/2913. 0.5438 s / img. ETA=0:05:25
[32m[11/11 00:13:58 d2.evaluation.evaluator]: [0mInference done 2390/2913. 0.5437 s / img. ETA=0:05:19
[32m[11/11 00:14:03 d2.evaluation.evaluator]: [0mInference done 2399/2913. 0.5437 s / img. ETA=0:05:14
[32m[11/11 00:14:09 d2.evaluation.evaluator]: [0mInference done 2408/2913. 0.5438 s / img. ETA=0:05:08
[32m[11/11 00:14:14 d2.evaluation.evaluator]: [0mInference done 2417/2913. 0.5437 s / img. ETA=0:05:03
[32m[11/11 00:14:20 d2.evaluation.evaluator]: [0mInference done 2426/2913. 0.5437 s / img. ETA=0:04:57
[32m[11/11 00:14:25 d2.evaluation.evaluator]: [0mInference done 2435/2913. 0.5437 s / img. ETA=0:04:52
[32m[11/11 00:14:31 d2.evaluation.evaluator]: [0mInference done 2444/2913. 0.5437 s / img. ETA=0:04:46
[32m[11/11 00:14:36 d2.evaluation.evaluator]: [0mInference done 2453/2913. 0.5437 s / img. ETA=0:04:41
[32m[11/11 00:14:42 d2.evaluation.evaluator]: [0mInference done 2462/2913. 0.5437 s / img. ETA=0:04:35
[32m[11/11 00:14:47 d2.evaluation.evaluator]: [0mInference done 2471/2913. 0.5437 s / img. ETA=0:04:30
[32m[11/11 00:14:52 d2.evaluation.evaluator]: [0mInference done 2480/2913. 0.5436 s / img. ETA=0:04:24
[32m[11/11 00:14:58 d2.evaluation.evaluator]: [0mInference done 2489/2913. 0.5436 s / img. ETA=0:04:19
[32m[11/11 00:15:03 d2.evaluation.evaluator]: [0mInference done 2498/2913. 0.5436 s / img. ETA=0:04:13
[32m[11/11 00:15:09 d2.evaluation.evaluator]: [0mInference done 2507/2913. 0.5436 s / img. ETA=0:04:08
[32m[11/11 00:15:14 d2.evaluation.evaluator]: [0mInference done 2515/2913. 0.5436 s / img. ETA=0:04:03
[32m[11/11 00:15:19 d2.evaluation.evaluator]: [0mInference done 2524/2913. 0.5436 s / img. ETA=0:03:57
[32m[11/11 00:15:25 d2.evaluation.evaluator]: [0mInference done 2533/2913. 0.5436 s / img. ETA=0:03:52
[32m[11/11 00:15:30 d2.evaluation.evaluator]: [0mInference done 2542/2913. 0.5435 s / img. ETA=0:03:46
[32m[11/11 00:15:36 d2.evaluation.evaluator]: [0mInference done 2551/2913. 0.5435 s / img. ETA=0:03:41
[32m[11/11 00:15:41 d2.evaluation.evaluator]: [0mInference done 2560/2913. 0.5435 s / img. ETA=0:03:35
[32m[11/11 00:15:47 d2.evaluation.evaluator]: [0mInference done 2569/2913. 0.5435 s / img. ETA=0:03:30
[32m[11/11 00:15:52 d2.evaluation.evaluator]: [0mInference done 2578/2913. 0.5435 s / img. ETA=0:03:24
[32m[11/11 00:15:58 d2.evaluation.evaluator]: [0mInference done 2587/2913. 0.5435 s / img. ETA=0:03:19
[32m[11/11 00:16:03 d2.evaluation.evaluator]: [0mInference done 2596/2913. 0.5435 s / img. ETA=0:03:13
[32m[11/11 00:16:09 d2.evaluation.evaluator]: [0mInference done 2605/2913. 0.5435 s / img. ETA=0:03:08
[32m[11/11 00:16:14 d2.evaluation.evaluator]: [0mInference done 2614/2913. 0.5435 s / img. ETA=0:03:02
[32m[11/11 00:16:19 d2.evaluation.evaluator]: [0mInference done 2623/2913. 0.5435 s / img. ETA=0:02:57
[32m[11/11 00:16:25 d2.evaluation.evaluator]: [0mInference done 2632/2913. 0.5435 s / img. ETA=0:02:51
[32m[11/11 00:16:30 d2.evaluation.evaluator]: [0mInference done 2641/2913. 0.5435 s / img. ETA=0:02:46
[32m[11/11 00:16:36 d2.evaluation.evaluator]: [0mInference done 2650/2913. 0.5434 s / img. ETA=0:02:40
[32m[11/11 00:16:41 d2.evaluation.evaluator]: [0mInference done 2659/2913. 0.5434 s / img. ETA=0:02:35
[32m[11/11 00:16:47 d2.evaluation.evaluator]: [0mInference done 2668/2913. 0.5434 s / img. ETA=0:02:29
[32m[11/11 00:16:52 d2.evaluation.evaluator]: [0mInference done 2677/2913. 0.5434 s / img. ETA=0:02:24
[32m[11/11 00:16:57 d2.evaluation.evaluator]: [0mInference done 2685/2913. 0.5435 s / img. ETA=0:02:19
[32m[11/11 00:17:03 d2.evaluation.evaluator]: [0mInference done 2694/2913. 0.5435 s / img. ETA=0:02:13
[32m[11/11 00:17:08 d2.evaluation.evaluator]: [0mInference done 2703/2913. 0.5435 s / img. ETA=0:02:08
[32m[11/11 00:17:14 d2.evaluation.evaluator]: [0mInference done 2712/2913. 0.5435 s / img. ETA=0:02:02
[32m[11/11 00:17:19 d2.evaluation.evaluator]: [0mInference done 2721/2913. 0.5435 s / img. ETA=0:01:57
[32m[11/11 00:17:25 d2.evaluation.evaluator]: [0mInference done 2730/2913. 0.5434 s / img. ETA=0:01:51
[32m[11/11 00:17:30 d2.evaluation.evaluator]: [0mInference done 2739/2913. 0.5434 s / img. ETA=0:01:46
[32m[11/11 00:17:36 d2.evaluation.evaluator]: [0mInference done 2748/2913. 0.5434 s / img. ETA=0:01:40
[32m[11/11 00:17:41 d2.evaluation.evaluator]: [0mInference done 2757/2913. 0.5434 s / img. ETA=0:01:35
[32m[11/11 00:17:46 d2.evaluation.evaluator]: [0mInference done 2766/2913. 0.5434 s / img. ETA=0:01:29
[32m[11/11 00:17:52 d2.evaluation.evaluator]: [0mInference done 2775/2913. 0.5434 s / img. ETA=0:01:24
[32m[11/11 00:17:57 d2.evaluation.evaluator]: [0mInference done 2784/2913. 0.5434 s / img. ETA=0:01:18
[32m[11/11 00:18:03 d2.evaluation.evaluator]: [0mInference done 2793/2913. 0.5434 s / img. ETA=0:01:13
[32m[11/11 00:18:08 d2.evaluation.evaluator]: [0mInference done 2802/2913. 0.5434 s / img. ETA=0:01:07
[32m[11/11 00:18:14 d2.evaluation.evaluator]: [0mInference done 2811/2913. 0.5434 s / img. ETA=0:01:02
[32m[11/11 00:18:19 d2.evaluation.evaluator]: [0mInference done 2820/2913. 0.5434 s / img. ETA=0:00:56
[32m[11/11 00:18:25 d2.evaluation.evaluator]: [0mInference done 2829/2913. 0.5433 s / img. ETA=0:00:51
[32m[11/11 00:18:30 d2.evaluation.evaluator]: [0mInference done 2838/2913. 0.5433 s / img. ETA=0:00:45
[32m[11/11 00:18:36 d2.evaluation.evaluator]: [0mInference done 2847/2913. 0.5433 s / img. ETA=0:00:40
[32m[11/11 00:18:41 d2.evaluation.evaluator]: [0mInference done 2856/2913. 0.5433 s / img. ETA=0:00:34
[32m[11/11 00:18:47 d2.evaluation.evaluator]: [0mInference done 2865/2913. 0.5433 s / img. ETA=0:00:29
[32m[11/11 00:18:52 d2.evaluation.evaluator]: [0mInference done 2874/2913. 0.5433 s / img. ETA=0:00:23
[32m[11/11 00:18:57 d2.evaluation.evaluator]: [0mInference done 2883/2913. 0.5433 s / img. ETA=0:00:18
[32m[11/11 00:19:03 d2.evaluation.evaluator]: [0mInference done 2892/2913. 0.5433 s / img. ETA=0:00:12
[32m[11/11 00:19:08 d2.evaluation.evaluator]: [0mInference done 2901/2913. 0.5433 s / img. ETA=0:00:07
[32m[11/11 00:19:14 d2.evaluation.evaluator]: [0mInference done 2910/2913. 0.5432 s / img. ETA=0:00:01
[32m[11/11 00:19:16 d2.evaluation.evaluator]: [0mTotal inference time: 0:29:36.875412 (0.611030 s / img per device, on 1 devices)
[32m[11/11 00:19:16 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:26:19 (0.543245 s / img per device, on 1 devices)
[32m[11/11 00:19:16 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/11 00:19:17 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/1shot/inference/coco_instances_results.json
[32m[11/11 00:19:17 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.41s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.93 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.40 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.008
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.023
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.052
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.022
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.035
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.035
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.061
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.201
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.815 | 2.266  | 0.464  | 0.077 | 0.912 | 5.215 |
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : 0.81
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: 2.27
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: 0.46
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : 0.91
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/11 00:19:20 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP    | category   | AP    | category         | AP    |
|:------------|:------|:-----------|:------|:-----------------|:------|
| backpac     | 0.203 | rop        | 1.893 | ven              | 5.828 |
| helme       | 0.009 | dril       | 0.000 | fire extinguishe | 0.022 |
| helmet-ligh | 0.000 | survivo    | 0.003 | cell phon        | 0.000 |
| cub         | 0.191 |            |       |                  |       |
[32m[11/11 00:19:20 d2.engine.defaults]: [0mEvaluation results for val_f_2 in csv format:
[32m[11/11 00:19:20 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/11 00:19:20 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/11 00:19:20 d2.evaluation.testing]: [0mcopypaste: 0.8150,2.2656,0.4639,0.0770,0.9121,5.2153
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
