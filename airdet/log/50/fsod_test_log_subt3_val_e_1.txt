Command Line Args: Namespace(config_file='configs/fsod/finetune_R_50_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/50_old/R_50_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_e_1',)"], resume=False)
[32m[11/16 09:35:31 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/16 09:35:32 detectron2]: [0mEnvironment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.2 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   sm_35, sm_37, sm_50, sm_52, sm_60, sm_61, sm_70, sm_75
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   Tesla P100-SXM2-16GB
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.6.0a0+35d732a @/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75
fvcore                  0.1.5.post20210825
cv2                     4.2.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[32m[11/16 09:35:32 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/fsod/finetune_R_50_C4_1x_subt3.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './output/50_old/R_50_C4_1x/model_final.pth', 'DATASETS.TEST', "('val_e_1',)"], resume=False)
[32m[11/16 09:35:32 detectron2]: [0mContents of args.config_file=configs/fsod/finetune_R_50_C4_1x_subt3.yaml:
_BASE_: "Base-FSOD-C4.yaml"
MODEL:
  WEIGHTS: "./output/fsod/R_50_C4_1x/model_final.pth" 
  MASK_ON: False
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res2", "res3", "res4"]
  BACKBONE:
    FREEZE_AT: 5
DATASETS:
  TRAIN: ("coco_2017_train_voc_10_shot",)
  TEST: ("val_a_0",)
  TESTSHOTS: 3
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.0
  STEPS: (2000, 3000)
  MAX_ITER: 3000
  WARMUP_ITERS: 200
INPUT:
  FS:
    FEW_SHOT: True
    SUPPORT_WAY: 2
    SUPPORT_SHOT: 1
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
OUTPUT_DIR: './output/fsod/test_dir/R_101_C4_1x_subt/3shot'

[32m[11/16 09:35:32 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('val_e_1',)
  TESTSHOTS: 3
  TRAIN: ('coco_2017_train_voc_10_shot',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  FS:
    FEW_SHOT: True
    SUPPORT_SHOT: 1
    SUPPORT_WAY: 2
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (440, 472, 504, 536, 568, 600)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  HIFT:
    CHANNEL: 256
    DIM_FFN: 512
    HEADS: 4
    LAYERS_DEC: 2
    LAYERS_ENC: 1
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: FsodRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FsodRPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 128
    IN_FEATURES: ['res2', 'res3', 'res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: FsodRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 1
    POSITIVE_FRACTION: 0.5
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/50_old/R_50_C4_1x/model_final.pth
OUTPUT_DIR: ./output/fsod/test_dir/R_101_C4_1x_subt/3shot
SEED: 1
SOLVER:
  BACKBONE_LR_FACTOR: 0.5
  BASE_LR: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 8000
  CHECKPOINT_PERIOD_EVA: 500
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  HEAD_LR_FACTOR: 2.0
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  START_SAVE_ITER: 72000
  STEPS: (2000, 3000)
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 200
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
  VIS: True
  VIS_DIR: vis/val_b_1_3shot
  VIS_THRESH: 0.8
VERSION: 2
VIS_PERIOD: 0
[32m[11/16 09:35:32 detectron2]: [0mFull config saved to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/config.yaml
[32m[11/16 09:35:39 d2.engine.defaults]: [0mModel:
FsodRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): FsodRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): FsodRes5ROIHeads(
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FsodFastRCNNOutputLayers(
      (locator): LocatorNet(
        (support_fc): Sequential(
          (0): Linear(in_features=49, out_features=2048, bias=True)
          (1): Linear(in_features=2048, out_features=1, bias=True)
        )
        (conv1): Sequential(
          (0): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (mlp): Sequential(
          (0): Linear(in_features=100352, out_features=1024, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1024, out_features=1024, bias=True)
          (3): ReLU(inplace=True)
        )
        (loc_fc): Linear(in_features=1024, out_features=4, bias=True)
      )
      (conv_1): Conv2d(4096, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (conv_3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_pr): Linear(in_features=2048, out_features=2, bias=True)
      (conv_cor): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (cls_score_cor): Linear(in_features=2048, out_features=2, bias=True)
      (fc_1): Linear(in_features=4096, out_features=2048, bias=True)
      (fc_2): Linear(in_features=2048, out_features=2048, bias=True)
      (cls_score_fc): Linear(in_features=2048, out_features=2, bias=True)
      (avgpool): AvgPool2d(kernel_size=3, stride=1, padding=0)
      (avgpool_fc): AvgPool2d(kernel_size=7, stride=7, padding=0)
    )
  )
  (fuser): FuseNet(
    (conv1): Sequential(
      (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (dw_conv): Sequential(
      (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1), groups=2)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (mlp): Sequential(
      (0): Linear(in_features=1024, out_features=1024, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=1024, out_features=1, bias=True)
      (3): ReLU(inplace=True)
      (4): Softmax(dim=0)
    )
  )
  (apn): APN(
    (r1): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (gconv1): GConv(
      (conv_g): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), groups=2)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (r3): Interp(
      (conv): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
)
[32m[11/16 09:35:39 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./output/50_old/R_50_C4_1x/model_final.pth ...
[32m[11/16 09:35:40 d2.data.datasets.coco]: [0mLoaded 3014 images in COCO format from datasets/SUBT/use/val_e_1/new_annotations/val_e_1.json
[32m[11/16 09:35:40 d2.data.build]: [0mDistribution of instances among all 10 categories:
[36m|  category   | #instances   |  category  | #instances   |   category    | #instances   |
|:-----------:|:-------------|:----------:|:-------------|:-------------:|:-------------|
|   backpac   | 1275         |    rop     | 1106         |      ven      | 0            |
|    helme    | 2468         |    dril    | 0            | fire exting.. | 0            |
| helmet-ligh | 0            |  survivo   | 1578         |   cell phon   | 0            |
|     cub     | 0            |            |              |               |              |
|    total    | 6427         |            |              |               |              |[0m
[32m[11/16 09:35:40 d2.data.common]: [0mSerializing 3014 elements to byte tensors and concatenating them all ...
[32m[11/16 09:35:40 d2.data.common]: [0mSerialized dataset takes 0.82 MiB
[32m[11/16 09:35:40 d2.data.dataset_mapper]: [0mAugmentations used in training: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[32m[11/16 09:35:41 d2.evaluation.evaluator]: [0mStart inference on 3014 images
[32m[11/16 09:35:45 d2.evaluation.evaluator]: [0mInference done 11/3014. 0.2567 s / img. ETA=0:17:02
[32m[11/16 09:35:50 d2.evaluation.evaluator]: [0mInference done 27/3014. 0.2593 s / img. ETA=0:16:28
[32m[11/16 09:35:55 d2.evaluation.evaluator]: [0mInference done 42/3014. 0.2623 s / img. ETA=0:16:31
[32m[11/16 09:36:01 d2.evaluation.evaluator]: [0mInference done 57/3014. 0.2648 s / img. ETA=0:16:31
[32m[11/16 09:36:06 d2.evaluation.evaluator]: [0mInference done 73/3014. 0.2640 s / img. ETA=0:16:22
[32m[11/16 09:36:11 d2.evaluation.evaluator]: [0mInference done 87/3014. 0.2625 s / img. ETA=0:16:35
[32m[11/16 09:36:16 d2.evaluation.evaluator]: [0mInference done 103/3014. 0.2632 s / img. ETA=0:16:25
[32m[11/16 09:36:21 d2.evaluation.evaluator]: [0mInference done 118/3014. 0.2638 s / img. ETA=0:16:21
[32m[11/16 09:36:26 d2.evaluation.evaluator]: [0mInference done 133/3014. 0.2651 s / img. ETA=0:16:15
[32m[11/16 09:36:32 d2.evaluation.evaluator]: [0mInference done 149/3014. 0.2651 s / img. ETA=0:16:07
[32m[11/16 09:36:37 d2.evaluation.evaluator]: [0mInference done 165/3014. 0.2647 s / img. ETA=0:15:59
[32m[11/16 09:36:42 d2.evaluation.evaluator]: [0mInference done 181/3014. 0.2645 s / img. ETA=0:15:53
[32m[11/16 09:36:48 d2.evaluation.evaluator]: [0mInference done 197/3014. 0.2644 s / img. ETA=0:15:46
[32m[11/16 09:36:53 d2.evaluation.evaluator]: [0mInference done 212/3014. 0.2642 s / img. ETA=0:15:40
[32m[11/16 09:36:58 d2.evaluation.evaluator]: [0mInference done 228/3014. 0.2636 s / img. ETA=0:15:33
[32m[11/16 09:37:03 d2.evaluation.evaluator]: [0mInference done 243/3014. 0.2640 s / img. ETA=0:15:29
[32m[11/16 09:37:08 d2.evaluation.evaluator]: [0mInference done 258/3014. 0.2644 s / img. ETA=0:15:25
[32m[11/16 09:37:13 d2.evaluation.evaluator]: [0mInference done 273/3014. 0.2647 s / img. ETA=0:15:20
[32m[11/16 09:37:18 d2.evaluation.evaluator]: [0mInference done 288/3014. 0.2646 s / img. ETA=0:15:16
[32m[11/16 09:37:23 d2.evaluation.evaluator]: [0mInference done 303/3014. 0.2647 s / img. ETA=0:15:12
[32m[11/16 09:37:28 d2.evaluation.evaluator]: [0mInference done 318/3014. 0.2648 s / img. ETA=0:15:07
[32m[11/16 09:37:34 d2.evaluation.evaluator]: [0mInference done 333/3014. 0.2648 s / img. ETA=0:15:02
[32m[11/16 09:37:39 d2.evaluation.evaluator]: [0mInference done 348/3014. 0.2651 s / img. ETA=0:14:59
[32m[11/16 09:37:44 d2.evaluation.evaluator]: [0mInference done 363/3014. 0.2655 s / img. ETA=0:14:55
[32m[11/16 09:37:49 d2.evaluation.evaluator]: [0mInference done 378/3014. 0.2656 s / img. ETA=0:14:50
[32m[11/16 09:37:54 d2.evaluation.evaluator]: [0mInference done 393/3014. 0.2660 s / img. ETA=0:14:47
[32m[11/16 09:38:00 d2.evaluation.evaluator]: [0mInference done 409/3014. 0.2659 s / img. ETA=0:14:41
[32m[11/16 09:38:05 d2.evaluation.evaluator]: [0mInference done 424/3014. 0.2659 s / img. ETA=0:14:36
[32m[11/16 09:38:10 d2.evaluation.evaluator]: [0mInference done 439/3014. 0.2659 s / img. ETA=0:14:31
[32m[11/16 09:38:15 d2.evaluation.evaluator]: [0mInference done 454/3014. 0.2659 s / img. ETA=0:14:26
[32m[11/16 09:38:20 d2.evaluation.evaluator]: [0mInference done 469/3014. 0.2657 s / img. ETA=0:14:21
[32m[11/16 09:38:25 d2.evaluation.evaluator]: [0mInference done 484/3014. 0.2656 s / img. ETA=0:14:16
[32m[11/16 09:38:30 d2.evaluation.evaluator]: [0mInference done 499/3014. 0.2656 s / img. ETA=0:14:11
[32m[11/16 09:38:35 d2.evaluation.evaluator]: [0mInference done 514/3014. 0.2655 s / img. ETA=0:14:06
[32m[11/16 09:38:40 d2.evaluation.evaluator]: [0mInference done 529/3014. 0.2655 s / img. ETA=0:14:01
[32m[11/16 09:38:46 d2.evaluation.evaluator]: [0mInference done 544/3014. 0.2658 s / img. ETA=0:13:56
[32m[11/16 09:38:51 d2.evaluation.evaluator]: [0mInference done 559/3014. 0.2658 s / img. ETA=0:13:51
[32m[11/16 09:38:56 d2.evaluation.evaluator]: [0mInference done 575/3014. 0.2657 s / img. ETA=0:13:45
[32m[11/16 09:39:01 d2.evaluation.evaluator]: [0mInference done 590/3014. 0.2657 s / img. ETA=0:13:40
[32m[11/16 09:39:06 d2.evaluation.evaluator]: [0mInference done 605/3014. 0.2658 s / img. ETA=0:13:35
[32m[11/16 09:39:11 d2.evaluation.evaluator]: [0mInference done 618/3014. 0.2659 s / img. ETA=0:13:34
[32m[11/16 09:39:17 d2.evaluation.evaluator]: [0mInference done 634/3014. 0.2659 s / img. ETA=0:13:28
[32m[11/16 09:39:22 d2.evaluation.evaluator]: [0mInference done 649/3014. 0.2661 s / img. ETA=0:13:23
[32m[11/16 09:39:27 d2.evaluation.evaluator]: [0mInference done 665/3014. 0.2659 s / img. ETA=0:13:17
[32m[11/16 09:39:33 d2.evaluation.evaluator]: [0mInference done 680/3014. 0.2660 s / img. ETA=0:13:13
[32m[11/16 09:39:38 d2.evaluation.evaluator]: [0mInference done 696/3014. 0.2660 s / img. ETA=0:13:07
[32m[11/16 09:39:43 d2.evaluation.evaluator]: [0mInference done 711/3014. 0.2660 s / img. ETA=0:13:02
[32m[11/16 09:39:48 d2.evaluation.evaluator]: [0mInference done 726/3014. 0.2661 s / img. ETA=0:12:57
[32m[11/16 09:39:53 d2.evaluation.evaluator]: [0mInference done 742/3014. 0.2659 s / img. ETA=0:12:51
[32m[11/16 09:39:59 d2.evaluation.evaluator]: [0mInference done 757/3014. 0.2660 s / img. ETA=0:12:46
[32m[11/16 09:40:04 d2.evaluation.evaluator]: [0mInference done 772/3014. 0.2661 s / img. ETA=0:12:41
[32m[11/16 09:40:09 d2.evaluation.evaluator]: [0mInference done 788/3014. 0.2661 s / img. ETA=0:12:36
[32m[11/16 09:40:14 d2.evaluation.evaluator]: [0mInference done 801/3014. 0.2661 s / img. ETA=0:12:33
[32m[11/16 09:40:19 d2.evaluation.evaluator]: [0mInference done 816/3014. 0.2660 s / img. ETA=0:12:28
[32m[11/16 09:40:25 d2.evaluation.evaluator]: [0mInference done 832/3014. 0.2660 s / img. ETA=0:12:22
[32m[11/16 09:40:30 d2.evaluation.evaluator]: [0mInference done 847/3014. 0.2662 s / img. ETA=0:12:18
[32m[11/16 09:40:35 d2.evaluation.evaluator]: [0mInference done 863/3014. 0.2662 s / img. ETA=0:12:12
[32m[11/16 09:40:40 d2.evaluation.evaluator]: [0mInference done 878/3014. 0.2662 s / img. ETA=0:12:07
[32m[11/16 09:40:46 d2.evaluation.evaluator]: [0mInference done 894/3014. 0.2661 s / img. ETA=0:12:01
[32m[11/16 09:40:51 d2.evaluation.evaluator]: [0mInference done 909/3014. 0.2660 s / img. ETA=0:11:56
[32m[11/16 09:40:56 d2.evaluation.evaluator]: [0mInference done 924/3014. 0.2661 s / img. ETA=0:11:51
[32m[11/16 09:41:01 d2.evaluation.evaluator]: [0mInference done 940/3014. 0.2660 s / img. ETA=0:11:45
[32m[11/16 09:41:06 d2.evaluation.evaluator]: [0mInference done 955/3014. 0.2661 s / img. ETA=0:11:40
[32m[11/16 09:41:11 d2.evaluation.evaluator]: [0mInference done 970/3014. 0.2660 s / img. ETA=0:11:35
[32m[11/16 09:41:16 d2.evaluation.evaluator]: [0mInference done 985/3014. 0.2660 s / img. ETA=0:11:30
[32m[11/16 09:41:21 d2.evaluation.evaluator]: [0mInference done 1000/3014. 0.2659 s / img. ETA=0:11:24
[32m[11/16 09:41:27 d2.evaluation.evaluator]: [0mInference done 1015/3014. 0.2661 s / img. ETA=0:11:20
[32m[11/16 09:41:32 d2.evaluation.evaluator]: [0mInference done 1030/3014. 0.2661 s / img. ETA=0:11:14
[32m[11/16 09:41:37 d2.evaluation.evaluator]: [0mInference done 1045/3014. 0.2662 s / img. ETA=0:11:10
[32m[11/16 09:41:42 d2.evaluation.evaluator]: [0mInference done 1060/3014. 0.2662 s / img. ETA=0:11:04
[32m[11/16 09:41:47 d2.evaluation.evaluator]: [0mInference done 1075/3014. 0.2663 s / img. ETA=0:10:59
[32m[11/16 09:41:52 d2.evaluation.evaluator]: [0mInference done 1091/3014. 0.2662 s / img. ETA=0:10:53
[32m[11/16 09:41:57 d2.evaluation.evaluator]: [0mInference done 1106/3014. 0.2662 s / img. ETA=0:10:48
[32m[11/16 09:42:02 d2.evaluation.evaluator]: [0mInference done 1121/3014. 0.2662 s / img. ETA=0:10:43
[32m[11/16 09:42:08 d2.evaluation.evaluator]: [0mInference done 1136/3014. 0.2662 s / img. ETA=0:10:38
[32m[11/16 09:42:13 d2.evaluation.evaluator]: [0mInference done 1150/3014. 0.2662 s / img. ETA=0:10:34
[32m[11/16 09:42:18 d2.evaluation.evaluator]: [0mInference done 1165/3014. 0.2662 s / img. ETA=0:10:29
[32m[11/16 09:42:23 d2.evaluation.evaluator]: [0mInference done 1181/3014. 0.2661 s / img. ETA=0:10:23
[32m[11/16 09:42:28 d2.evaluation.evaluator]: [0mInference done 1197/3014. 0.2661 s / img. ETA=0:10:17
[32m[11/16 09:42:33 d2.evaluation.evaluator]: [0mInference done 1212/3014. 0.2661 s / img. ETA=0:10:12
[32m[11/16 09:42:38 d2.evaluation.evaluator]: [0mInference done 1227/3014. 0.2662 s / img. ETA=0:10:07
[32m[11/16 09:42:43 d2.evaluation.evaluator]: [0mInference done 1242/3014. 0.2662 s / img. ETA=0:10:02
[32m[11/16 09:42:49 d2.evaluation.evaluator]: [0mInference done 1258/3014. 0.2662 s / img. ETA=0:09:56
[32m[11/16 09:42:54 d2.evaluation.evaluator]: [0mInference done 1273/3014. 0.2661 s / img. ETA=0:09:51
[32m[11/16 09:42:59 d2.evaluation.evaluator]: [0mInference done 1287/3014. 0.2662 s / img. ETA=0:09:47
[32m[11/16 09:43:04 d2.evaluation.evaluator]: [0mInference done 1302/3014. 0.2661 s / img. ETA=0:09:41
[32m[11/16 09:43:09 d2.evaluation.evaluator]: [0mInference done 1317/3014. 0.2661 s / img. ETA=0:09:36
[32m[11/16 09:43:14 d2.evaluation.evaluator]: [0mInference done 1332/3014. 0.2662 s / img. ETA=0:09:31
[32m[11/16 09:43:19 d2.evaluation.evaluator]: [0mInference done 1347/3014. 0.2663 s / img. ETA=0:09:26
[32m[11/16 09:43:25 d2.evaluation.evaluator]: [0mInference done 1362/3014. 0.2662 s / img. ETA=0:09:21
[32m[11/16 09:43:30 d2.evaluation.evaluator]: [0mInference done 1377/3014. 0.2662 s / img. ETA=0:09:16
[32m[11/16 09:43:35 d2.evaluation.evaluator]: [0mInference done 1392/3014. 0.2663 s / img. ETA=0:09:11
[32m[11/16 09:43:40 d2.evaluation.evaluator]: [0mInference done 1407/3014. 0.2663 s / img. ETA=0:09:06
[32m[11/16 09:43:45 d2.evaluation.evaluator]: [0mInference done 1422/3014. 0.2664 s / img. ETA=0:09:01
[32m[11/16 09:43:50 d2.evaluation.evaluator]: [0mInference done 1437/3014. 0.2664 s / img. ETA=0:08:56
[32m[11/16 09:43:56 d2.evaluation.evaluator]: [0mInference done 1453/3014. 0.2664 s / img. ETA=0:08:51
[32m[11/16 09:44:01 d2.evaluation.evaluator]: [0mInference done 1468/3014. 0.2664 s / img. ETA=0:08:46
[32m[11/16 09:44:06 d2.evaluation.evaluator]: [0mInference done 1484/3014. 0.2664 s / img. ETA=0:08:40
[32m[11/16 09:44:11 d2.evaluation.evaluator]: [0mInference done 1499/3014. 0.2664 s / img. ETA=0:08:35
[32m[11/16 09:44:16 d2.evaluation.evaluator]: [0mInference done 1514/3014. 0.2664 s / img. ETA=0:08:30
[32m[11/16 09:44:21 d2.evaluation.evaluator]: [0mInference done 1529/3014. 0.2664 s / img. ETA=0:08:25
[32m[11/16 09:44:27 d2.evaluation.evaluator]: [0mInference done 1545/3014. 0.2664 s / img. ETA=0:08:19
[32m[11/16 09:44:32 d2.evaluation.evaluator]: [0mInference done 1561/3014. 0.2663 s / img. ETA=0:08:13
[32m[11/16 09:44:37 d2.evaluation.evaluator]: [0mInference done 1576/3014. 0.2663 s / img. ETA=0:08:08
[32m[11/16 09:44:42 d2.evaluation.evaluator]: [0mInference done 1591/3014. 0.2664 s / img. ETA=0:08:03
[32m[11/16 09:44:47 d2.evaluation.evaluator]: [0mInference done 1606/3014. 0.2664 s / img. ETA=0:07:58
[32m[11/16 09:44:52 d2.evaluation.evaluator]: [0mInference done 1622/3014. 0.2663 s / img. ETA=0:07:52
[32m[11/16 09:44:57 d2.evaluation.evaluator]: [0mInference done 1637/3014. 0.2664 s / img. ETA=0:07:47
[32m[11/16 09:45:02 d2.evaluation.evaluator]: [0mInference done 1652/3014. 0.2663 s / img. ETA=0:07:42
[32m[11/16 09:45:07 d2.evaluation.evaluator]: [0mInference done 1666/3014. 0.2665 s / img. ETA=0:07:38
[32m[11/16 09:45:13 d2.evaluation.evaluator]: [0mInference done 1681/3014. 0.2665 s / img. ETA=0:07:33
[32m[11/16 09:45:18 d2.evaluation.evaluator]: [0mInference done 1696/3014. 0.2666 s / img. ETA=0:07:28
[32m[11/16 09:45:23 d2.evaluation.evaluator]: [0mInference done 1711/3014. 0.2666 s / img. ETA=0:07:23
[32m[11/16 09:45:28 d2.evaluation.evaluator]: [0mInference done 1726/3014. 0.2665 s / img. ETA=0:07:17
[32m[11/16 09:45:33 d2.evaluation.evaluator]: [0mInference done 1742/3014. 0.2665 s / img. ETA=0:07:12
[32m[11/16 09:45:39 d2.evaluation.evaluator]: [0mInference done 1758/3014. 0.2663 s / img. ETA=0:07:06
[32m[11/16 09:45:44 d2.evaluation.evaluator]: [0mInference done 1774/3014. 0.2661 s / img. ETA=0:07:00
[32m[11/16 09:45:49 d2.evaluation.evaluator]: [0mInference done 1790/3014. 0.2660 s / img. ETA=0:06:55
[32m[11/16 09:45:54 d2.evaluation.evaluator]: [0mInference done 1806/3014. 0.2658 s / img. ETA=0:06:49
[32m[11/16 09:45:59 d2.evaluation.evaluator]: [0mInference done 1822/3014. 0.2657 s / img. ETA=0:06:44
[32m[11/16 09:46:04 d2.evaluation.evaluator]: [0mInference done 1837/3014. 0.2656 s / img. ETA=0:06:38
[32m[11/16 09:46:09 d2.evaluation.evaluator]: [0mInference done 1851/3014. 0.2657 s / img. ETA=0:06:34
[32m[11/16 09:46:14 d2.evaluation.evaluator]: [0mInference done 1865/3014. 0.2659 s / img. ETA=0:06:29
[32m[11/16 09:46:20 d2.evaluation.evaluator]: [0mInference done 1879/3014. 0.2661 s / img. ETA=0:06:25
[32m[11/16 09:46:25 d2.evaluation.evaluator]: [0mInference done 1893/3014. 0.2663 s / img. ETA=0:06:20
[32m[11/16 09:46:30 d2.evaluation.evaluator]: [0mInference done 1909/3014. 0.2662 s / img. ETA=0:06:15
[32m[11/16 09:46:35 d2.evaluation.evaluator]: [0mInference done 1925/3014. 0.2660 s / img. ETA=0:06:09
[32m[11/16 09:46:40 d2.evaluation.evaluator]: [0mInference done 1941/3014. 0.2659 s / img. ETA=0:06:04
[32m[11/16 09:46:45 d2.evaluation.evaluator]: [0mInference done 1957/3014. 0.2658 s / img. ETA=0:05:58
[32m[11/16 09:46:50 d2.evaluation.evaluator]: [0mInference done 1972/3014. 0.2658 s / img. ETA=0:05:53
[32m[11/16 09:46:56 d2.evaluation.evaluator]: [0mInference done 1986/3014. 0.2660 s / img. ETA=0:05:48
[32m[11/16 09:47:01 d2.evaluation.evaluator]: [0mInference done 2001/3014. 0.2661 s / img. ETA=0:05:43
[32m[11/16 09:47:06 d2.evaluation.evaluator]: [0mInference done 2015/3014. 0.2662 s / img. ETA=0:05:39
[32m[11/16 09:47:11 d2.evaluation.evaluator]: [0mInference done 2030/3014. 0.2663 s / img. ETA=0:05:34
[32m[11/16 09:47:16 d2.evaluation.evaluator]: [0mInference done 2045/3014. 0.2663 s / img. ETA=0:05:29
[32m[11/16 09:47:22 d2.evaluation.evaluator]: [0mInference done 2060/3014. 0.2663 s / img. ETA=0:05:24
[32m[11/16 09:47:27 d2.evaluation.evaluator]: [0mInference done 2075/3014. 0.2664 s / img. ETA=0:05:19
[32m[11/16 09:47:32 d2.evaluation.evaluator]: [0mInference done 2090/3014. 0.2663 s / img. ETA=0:05:14
[32m[11/16 09:47:37 d2.evaluation.evaluator]: [0mInference done 2106/3014. 0.2661 s / img. ETA=0:05:08
[32m[11/16 09:47:42 d2.evaluation.evaluator]: [0mInference done 2123/3014. 0.2660 s / img. ETA=0:05:02
[32m[11/16 09:47:47 d2.evaluation.evaluator]: [0mInference done 2139/3014. 0.2659 s / img. ETA=0:04:56
[32m[11/16 09:47:53 d2.evaluation.evaluator]: [0mInference done 2154/3014. 0.2660 s / img. ETA=0:04:52
[32m[11/16 09:47:58 d2.evaluation.evaluator]: [0mInference done 2168/3014. 0.2661 s / img. ETA=0:04:47
[32m[11/16 09:48:03 d2.evaluation.evaluator]: [0mInference done 2182/3014. 0.2662 s / img. ETA=0:04:42
[32m[11/16 09:48:08 d2.evaluation.evaluator]: [0mInference done 2197/3014. 0.2662 s / img. ETA=0:04:37
[32m[11/16 09:48:13 d2.evaluation.evaluator]: [0mInference done 2211/3014. 0.2663 s / img. ETA=0:04:33
[32m[11/16 09:48:18 d2.evaluation.evaluator]: [0mInference done 2225/3014. 0.2664 s / img. ETA=0:04:28
[32m[11/16 09:48:23 d2.evaluation.evaluator]: [0mInference done 2239/3014. 0.2666 s / img. ETA=0:04:23
[32m[11/16 09:48:28 d2.evaluation.evaluator]: [0mInference done 2255/3014. 0.2664 s / img. ETA=0:04:18
[32m[11/16 09:48:33 d2.evaluation.evaluator]: [0mInference done 2271/3014. 0.2663 s / img. ETA=0:04:12
[32m[11/16 09:48:39 d2.evaluation.evaluator]: [0mInference done 2287/3014. 0.2662 s / img. ETA=0:04:07
[32m[11/16 09:48:44 d2.evaluation.evaluator]: [0mInference done 2303/3014. 0.2661 s / img. ETA=0:04:01
[32m[11/16 09:48:49 d2.evaluation.evaluator]: [0mInference done 2319/3014. 0.2660 s / img. ETA=0:03:56
[32m[11/16 09:48:54 d2.evaluation.evaluator]: [0mInference done 2333/3014. 0.2661 s / img. ETA=0:03:51
[32m[11/16 09:48:59 d2.evaluation.evaluator]: [0mInference done 2347/3014. 0.2663 s / img. ETA=0:03:46
[32m[11/16 09:49:05 d2.evaluation.evaluator]: [0mInference done 2362/3014. 0.2664 s / img. ETA=0:03:41
[32m[11/16 09:49:10 d2.evaluation.evaluator]: [0mInference done 2376/3014. 0.2666 s / img. ETA=0:03:37
[32m[11/16 09:49:15 d2.evaluation.evaluator]: [0mInference done 2391/3014. 0.2666 s / img. ETA=0:03:32
[32m[11/16 09:49:20 d2.evaluation.evaluator]: [0mInference done 2406/3014. 0.2667 s / img. ETA=0:03:26
[32m[11/16 09:49:26 d2.evaluation.evaluator]: [0mInference done 2421/3014. 0.2668 s / img. ETA=0:03:21
[32m[11/16 09:49:31 d2.evaluation.evaluator]: [0mInference done 2437/3014. 0.2667 s / img. ETA=0:03:16
[32m[11/16 09:49:36 d2.evaluation.evaluator]: [0mInference done 2453/3014. 0.2666 s / img. ETA=0:03:10
[32m[11/16 09:49:41 d2.evaluation.evaluator]: [0mInference done 2469/3014. 0.2664 s / img. ETA=0:03:05
[32m[11/16 09:49:46 d2.evaluation.evaluator]: [0mInference done 2485/3014. 0.2663 s / img. ETA=0:02:59
[32m[11/16 09:49:51 d2.evaluation.evaluator]: [0mInference done 2501/3014. 0.2663 s / img. ETA=0:02:54
[32m[11/16 09:49:57 d2.evaluation.evaluator]: [0mInference done 2515/3014. 0.2665 s / img. ETA=0:02:49
[32m[11/16 09:50:02 d2.evaluation.evaluator]: [0mInference done 2530/3014. 0.2665 s / img. ETA=0:02:44
[32m[11/16 09:50:07 d2.evaluation.evaluator]: [0mInference done 2545/3014. 0.2665 s / img. ETA=0:02:39
[32m[11/16 09:50:12 d2.evaluation.evaluator]: [0mInference done 2560/3014. 0.2666 s / img. ETA=0:02:34
[32m[11/16 09:50:18 d2.evaluation.evaluator]: [0mInference done 2575/3014. 0.2667 s / img. ETA=0:02:29
[32m[11/16 09:50:23 d2.evaluation.evaluator]: [0mInference done 2590/3014. 0.2668 s / img. ETA=0:02:24
[32m[11/16 09:50:28 d2.evaluation.evaluator]: [0mInference done 2605/3014. 0.2668 s / img. ETA=0:02:19
[32m[11/16 09:50:33 d2.evaluation.evaluator]: [0mInference done 2621/3014. 0.2667 s / img. ETA=0:02:13
[32m[11/16 09:50:38 d2.evaluation.evaluator]: [0mInference done 2637/3014. 0.2666 s / img. ETA=0:02:08
[32m[11/16 09:50:44 d2.evaluation.evaluator]: [0mInference done 2653/3014. 0.2665 s / img. ETA=0:02:02
[32m[11/16 09:50:49 d2.evaluation.evaluator]: [0mInference done 2669/3014. 0.2664 s / img. ETA=0:01:57
[32m[11/16 09:50:54 d2.evaluation.evaluator]: [0mInference done 2684/3014. 0.2664 s / img. ETA=0:01:52
[32m[11/16 09:50:59 d2.evaluation.evaluator]: [0mInference done 2698/3014. 0.2665 s / img. ETA=0:01:47
[32m[11/16 09:51:04 d2.evaluation.evaluator]: [0mInference done 2712/3014. 0.2666 s / img. ETA=0:01:42
[32m[11/16 09:51:09 d2.evaluation.evaluator]: [0mInference done 2726/3014. 0.2667 s / img. ETA=0:01:38
[32m[11/16 09:51:15 d2.evaluation.evaluator]: [0mInference done 2740/3014. 0.2669 s / img. ETA=0:01:33
[32m[11/16 09:51:20 d2.evaluation.evaluator]: [0mInference done 2754/3014. 0.2670 s / img. ETA=0:01:28
[32m[11/16 09:51:25 d2.evaluation.evaluator]: [0mInference done 2768/3014. 0.2671 s / img. ETA=0:01:23
[32m[11/16 09:51:30 d2.evaluation.evaluator]: [0mInference done 2782/3014. 0.2673 s / img. ETA=0:01:19
[32m[11/16 09:51:35 d2.evaluation.evaluator]: [0mInference done 2796/3014. 0.2674 s / img. ETA=0:01:14
[32m[11/16 09:51:40 d2.evaluation.evaluator]: [0mInference done 2810/3014. 0.2674 s / img. ETA=0:01:09
[32m[11/16 09:51:46 d2.evaluation.evaluator]: [0mInference done 2824/3014. 0.2675 s / img. ETA=0:01:04
[32m[11/16 09:51:51 d2.evaluation.evaluator]: [0mInference done 2838/3014. 0.2676 s / img. ETA=0:01:00
[32m[11/16 09:51:56 d2.evaluation.evaluator]: [0mInference done 2852/3014. 0.2677 s / img. ETA=0:00:55
[32m[11/16 09:52:01 d2.evaluation.evaluator]: [0mInference done 2866/3014. 0.2678 s / img. ETA=0:00:50
[32m[11/16 09:52:06 d2.evaluation.evaluator]: [0mInference done 2881/3014. 0.2678 s / img. ETA=0:00:45
[32m[11/16 09:52:11 d2.evaluation.evaluator]: [0mInference done 2895/3014. 0.2680 s / img. ETA=0:00:40
[32m[11/16 09:52:17 d2.evaluation.evaluator]: [0mInference done 2909/3014. 0.2682 s / img. ETA=0:00:35
[32m[11/16 09:52:22 d2.evaluation.evaluator]: [0mInference done 2924/3014. 0.2682 s / img. ETA=0:00:30
[32m[11/16 09:52:27 d2.evaluation.evaluator]: [0mInference done 2938/3014. 0.2683 s / img. ETA=0:00:26
[32m[11/16 09:52:32 d2.evaluation.evaluator]: [0mInference done 2954/3014. 0.2682 s / img. ETA=0:00:20
[32m[11/16 09:52:38 d2.evaluation.evaluator]: [0mInference done 2971/3014. 0.2681 s / img. ETA=0:00:14
[32m[11/16 09:52:43 d2.evaluation.evaluator]: [0mInference done 2987/3014. 0.2680 s / img. ETA=0:00:09
[32m[11/16 09:52:48 d2.evaluation.evaluator]: [0mInference done 3003/3014. 0.2679 s / img. ETA=0:00:03
[32m[11/16 09:52:52 d2.evaluation.evaluator]: [0mTotal inference time: 0:17:08.555263 (0.341826 s / img per device, on 1 devices)
[32m[11/16 09:52:52 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:13:25 (0.267815 s / img per device, on 1 devices)
[32m[11/16 09:52:52 fewx.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/16 09:52:52 fewx.evaluation.coco_evaluation]: [0mSaving results to ./output/fsod/test_dir/R_101_C4_1x_subt/3shot/inference/coco_instances_results.json
[32m[11/16 09:52:52 fewx.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.23s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 1.95 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.26 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.058
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.154
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.032
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.052
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.160
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.111
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.146
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.146
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.002
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.125
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.334
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 5.771 | 15.359 | 3.213  | 0.109 | 5.246 | 15.993 |
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP  : 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP50: 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> AP75: 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APs : 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APm : 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for VOC 20 categories =======> APl : 0.00
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP  : nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP50: nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> AP75: nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APs : nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APm : nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mEvaluation results for Non VOC 60 categories =======> APl : nan
[32m[11/16 09:52:55 fewx.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category    | AP     | category   | AP    | category         | AP   |
|:------------|:-------|:-----------|:------|:-----------------|:-----|
| backpac     | 11.239 | rop        | 0.031 | ven              | nan  |
| helme       | 6.345  | dril       | nan   | fire extinguishe | nan  |
| helmet-ligh | nan    | survivo    | 5.470 | cell phon        | nan  |
| cub         | nan    |            |       |                  |      |
[32m[11/16 09:52:55 d2.engine.defaults]: [0mEvaluation results for val_e_1 in csv format:
[32m[11/16 09:52:55 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/16 09:52:55 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/16 09:52:55 d2.evaluation.testing]: [0mcopypaste: 5.7711,15.3593,3.2128,0.1087,5.2464,15.9926
/usr/local/miniconda/envs/fewx/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
